name: GQCP

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    # Environment variables for the build environment (build.env)
    env:
      CONDA_HOME: /usr/share/miniconda
      LIBINT_DATA_PATH: ${CONDA_HOME}/share/libint/2.3.1/basis

    steps:
  
    # Install CMake and python through GitHub actions
    - uses: snickerbockers/cmake-configure@prerel1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7' 
    - uses: actions/checkout@v1

    - name: Install Miniconda
      run: |
        rm -rf ${CONDA_HOME};
        mkdir -p $HOME/download;
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
        bash $HOME/download/miniconda.sh -b -p ${CONDA_HOME};

    - name: Configure Conda
      run: |   
        source ${CONDA_HOME}/bin/activate
        hash -r
        conda config --set always_yes yes --set changeps1 no
        
    - name: Install some GQCP dependencies through Conda
      run: |   
        conda install -c conda-forge cmake=3.13 boost-cpp=1.69.0 eigen blas mkl pybind11 benchmark numpy;
        conda install -c gqcg libint spectra;
        conda install -c intel mkl-include mkl-static intel-openmp;

    - name: Install Libcint
      # Note that we install Libcint in ${CONDA_HOME}
      run: |
        cd /tmp
        git clone -b develop https://github.com/GQCG/libcint.git
        cd libcint
        mkdir build && cd build
        ${CONDA_HOME}/bin/cmake .. -DUSE_MKL=TRUE -DCMAKE_INSTALL_PREFIX=${CONDA_HOME} -DCMAKE_PREFIX_PATH=${CONDA_HOME}
        make -j3 && sudo make install
        
    # Build & test the library 
    - name: Build GQCP and run tests
      run: |
        mkdir build && cd build
        ${CONDA_HOME}/bin/cmake .. -DBUILD_TESTS=TRUE -DBUILD_BENCHMARKS=TRUE -DBUILD_PYTHON_BINDINGS=TRUE -DCMAKE_INSTALL_PREFIX=~/.local -DCMAKE_PREFIX_PATH=${CONDA_HOME}
        make -j10 && sudo make install
        
    # Run the benchmarks
    - name: Run benchmarks
      run: |
        cd build && cd benchmarks
        ./doci_case --benchmark_counters_tabular=true
        ./doci_matrix --benchmark_counters_tabular=true
        ./doci_matvec --benchmark_counters_tabular=true
        ./fci_matrix --benchmark_counters_tabular=true
        ./fci_matvec --benchmark_counters_tabular=true
        ./hubbard_diagonalization --benchmark_counters_tabular=true
        ./hubbard_matrix --benchmark_counters_tabular=true
        ./hubbard_matvec --benchmark_counters_tabular=true

    # Test if the installed library links properly to external driver
    # This is the final step to verify a successful build: if it does not error it updates the env variables
    - name: Check external linking
      run: |
        cd /tmp
        git clone https://github.com/GQCG/gqcp-link.git
        cd gqcp-link
        mkdir build && cd build
        ${CONDA_HOME}/bin/cmake .. -DCMAKE_PREFIX_PATH=${CONDA_HOME} -DGQCP_INSTALL_PREFIX=~/.local -Dgqcp_DIR=/home/runner/.local/cmake
        make -j3 && ./test_driver
        echo "::set-env name=SLACK_MESSAGE::$MESSAGE_SUCCESSFUL" 
        echo "::set-env name=SLACK_COLOR::$COLOR_SUCCESSFUL"
