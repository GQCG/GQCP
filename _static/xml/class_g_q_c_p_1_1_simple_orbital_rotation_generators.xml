<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_simple_orbital_rotation_generators" kind="class" language="C++" prot="public">
    <compoundname>GQCP::SimpleOrbitalRotationGenerators</compoundname>
    <includes refid="_simple_orbital_rotation_generators_8hpp" local="no">SimpleOrbitalRotationGenerators.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
      <param>
        <type>typename _DerivedOrbitalRotationGenerators</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="46" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a41f858a7486ce4755ec7db4c2f039119" prot="public" static="no">
        <type>_DerivedOrbitalRotationGenerators</type>
        <definition>using GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::DerivedOrbitalRotationGenerators =  _DerivedOrbitalRotationGenerators</definition>
        <argsstring></argsstring>
        <name>DerivedOrbitalRotationGenerators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="49" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a9abcf0d35957ae90bc13aed325dfcf7e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::number_of_orbitals</definition>
        <argsstring></argsstring>
        <name>number_of_orbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="53" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a7f350e8b2ceaa2f4ed9b535c7322978e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" kindref="member">Scalar</ref> &gt;</type>
        <definition>VectorX&lt;Scalar&gt; GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::v</definition>
        <argsstring></argsstring>
        <name>v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="56" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1ab48bcc5fd37420de2ac9e7c94235903b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::SimpleOrbitalRotationGenerators</definition>
        <argsstring>(const VectorX&lt; Scalar &gt; &amp;v)</argsstring>
        <name>SimpleOrbitalRotationGenerators</name>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MARK: Constructors Create a <lsquo/>SimpleOrbitalRotationGenerator<rsquo/> from a given vector containing orbital rotation generators kappa_PQ with P&gt;Q.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The orbital rotation generators represented as a vector that corresponds to the strict lower triangle of the kappa matrix (kappa_PQ with P&gt;Q). The entries of the matrix are stored in a <computeroutput>column major</computeroutput>format in this vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="69" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1ac4fe3eb410b6388209d8d3501968936e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::SimpleOrbitalRotationGenerators</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;kappa)</argsstring>
        <name>SimpleOrbitalRotationGenerators</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>kappa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <lsquo/>SimpleOrbitalRotationGenerator<rsquo/> from a given kappa matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kappa</parametername>
</parameternamelist>
<parameterdescription>
<para>The orbital rotation generators represented as a square matrix that corresponds to the full anti-Hermitian kappa matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="79" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a35873aaca35f5f4fc1f40d63557fab6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" kindref="member">Scalar</ref> &gt;</type>
        <definition>const SquareMatrix&lt;Scalar&gt; GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::asMatrix</definition>
        <argsstring>() const</argsstring>
        <name>asMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MARK: Access <simplesect kind="return"><para>The anti-Hermitian orbital rotation generator matrix kappa. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="128" column="24" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a0dc21c5af16e41317a390c43155c4ae1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" kindref="member">Scalar</ref> &gt; &amp;</type>
        <definition>const VectorX&lt;Scalar&gt;&amp; GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::asVector</definition>
        <argsstring>() const</argsstring>
        <name>asVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The orbital rotation generators as the strict lower triangle of the kappa matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="138" column="19" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a6de01ae1ba7fe5820fbd29e6629685f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::numberOfOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>numberOfOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of spin-orbitals that can be rotated using these orbital rotation generators. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="144" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a7e00234875bc9a932f341f0b0f935a96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a41f858a7486ce4755ec7db4c2f039119" kindref="member">DerivedOrbitalRotationGenerators</ref></type>
        <definition>static DerivedOrbitalRotationGenerators GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;::FromOccupationTypes</definition>
        <argsstring>(const DerivedOrbitalRotationGenerators &amp;generators, const OccupationType row_occupation_type, const OccupationType column_occupation_type, const size_t K)</argsstring>
        <name>FromOccupationTypes</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a41f858a7486ce4755ec7db4c2f039119" kindref="member">DerivedOrbitalRotationGenerators</ref> &amp;</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246b" kindref="member">OccupationType</ref></type>
          <declname>row_occupation_type</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246b" kindref="member">OccupationType</ref></type>
          <declname>column_occupation_type</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>K</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MARK: Named constructors Construct orbital rotation generators by adding redundant (i.e. 0) generators to the given occupation_type - occupation_type generators.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generators</parametername>
</parameternamelist>
<parameterdescription>
<para>The orbital rotation generators of the specified occupation types. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_occupation_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The occupation type of the rows of the orbital rotation generator kappa matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column_occupation_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The occupation type of the column of the orbital rotation generator kappa matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>The total number of orbitals. In the general(ized) case these are spinors, for restricted/unrestricted these will be spin-orbitals.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The &apos;full&apos; orbital rotation generators from the given row_occupation_type - column_occupation_type generators. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="102" column="45" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="102" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>MARK: SimpleOrbitalRotationGenerator implementation A set of orbital rotation generators that can be represented by a single vector.</para>
<para>This class is used as a base class for <computeroutput>ROrbitalRotationGenerator</computeroutput> and <computeroutput>GOrbitalRotationGenerator</computeroutput>, since they are both expressed using a single vector of kappa_PQ values, as opposed to <computeroutput>UOrbitalRotationGenerator</computeroutput>, which uses separate vectors for alpha- and beta- generators. The word &apos;simple&apos; is used here as an antonym for &apos;compound&apos;.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used for an orbital rotation generator: real or complex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_DerivedOrbitalRotationGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the orbital rotation generator that derives from this class, enabling <ref refid="class_g_q_c_p_1_1_c_r_t_p" kindref="compound">CRTP</ref> and compile-time polymorphism. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::SimpleOrbitalRotationGenerators&lt; _Scalar, _DerivedOrbitalRotationGenerators &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" line="42" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleOrbitalRotationGenerators.hpp" bodystart="42" bodyend="145"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a35873aaca35f5f4fc1f40d63557fab6e" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>asMatrix</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a0dc21c5af16e41317a390c43155c4ae1" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>asVector</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a41f858a7486ce4755ec7db4c2f039119" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>DerivedOrbitalRotationGenerators</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a7e00234875bc9a932f341f0b0f935a96" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>FromOccupationTypes</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a9abcf0d35957ae90bc13aed325dfcf7e" prot="private" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>number_of_orbitals</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a6de01ae1ba7fe5820fbd29e6629685f0" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>numberOfOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a08409bc973314549c81df7c8558729fb" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>Scalar</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1ab48bcc5fd37420de2ac9e7c94235903b" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>SimpleOrbitalRotationGenerators</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1ac4fe3eb410b6388209d8d3501968936e" prot="public" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>SimpleOrbitalRotationGenerators</name></member>
      <member refid="class_g_q_c_p_1_1_simple_orbital_rotation_generators_1a7f350e8b2ceaa2f4ed9b535c7322978e" prot="private" virt="non-virtual"><scope>GQCP::SimpleOrbitalRotationGenerators</scope><name>v</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
