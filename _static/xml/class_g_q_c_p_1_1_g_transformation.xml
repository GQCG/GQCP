<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_g_transformation" kind="class" language="C++" prot="public">
    <compoundname>GQCP::GTransformation</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_simple_transformation" prot="public" virt="non-virtual">GQCP::SimpleTransformation&lt; _Scalar, GTransformation&lt; _Scalar &gt; &gt;</basecompoundref>
    <includes refid="_g_transformation_8hpp" local="no">GTransformation.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::GTransformation&lt; _Scalar &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="45" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_g_transformation_1aba8b9f0293e09b2658283639341b4c89" prot="private" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved" kindref="compound">SpinResolved</ref>&lt; size_t &gt;</type>
        <definition>SpinResolved&lt;size_t&gt; GQCP::GTransformation&lt; _Scalar &gt;::K</definition>
        <argsstring></argsstring>
        <name>K</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="50" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1af0a06a95f3ac730b767a26a3b14ab805" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::GTransformation&lt; _Scalar &gt;::GTransformation</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;T)</argsstring>
        <name>GTransformation</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref></computeroutput> from the transformation matrix that it encapsulates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The transformation matrix that collects the expansion coefficients of the new basis (vectors) in the old basis as columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="63" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1af71b9f36f524da82d19e7bf740ca91ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::GTransformation&lt; _Scalar &gt;::GTransformation</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;T, const size_t K_alpha, const size_t K_beta)</argsstring>
        <name>GTransformation</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>K_alpha</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>K_beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref></computeroutput> from the transformation matrix that it encapsulates, where the number of basis functions used for the expansion of the alpha components may differ from the number of basis functions for the beta components.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The transformation matrix that collects the expansion coefficients of the new basis (vectors) in the old basis as columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K_alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of basis functions that are used for the expansion of the alpha components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K_beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of basis functions that are used for the expansion of the beta components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="75" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1a35294c4513ec448c7740080377781eb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::GTransformation&lt; _Scalar &gt;::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The part of the general transformation matrix that describes the expansion coefficients of the alpha components of the spinors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="130" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1a5c03564330bdb423500ded04404f7fe2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::GTransformation&lt; _Scalar &gt;::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The part of the general transformation matrix that describes the expansion coefficients of the beta components of the spinors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="135" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1a6bdc555980660dec5c3594ef4ad2199d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::GTransformation&lt; _Scalar &gt;::component</definition>
        <argsstring>(const Spin sigma) const</argsstring>
        <name>component</name>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1ac6f590924cfbbf11847a4ce174fe6e4f" kindref="member">Spin</ref></type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Alpha or beta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The part of the general transformation that describes the spinors of the requested component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="142" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="142" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1a511cfa0246d40baa45e7dcee1f79cacb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt;</type>
        <definition>static GTransformation&lt;Scalar&gt; GQCP::GTransformation&lt; _Scalar &gt;::FromUnrestricted</definition>
        <argsstring>(const UTransformation&lt; Scalar &gt; &amp;u_transformation)</argsstring>
        <name>FromUnrestricted</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>u_transformation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert an <computeroutput><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref></computeroutput> into its generalized counterpart.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u_transformation</parametername>
</parameternamelist>
<parameterdescription>
<para>The unrestricted transformation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <computeroutput><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref></computeroutput> that corresponds to the <computeroutput><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="96" column="28" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="96" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_g_transformation_1a31d3196ed11543a85afe55d53cf96cb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" kindref="member">Scalar</ref> &gt;</type>
        <definition>static GTransformation&lt;Scalar&gt; GQCP::GTransformation&lt; _Scalar &gt;::Identity</definition>
        <argsstring>(const size_t K_alpha, const size_t K_beta)</argsstring>
        <name>Identity</name>
        <param>
          <type>const size_t</type>
          <declname>K_alpha</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>K_beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct an identity transformation related to different number of alpha and beta atomic spinors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="117" column="28" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="117" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A &apos;general&apos; basis transformation, i.e. a general, full-spinor basis transformation where the transformation mixes the alpha- and beta components of the two-component spinors.</para>
<para>In general, we adopt the convention outlined in (<ulink url="https://gqcg-res.github.io/knowdes/spinor-transformations.html">https://gqcg-res.github.io/knowdes/spinor-transformations.html</ulink>), where the new orbitals&apos; coefficients can be found in the respective <bold>column</bold> of the related transformation matrix.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used for a transformation coefficient: real or complex. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>GQCP::BasisTransformable&lt; GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="1">
        <label>GQCP::GTransformation&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g_transformation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SimpleTransformation&lt; _Scalar, GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_transformation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::JacobiRotatable&lt; GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>GQCP::BasisTransformable&lt; GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="1">
        <label>GQCP::GTransformation&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g_transformation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SimpleTransformation&lt; _Scalar, GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_transformation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#T</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Eigen::Matrix&lt; double, Dynamic, Dynamic &gt;</label>
      </node>
      <node id="5">
        <label>GQCP::SquareMatrix&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_square_matrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>MatrixX&lt; Scalar  &gt;</label>
        <link refid="class_g_q_c_p_1_1_matrix"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::JacobiRotatable&lt; GTransformation&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" line="41" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/GTransformation.hpp" bodystart="42" bodyend="156"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a1c0f14136382fc6d98f006013eb87c15" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>adjoint</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1a35294c4513ec448c7740080377781eb6" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>alpha</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1a5c03564330bdb423500ded04404f7fe2" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>beta</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1a6bdc555980660dec5c3594ef4ad2199d" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>component</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>DerivedTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a639513b3b77cdce79434a46e81c4cd0d" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>dimension</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a62eded5880afac6391df8e70a51c5dfe" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>FromJacobi</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1a511cfa0246d40baa45e7dcee1f79cacb" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>FromUnrestricted</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1af0a06a95f3ac730b767a26a3b14ab805" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>GTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1af71b9f36f524da82d19e7bf740ca91ae" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>GTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1a31d3196ed11543a85afe55d53cf96cb2" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Identity</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1af9eb142b5ae58396440fbb408d029d4c" prot="public" virt="non-virtual" ambiguityscope="SimpleTransformation&lt; _Scalar, GTransformation&lt; _Scalar &gt; &gt;::"><scope>GQCP::GTransformation</scope><name>Identity</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a5f36fc890460cc7c7a64eee376261c54" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>inverse</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a69eb192652259a3c7894b873aba818a1" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>isUnitary</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a30b9d326d44957602bc7081c692fc719" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>JacobiRotationType</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1aba8b9f0293e09b2658283639341b4c89" prot="private" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>K</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a006ae80a78c72409fad4769058c4e048" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>matrix</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a2bf93e827850f7ccebcd64af4999abb4" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>numberOfOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a66165a4d5eb2217a80196d6d34a27023" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Random</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1af94648942e1be2a5929462fd48daea27" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>RandomUnitary</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a2e107bd3cf4d603c003c8cb9357d0094" prot="public" virt="non-virtual" ambiguityscope="BasisTransformable&lt; GTransformation&lt; _Scalar &gt; &gt;::"><scope>GQCP::GTransformation</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1a11657b774fe75246bef1f7849f9aad72" prot="public" virt="non-virtual" ambiguityscope="JacobiRotatable&lt; GTransformation&lt; _Scalar &gt; &gt;::"><scope>GQCP::GTransformation</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a31eeb20c66eabcc2c2c88599716c0ea9" prot="public" virt="virtual"><scope>GQCP::GTransformation</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1ae0af50867dbd06193b64c2bcdd6b51ba" prot="public" virt="virtual" ambiguityscope="BasisTransformable&lt; GTransformation&lt; _Scalar &gt; &gt;::"><scope>GQCP::GTransformation</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_g_transformation_1aa5372444af700cc04548803517a225d3" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Scalar</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ada44eeef314de5b5ad79587480745505" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Self</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a5ecd32337e09da059a91ba0a9a5da30e" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>SimpleTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ac262d8b59931978058481f1b6bea735e" prot="protected" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>T</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1aa55d3cf1b186ac2ec926e97a7b6d645f" prot="public" virt="virtual"><scope>GQCP::GTransformation</scope><name>transform</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a701f799aca6ea8311782e82685851f72" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Transformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a93317a9a6e9f48a371a422c76b117054" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a3c511224fd132184fb2e01579754850d" prot="public" virt="pure-virtual" ambiguityscope="BasisTransformable&lt; GTransformation&lt; _Scalar &gt; &gt;::"><scope>GQCP::GTransformation</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ad41c1f7a3627227e1bfc475596e78b39" prot="public" virt="non-virtual"><scope>GQCP::GTransformation</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
