<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_c_i_environment_8hpp" kind="file" language="C++">
    <compoundname>CIEnvironment.hpp</compoundname>
    <includes refid="_eigenproblem_environment_8hpp" local="yes">Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp</includes>
    <includedby refid="_d_o_c_i_newton_orbital_optimizer_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/DOCINewtonOrbitalOptimizer.hpp</includedby>
    <includedby refid="gqcp_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>Mathematical/Functions/CartesianDirection.hpp</label>
        <link refid="_cartesian_direction_8hpp"/>
      </node>
      <node id="3">
        <label>Mathematical/Optimization/Eigenproblem/Eigenpair.hpp</label>
        <link refid="_eigenpair_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp</label>
        <link refid="_eigenproblem_environment_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Mathematical/Representation/Matrix.hpp</label>
        <link refid="_matrix_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Mathematical/Representation/SquareMatrix.hpp</label>
        <link refid="_square_matrix_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/CIEnvironment.hpp</label>
        <link refid="_c_i_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Utilities/Eigen.hpp</label>
        <link refid="_eigen_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Utilities/aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Utilities/miscellaneous.hpp</label>
        <link refid="miscellaneous_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Utilities/type_traits.hpp</label>
        <link refid="type__traits_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Dense</label>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="22">
        <label>boost/numeric/conversion/converter.hpp</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>iterator</label>
      </node>
      <node id="23">
        <label>numeric</label>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/CIEnvironment.hpp</label>
        <link refid="_c_i_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/DOCINewtonOrbitalOptimizer.hpp</label>
        <link refid="_d_o_c_i_newton_orbital_optimizer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</label>
        <link refid="gqcp_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_g_q_c_p">GQCP</innernamespace>
    <innernamespace refid="namespace_g_q_c_p_1_1_c_i_environment">GQCP::CIEnvironment</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GQCG-GQCP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017-2020<sp/><sp/>the<sp/>GQCG<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GQCG-GQCP.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eigenproblem_environment_8hpp" kindref="compound">Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="namespace_g_q_c_p_1_1_c_i_environment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CIEnvironment<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Hamiltonian,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ONVBasis&gt;</highlight></codeline>
<codeline lineno="40" refid="namespace_g_q_c_p_1_1_c_i_environment_1a304b7b0ff99dbd03933bd214abf8f77c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespace_g_q_c_p_1_1_c_i_environment_1a304b7b0ff99dbd03933bd214abf8f77c" kindref="member">Dense</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hamiltonian&amp;<sp/>hamiltonian,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ONVBasis&amp;<sp/>onv_basis)<sp/>-&gt;<sp/><ref refid="class_g_q_c_p_1_1_eigenproblem_environment" kindref="compound">EigenproblemEnvironment&lt;typename Hamiltonian::Scalar&gt;</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Scalar<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Hamiltonian::Scalar;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scalar<sp/>type<sp/>of<sp/>a<sp/>Hamiltonian<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>dense<sp/>matrix<sp/>representation<sp/>of<sp/>the<sp/>Hamiltonian<sp/>in<sp/>the<sp/>given<sp/>ONV<sp/>basis,<sp/>and<sp/>supply<sp/>it<sp/>to<sp/>an<sp/>`EigenproblemEnvironment`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>onv_basis.evaluateOperatorDense(hamiltonian);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1acf84deadaff12d58fc9cf21d46b45787" kindref="member">EigenproblemEnvironment&lt;Scalar&gt;::Dense</ref>(H);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Hamiltonian,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ONVBasis&gt;</highlight></codeline>
<codeline lineno="63" refid="namespace_g_q_c_p_1_1_c_i_environment_1aa568afa5012235df56fb621612c44766" refkind="member"><highlight class="normal"><ref refid="class_g_q_c_p_1_1_eigenproblem_environment" kindref="compound">EigenproblemEnvironment&lt;double&gt;</ref><sp/><ref refid="namespace_g_q_c_p_1_1_c_i_environment_1aa568afa5012235df56fb621612c44766" kindref="member">Iterative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hamiltonian&amp;<sp/>hamiltonian,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ONVBasis&amp;<sp/>onv_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_matrix" kindref="compound">MatrixX&lt;double&gt;</ref>&amp;<sp/>V)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>diagonal<sp/>of<sp/>the<sp/>Hamiltonian<sp/>matrix<sp/>representation,<sp/>and<sp/>supply<sp/>a<sp/>matrix-vector<sp/>product<sp/>function<sp/>to<sp/>the<sp/>`EigenproblemEnvironment`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagonal<sp/>=<sp/>onv_basis.evaluateOperatorDiagonal(hamiltonian);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matvec_function<sp/>=<sp/>[&amp;hamiltonian,<sp/>&amp;onv_basis](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_matrix" kindref="compound">VectorX&lt;double&gt;</ref>&amp;<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>onv_basis.evaluateOperatorMatrixVectorProduct(hamiltonian,<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>);<sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a727e721f3027d6da3b35790584f4cf1a" kindref="member">EigenproblemEnvironment&lt;double&gt;::Iterative</ref>(matvec_function,<sp/>diagonal,<sp/>V);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CIEnvironment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>GQCP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/CIEnvironment.hpp"/>
  </compounddef>
</doxygen>
