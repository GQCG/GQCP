<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_u_h_f_s_c_f_solver" kind="class" language="C++" prot="public">
    <compoundname>GQCP::UHFSCFSolver</compoundname>
    <includes refid="_u_h_f_s_c_f_solver_8hpp" local="no">UHFSCFSolver.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1aeea978898b8c8c57a9741f0e5a38fd78" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::UHFSCFSolver&lt; _Scalar &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" line="44" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1a5580b5d602ff4b82a0da4e292cac5c2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_iterative_algorithm" kindref="compound">IterativeAlgorithm</ref>&lt; <ref refid="class_g_q_c_p_1_1_u_h_f_s_c_f_environment" kindref="compound">UHFSCFEnvironment</ref>&lt; <ref refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1aeea978898b8c8c57a9741f0e5a38fd78" kindref="member">Scalar</ref> &gt; &gt;</type>
        <definition>static IterativeAlgorithm&lt;UHFSCFEnvironment&lt;Scalar&gt; &gt; GQCP::UHFSCFSolver&lt; _Scalar &gt;::DIIS</definition>
        <argsstring>(const size_t minimum_subspace_dimension=6, const size_t maximum_subspace_dimension=6, const double threshold=1.0e-08, const size_t maximum_number_of_iterations=128)</argsstring>
        <name>DIIS</name>
        <param>
          <type>const size_t</type>
          <declname>minimum_subspace_dimension</declname>
          <defval>6</defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maximum_subspace_dimension</declname>
          <defval>6</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>threshold</declname>
          <defval>1.0e-08</defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maximum_number_of_iterations</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minimum_subspace_dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum number of Fock matrices that have to be in the subspace before enabling <ref refid="class_g_q_c_p_1_1_d_i_i_s" kindref="compound">DIIS</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum_subspace_dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of Fock matrices that can be handled by <ref refid="class_g_q_c_p_1_1_d_i_i_s" kindref="compound">DIIS</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold that is used in comparing both the alpha and beta density matrices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum_number_of_iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of iterations the algorithm may perform.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_g_q_c_p_1_1_d_i_i_s" kindref="compound">DIIS</ref> UHF SCF solver that uses the combination of norm of the difference of two consecutive alpha and beta density matrices as a convergence criterion. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" line="60" column="31" bodyfile="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" bodystart="60" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1abf4b5d3d91c29d01762e89432887f2c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_iterative_algorithm" kindref="compound">IterativeAlgorithm</ref>&lt; <ref refid="class_g_q_c_p_1_1_u_h_f_s_c_f_environment" kindref="compound">UHFSCFEnvironment</ref>&lt; <ref refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1aeea978898b8c8c57a9741f0e5a38fd78" kindref="member">Scalar</ref> &gt; &gt;</type>
        <definition>static IterativeAlgorithm&lt;UHFSCFEnvironment&lt;Scalar&gt; &gt; GQCP::UHFSCFSolver&lt; _Scalar &gt;::Plain</definition>
        <argsstring>(const double threshold=1.0e-08, const size_t maximum_number_of_iterations=128)</argsstring>
        <name>Plain</name>
        <param>
          <type>const double</type>
          <declname>threshold</declname>
          <defval>1.0e-08</defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maximum_number_of_iterations</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold that is used in comparing both the alpha and beta density matrices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum_number_of_iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of iterations the algorithm may perform.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A plain UHF SCF solver that uses the combination of norm of the difference of two consecutive alpha and beta density matrices as a convergence criterion. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" line="87" column="31" bodyfile="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" bodystart="87" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A factory class that can construct UHF SCF solvers in an easy way.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type that is used for the coefficient matrix/expansion coefficients. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::UHFSCFSolver&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" line="42" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp" bodystart="42" bodyend="105"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1a5580b5d602ff4b82a0da4e292cac5c2c" prot="public" virt="non-virtual"><scope>GQCP::UHFSCFSolver</scope><name>DIIS</name></member>
      <member refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1abf4b5d3d91c29d01762e89432887f2c0" prot="public" virt="non-virtual"><scope>GQCP::UHFSCFSolver</scope><name>Plain</name></member>
      <member refid="class_g_q_c_p_1_1_u_h_f_s_c_f_solver_1aeea978898b8c8c57a9741f0e5a38fd78" prot="public" virt="non-virtual"><scope>GQCP::UHFSCFSolver</scope><name>Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
