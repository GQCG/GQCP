<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_a_p1ro_g_jacobi_orbital_optimizer_8cpp" kind="file" language="C++">
    <compoundname>AP1roGJacobiOrbitalOptimizer.cpp</compoundname>
    <includes refid="_a_p1ro_g_jacobi_orbital_optimizer_8hpp" local="yes">QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.hpp</includes>
    <includes refid="_orbital_space_8hpp" local="yes">Basis/SpinorBasis/OrbitalSpace.hpp</includes>
    <includes refid="_minimization_environment_8hpp" local="yes">Mathematical/Optimization/Minimization/MinimizationEnvironment.hpp</includes>
    <includes refid="_minimizer_8hpp" local="yes">Mathematical/Optimization/Minimization/Minimizer.hpp</includes>
    <includes refid="_non_linear_equation_solver_8hpp" local="yes">Mathematical/Optimization/NonLinearEquation/NonLinearEquationSolver.hpp</includes>
    <includes refid="_q_c_method_2_geminals_2_a_p1ro_g_8hpp" local="yes">QCMethod/Geminals/AP1roG.hpp</includes>
    <includes refid="_p_s_environment_8hpp" local="yes">QCMethod/Geminals/PSEnvironment.hpp</includes>
    <includes refid="_q_c_model_2_geminals_2_a_p1ro_g_8hpp" local="yes">QCModel/Geminals/AP1roG.hpp</includes>
    <includes local="no">boost/math/constants/constants.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">queue</includes>
    <incdepgraph>
      <node id="143">
        <label>Basis/SpinorBasis/USpinOrbitalBasisComponent.hpp</label>
        <link refid="_u_spin_orbital_basis_component_8hpp"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>Operator/SecondQuantized/SQOperatorStorage.hpp</label>
        <link refid="_s_q_operator_storage_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>Operator/SecondQuantized/GSQOneElectronOperator.hpp</label>
        <link refid="_g_s_q_one_electron_operator_8hpp"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="177">
        <label>Mathematical/Algorithm/ConvergenceCriterion.hpp</label>
        <link refid="_convergence_criterion_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>Basis/Integrals/PrimitiveAngularMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_angular_momentum_integral_engine_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>Operator/FirstQuantized/AngularMomentumOperator.hpp</label>
        <link refid="_angular_momentum_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iomanip</label>
      </node>
      <node id="46">
        <label>functional</label>
      </node>
      <node id="196">
        <label>queue</label>
      </node>
      <node id="171">
        <label>ONVBasis/SeniorityZeroONVBasis.hpp</label>
      </node>
      <node id="105">
        <label>Basis/SpinorBasis/SimpleSpinorBasis.hpp</label>
        <link refid="_simple_spinor_basis_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Basis/Integrals/Interfaces/LibcintTwoElectronIntegralBuffer.hpp</label>
        <link refid="_libcint_two_electron_integral_buffer_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>Mathematical/Optimization/LinearEquation/LinearEquationSolver.hpp</label>
      </node>
      <node id="137">
        <label>Basis/Transformations/SpinResolvedJacobiRotatable.hpp</label>
        <link refid="_spin_resolved_jacobi_rotatable_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>Operator/FirstQuantized/BaseFQOperator.hpp</label>
        <link refid="_base_f_q_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Utilities/Eigen.hpp</label>
        <link refid="_eigen_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>boost/math/constants/constants.hpp</label>
      </node>
      <node id="179">
        <label>Mathematical/Algorithm/Step.hpp</label>
        <link refid="_step_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>iterator</label>
      </node>
      <node id="140">
        <label>QuantumChemical/SpinResolved.hpp</label>
        <link refid="_spin_resolved_8hpp"/>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>Operator/SecondQuantized/OperatorTraits.hpp</label>
        <link refid="_operator_traits_8hpp"/>
      </node>
      <node id="147">
        <label>DensityMatrix/SpinDensity1DM.hpp</label>
        <link refid="_spin_density1_d_m_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="95">
        <label>Mathematical/Representation/SquareMatrix.hpp</label>
        <link refid="_square_matrix_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Basis/Integrals/BaseOneElectronIntegralBuffer.hpp</label>
        <link refid="_base_one_electron_integral_buffer_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>Operator/FirstQuantized/LinearMomentumOperator.hpp</label>
        <link refid="_linear_momentum_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>Mathematical/Optimization/NonLinearEquation/NewtonStepUpdate.hpp</label>
        <link refid="_non_linear_equation_2_newton_step_update_8hpp"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Molecule/Molecule.hpp</label>
        <link refid="_molecule_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>Basis/Integrals/PrimitiveDipoleIntegralEngine.hpp</label>
        <link refid="_primitive_dipole_integral_engine_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.hpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>DensityMatrix/SpinResolved1DM.hpp</label>
        <link refid="_spin_resolved1_d_m_8hpp"/>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>Utilities/literals.hpp</label>
        <link refid="literals_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>DensityMatrix/G2DM.hpp</label>
        <link refid="_g2_d_m_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>Mathematical/Algorithm/Algorithm.hpp</label>
        <link refid="_algorithm_8hpp"/>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>boost/range/adaptors.hpp</label>
      </node>
      <node id="136">
        <label>Basis/Transformations/SpinResolvedBasisTransformable.hpp</label>
        <link refid="_spin_resolved_basis_transformable_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>Basis/Integrals/Interfaces/LibintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libint_two_electron_integral_engine_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>boost/dynamic_bitset.hpp</label>
      </node>
      <node id="39">
        <label>Mathematical/Functions/ScalarFunction.hpp</label>
        <link refid="_scalar_function_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Mathematical/Functions/CartesianGTO.hpp</label>
        <link refid="_cartesian_g_t_o_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>Operator/SecondQuantized/ModelHamiltonian/HubbardHamiltonian.hpp</label>
        <link refid="_hubbard_hamiltonian_8hpp"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>Mathematical/Optimization/ConsecutiveIteratesNormConvergence.hpp</label>
        <link refid="_consecutive_iterates_norm_convergence_8hpp"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Basis/Integrals/Interfaces/LibcintInterfacer.hpp</label>
        <link refid="_libcint_interfacer_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>Basis/SpinorBasis/GSpinorBasis.hpp</label>
        <link refid="_g_spinor_basis_8hpp"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>Utilities/miscellaneous.hpp</label>
        <link refid="miscellaneous_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>Mathematical/Optimization/Minimization/NewtonStepUpdate.hpp</label>
        <link refid="_minimization_2_newton_step_update_8hpp"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>boost/format.hpp</label>
      </node>
      <node id="157">
        <label>Basis/SpinorBasis/OccupationType.hpp</label>
        <link refid="_occupation_type_8hpp"/>
      </node>
      <node id="63">
        <label>Operator/FirstQuantized/ElectronicSpin_zOperator.hpp</label>
        <link refid="_electronic_spin__z_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>cmath</label>
      </node>
      <node id="151">
        <label>QuantumChemical/DoublySpinResolvedBase.hpp</label>
        <link refid="_doubly_spin_resolved_base_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>Operator/SecondQuantized/PureUSQTwoElectronOperatorComponent.hpp</label>
        <link refid="_pure_u_s_q_two_electron_operator_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>QuantumChemical/spinor_tags.hpp</label>
        <link refid="spinor__tags_8hpp"/>
      </node>
      <node id="102">
        <label>stdexcept</label>
      </node>
      <node id="60">
        <label>Operator/FirstQuantized/ElectronicDensityOperator.hpp</label>
        <link refid="_electronic_density_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>numeric</label>
      </node>
      <node id="50">
        <label>Molecule/NuclearFramework.hpp</label>
        <link refid="_nuclear_framework_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>Operator/FirstQuantized/NuclearRepulsionOperator.hpp</label>
        <link refid="_nuclear_repulsion_operator_8hpp"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>Basis/MullikenPartitioning/RMullikenPartitioning.hpp</label>
        <link refid="_r_mulliken_partitioning_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>Mathematical/Representation/ImplicitMatrixSlice.hpp</label>
        <link refid="_implicit_matrix_slice_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Basis/Integrals/IntegralEngine.hpp</label>
        <link refid="_integral_engine_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>Operator/SecondQuantized/SimpleSQTwoElectronOperator.hpp</label>
        <link refid="_simple_s_q_two_electron_operator_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>string</label>
      </node>
      <node id="64">
        <label>Operator/FirstQuantized/KineticOperator.hpp</label>
        <link refid="_kinetic_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>Operator/SecondQuantized/USQTwoElectronOperator.hpp</label>
        <link refid="_u_s_q_two_electron_operator_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>Operator/SecondQuantized/RSQTwoElectronOperator.hpp</label>
        <link refid="_r_s_q_two_electron_operator_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>map</label>
      </node>
      <node id="120">
        <label>Operator/SecondQuantized/USQOneElectronOperatorComponent.hpp</label>
        <link refid="_u_s_q_one_electron_operator_component_8hpp"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>Basis/Transformations/UTransformationComponent.hpp</label>
        <link refid="_u_transformation_component_8hpp"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="124">
        <label>DensityMatrix/SpinResolved1DMComponent.hpp</label>
        <link refid="_spin_resolved1_d_m_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp</label>
        <link refid="_simple_spin_orbital_basis_8hpp"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Molecule/Nucleus.hpp</label>
        <link refid="_nucleus_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Basis/Integrals/IntegralCalculator.hpp</label>
        <link refid="_integral_calculator_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>QuantumChemical/SpinResolvedBase.hpp</label>
        <link refid="_spin_resolved_base_8hpp"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>Operator/SecondQuantized/SQOperatorStorageBase.hpp</label>
        <link refid="_s_q_operator_storage_base_8hpp"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>Mathematical/Representation/SquareRankFourTensor.hpp</label>
        <link refid="_square_rank_four_tensor_8hpp"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>DensityMatrix/Simple2DM.hpp</label>
        <link refid="_simple2_d_m_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>Operator/FirstQuantized/NuclearAttractionOperator.hpp</label>
        <link refid="_nuclear_attraction_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>boost/numeric/conversion/converter.hpp</label>
      </node>
      <node id="88">
        <label>Basis/Integrals/PrimitiveCartesianOperatorIntegralEngine.hpp</label>
        <link refid="_primitive_cartesian_operator_integral_engine_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>boost/preprocessor.hpp</label>
      </node>
      <node id="22">
        <label>fstream</label>
      </node>
      <node id="110">
        <label>DensityMatrix/DensityMatrixTraits.hpp</label>
        <link refid="_density_matrix_traits_8hpp"/>
      </node>
      <node id="178">
        <label>Mathematical/Algorithm/StepCollection.hpp</label>
        <link refid="_step_collection_8hpp"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ostream</label>
      </node>
      <node id="93">
        <label>Basis/ScalarBasis/ScalarBasis.hpp</label>
        <link refid="_scalar_basis_8hpp"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Molecule/elements.hpp</label>
        <link refid="elements_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>Operator/SecondQuantized/GSQTwoElectronOperator.hpp</label>
        <link refid="_g_s_q_two_electron_operator_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>Operator/FirstQuantized/BaseNuclearOperator.hpp</label>
        <link refid="_base_nuclear_operator_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>Mathematical/Optimization/Minimization/Minimizer.hpp</label>
        <link refid="_minimizer_8hpp"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>Basis/Transformations/SimpleTransformation.hpp</label>
        <link refid="_simple_transformation_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>Basis/MullikenPartitioning/UMullikenPartitioningComponent.hpp</label>
        <link refid="_u_mulliken_partitioning_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>Operator/FirstQuantized/BaseReferenceDependentOperator.hpp</label>
        <link refid="_base_reference_dependent_operator_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>Basis/Integrals/OneElectronIntegralBuffer.hpp</label>
        <link refid="_one_electron_integral_buffer_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>DensityMatrix/SpinResolved2DM.hpp</label>
        <link refid="_spin_resolved2_d_m_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>DensityMatrix/G1DM.hpp</label>
        <link refid="_g1_d_m_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Basis/Integrals/BaseTwoElectronIntegralBuffer.hpp</label>
        <link refid="_base_two_electron_integral_buffer_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Utilities/CRTP.hpp</label>
        <link refid="_c_r_t_p_8hpp"/>
      </node>
      <node id="156">
        <label>Basis/SpinorBasis/OrbitalSpace.hpp</label>
        <link refid="_orbital_space_8hpp"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>Operator/FirstQuantized/Operator.hpp</label>
        <link refid="_operator_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>QCMethod/QCStructure.hpp</label>
        <link refid="_q_c_structure_8hpp"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="99">
        <label>Basis/Transformations/RTransformation.hpp</label>
        <link refid="_r_transformation_8hpp"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Basis/SpinorBasis/RSpinOrbitalBasis.hpp</label>
        <link refid="_r_spin_orbital_basis_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Mathematical/Functions/LinearCombination.hpp</label>
        <link refid="_linear_combination_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>Mathematical/Optimization/NonLinearEquation/NonLinearEquationSolver.hpp</label>
        <link refid="_non_linear_equation_solver_8hpp"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>Operator/FirstQuantized/ElectronicSpinOperator.hpp</label>
        <link refid="_electronic_spin_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>Basis/Integrals/PrimitiveKineticEnergyIntegralEngine.hpp</label>
        <link refid="_primitive_kinetic_energy_integral_engine_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>Mathematical/Optimization/OptimizationEnvironment.hpp</label>
        <link refid="_optimization_environment_8hpp"/>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>Utilities/memory.hpp</label>
        <link refid="memory_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>Basis/Transformations/BasisTransformable.hpp</label>
        <link refid="_basis_transformable_8hpp"/>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>Basis/MullikenPartitioning/GMullikenPartitioning.hpp</label>
        <link refid="_g_mulliken_partitioning_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>Operator/FirstQuantized/OverlapOperator.hpp</label>
        <link refid="_overlap_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Mathematical/Representation/Matrix.hpp</label>
        <link refid="_matrix_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>Basis/Transformations/UJacobiRotation.hpp</label>
        <link refid="_u_jacobi_rotation_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>Mathematical/Representation/DenseVectorizer.hpp</label>
        <link refid="_dense_vectorizer_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Utilities/type_traits.hpp</label>
        <link refid="type__traits_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>Basis/Transformations/GTransformation.hpp</label>
        <link refid="_g_transformation_8hpp"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="172">
        <label>Mathematical/Optimization/Minimization/MinimizationEnvironment.hpp</label>
        <link refid="_minimization_environment_8hpp"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Utilities/aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>Operator/SecondQuantized/EvaluatableScalarRSQOneElectronOperator.hpp</label>
        <link refid="_evaluatable_scalar_r_s_q_one_electron_operator_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>QCMethod/Geminals/PSEnvironment.hpp</label>
        <link refid="_p_s_environment_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>utility</label>
      </node>
      <node id="107">
        <label>QuantumChemical/Spin.hpp</label>
        <link refid="_spin_8hpp"/>
      </node>
      <node id="123">
        <label>DensityMatrix/PureSpinResolved2DMComponent.hpp</label>
        <link refid="_pure_spin_resolved2_d_m_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="192">
        <label>QCModel/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_model_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>Basis/Transformations/UTransformation.hpp</label>
        <link refid="_u_transformation_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>DensityMatrix/Orbital2DM.hpp</label>
        <link refid="_orbital2_d_m_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>Basis/Integrals/Interfaces/LibintOneElectronIntegralBuffer.hpp</label>
        <link refid="_libint_one_electron_integral_buffer_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Basis/Transformations/JacobiRotation.hpp</label>
        <link refid="_jacobi_rotation_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QCMethod/OrbitalOptimization/JacobiOrbitalOptimizer.hpp</label>
        <link refid="_jacobi_orbital_optimizer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>Basis/Integrals/PrimitiveLinearMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_linear_momentum_integral_engine_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Operator/FirstQuantized/ElectronicDipoleOperator.hpp</label>
        <link refid="_electronic_dipole_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>QCModel/CI/LinearExpansion.hpp</label>
        <link refid="_linear_expansion_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>Mathematical/Representation/ImplicitRankFourTensorSlice.hpp</label>
        <link refid="_implicit_rank_four_tensor_slice_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Basis/Integrals/Interfaces/LibcintOneElectronIntegralEngine.hpp</label>
        <link refid="_libcint_one_electron_integral_engine_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Basis/Integrals/BaseTwoElectronIntegralEngine.hpp</label>
        <link refid="_base_two_electron_integral_engine_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>Mathematical/Optimization/LinearEquation/LinearEquationEnvironment.hpp</label>
      </node>
      <node id="12">
        <label>Basis/Integrals/BaseOneElectronIntegralEngine.hpp</label>
        <link refid="_base_one_electron_integral_engine_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>Operator/SecondQuantized/ModelHamiltonian/HoppingMatrix.hpp</label>
        <link refid="_hopping_matrix_8hpp"/>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="103">
        <label>Basis/Transformations/JacobiRotatable.hpp</label>
        <link refid="_jacobi_rotatable_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>ONVBasis/SpinResolvedSelectedONVBasis.hpp</label>
      </node>
      <node id="9">
        <label>QCMethod/OrbitalOptimization/BaseOrbitalOptimizer.hpp</label>
        <link refid="_base_orbital_optimizer_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>QCModel/Geminals/GeminalCoefficientsInterface.hpp</label>
        <link refid="_geminal_coefficients_interface_8hpp"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>Basis/Integrals/Interfaces/LibcintOneElectronIntegralBuffer.hpp</label>
        <link refid="_libcint_one_electron_integral_buffer_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>ONVBasis/SpinResolvedONV.hpp</label>
      </node>
      <node id="55">
        <label>cstddef</label>
      </node>
      <node id="115">
        <label>Operator/SecondQuantized/SimpleSQOneElectronOperator.hpp</label>
        <link refid="_simple_s_q_one_electron_operator_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>Basis/Transformations/DoublySpinResolvedBasisTransformable.hpp</label>
        <link refid="_doubly_spin_resolved_basis_transformable_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>deque</label>
      </node>
      <node id="71">
        <label>cint.h</label>
      </node>
      <node id="81">
        <label>libint2.hpp</label>
      </node>
      <node id="141">
        <label>Basis/SpinorBasis/USpinOrbitalBasis.hpp</label>
        <link refid="_u_spin_orbital_basis_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Mathematical/Functions/CartesianExponents.hpp</label>
        <link refid="_cartesian_exponents_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.cpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>Basis/Integrals/Interfaces/LibintInterfacer.hpp</label>
        <link refid="_libint_interfacer_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>Basis/Integrals/Interfaces/LibcintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libcint_two_electron_integral_engine_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>Operator/SecondQuantized/USQOneElectronOperator.hpp</label>
        <link refid="_u_s_q_one_electron_operator_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>Operator/SecondQuantized/RSQOneElectronOperator.hpp</label>
        <link refid="_r_s_q_one_electron_operator_8hpp"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>DensityMatrix/MixedSpinResolved2DMComponent.hpp</label>
        <link refid="_mixed_spin_resolved2_d_m_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>Mathematical/Algorithm/IterativeAlgorithm.hpp</label>
        <link refid="_iterative_algorithm_8hpp"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="59">
        <label>Operator/FirstQuantized/CoulombRepulsionOperator.hpp</label>
        <link refid="_coulomb_repulsion_operator_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>Basis/Integrals/Interfaces/LibintTwoElectronIntegralBuffer.hpp</label>
        <link refid="_libint_two_electron_integral_buffer_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>Operator/FirstQuantized/NuclearDipoleOperator.hpp</label>
        <link refid="_nuclear_dipole_operator_8hpp"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>Basis/Integrals/PrimitiveOverlapIntegralEngine.hpp</label>
        <link refid="_primitive_overlap_integral_engine_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>complex</label>
      </node>
      <node id="30">
        <label>algorithm</label>
      </node>
      <node id="166">
        <label>ONVBasis/SpinResolvedONVBasis.hpp</label>
      </node>
      <node id="163">
        <label>QCModel/Geminals/AP1roGGeminalCoefficients.hpp</label>
        <link refid="_a_p1ro_g_geminal_coefficients_8hpp"/>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>Basis/ScalarBasis/ShellSet.hpp</label>
        <link refid="_shell_set_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>Basis/Transformations/DoublySpinResolvedJacobiRotatable.hpp</label>
        <link refid="_doubly_spin_resolved_jacobi_rotatable_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>Basis/ScalarBasis/GTOBasisSet.hpp</label>
        <link refid="_g_t_o_basis_set_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>DensityMatrix/Simple1DM.hpp</label>
        <link refid="_simple1_d_m_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>Basis/Integrals/OneElectronIntegralEngine.hpp</label>
        <link refid="_one_electron_integral_engine_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>Operator/SecondQuantized/MixedUSQTwoElectronOperatorComponent.hpp</label>
        <link refid="_mixed_u_s_q_two_electron_operator_component_8hpp"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Mathematical/Functions/CartesianDirection.hpp</label>
        <link refid="_cartesian_direction_8hpp"/>
      </node>
      <node id="109">
        <label>DensityMatrix/Orbital1DM.hpp</label>
        <link refid="_orbital1_d_m_8hpp"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Mathematical/Representation/Tensor.hpp</label>
        <link refid="_tensor_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>Basis/MullikenPartitioning/UMullikenPartitioning.hpp</label>
        <link refid="_u_mulliken_partitioning_8hpp"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>Basis/Integrals/Interfaces/LibintOneElectronIntegralEngine.hpp</label>
        <link refid="_libint_one_electron_integral_engine_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>Mathematical/Representation/StorageArray.hpp</label>
        <link refid="_storage_array_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
      <node id="51">
        <label>initializer_list</label>
      </node>
      <node id="35">
        <label>Basis/ScalarBasis/GTOShell.hpp</label>
        <link refid="_g_t_o_shell_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Mathematical/Functions/VectorSpaceArithmetic.hpp</label>
        <link refid="_vector_space_arithmetic_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>Operator/SecondQuantized/SQHamiltonian.hpp</label>
        <link refid="_s_q_hamiltonian_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>Basis/SpinorBasis/Spinor.hpp</label>
        <link refid="_spinor_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>QCMethod/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_method_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>Mathematical/Optimization/NonLinearEquation/NonLinearEquationEnvironment.hpp</label>
        <link refid="_non_linear_equation_environment_8hpp"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_g_q_c_p">GQCP</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GQCG-GQCP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017-2020<sp/><sp/>the<sp/>GQCG<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GQCG-GQCP.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_p1ro_g_jacobi_orbital_optimizer_8hpp" kindref="compound">QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_orbital_space_8hpp" kindref="compound">Basis/SpinorBasis/OrbitalSpace.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_minimization_environment_8hpp" kindref="compound">Mathematical/Optimization/Minimization/MinimizationEnvironment.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_minimizer_8hpp" kindref="compound">Mathematical/Optimization/Minimization/Minimizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_non_linear_equation_solver_8hpp" kindref="compound">Mathematical/Optimization/NonLinearEquation/NonLinearEquationSolver.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_q_c_method_2_geminals_2_a_p1ro_g_8hpp" kindref="compound">QCMethod/Geminals/AP1roG.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_s_environment_8hpp" kindref="compound">QCMethod/Geminals/PSEnvironment.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_q_c_model_2_geminals_2_a_p1ro_g_8hpp" kindref="compound">QCModel/Geminals/AP1roG.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/math/constants/constants.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1a0f8d2b629f638389d966f5db84400c10" kindref="member">AP1roGJacobiOrbitalOptimizer::AP1roGJacobiOrbitalOptimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_P,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>convergence_threshold,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maximum_number_of_iterations)<sp/>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>AP1roGJacobiOrbitalOptimizer(AP1roGGeminalCoefficients(N_P,<sp/>K),<sp/>convergence_threshold,<sp/>maximum_number_of_iterations)<sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1a0f8d2b629f638389d966f5db84400c10" kindref="member">AP1roGJacobiOrbitalOptimizer::AP1roGJacobiOrbitalOptimizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AP1roGGeminalCoefficients&amp;<sp/>G,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>convergence_threshold,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maximum_number_of_iterations)<sp/>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>N_P<sp/>{G.numberOfElectronPairs()},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>G<sp/>{G},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>JacobiOrbitalOptimizer(G.numberOfSpatialOrbitals(),<sp/>convergence_threshold,<sp/>maximum_number_of_iterations)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>PUBLIC<sp/>OVERRIDDEN<sp/>METHODS</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1ada3d09617b0f3008a8873a02259627d4" kindref="member">AP1roGJacobiOrbitalOptimizer::calculateJacobiCoefficients</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RSQHamiltonian&lt;double&gt;&amp;<sp/>sq_hamiltonian,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>some<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>h<sp/>=<sp/>sq_hamiltonian.core().parameters();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>g<sp/>=<sp/>sq_hamiltonian.twoElectron().parameters();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>G<sp/>=<sp/>this-&gt;G;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>occupied-virtual<sp/>orbital<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_jacobi_orbital_optimizer_1afa2b23e301f0eee1ea111cde0cbf9231" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>orbital_space<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_orbital_space_1a22c967bc1d33a75341c86b1ca52b0532" kindref="member">OrbitalSpace::Implicit</ref>({{OccupationType::k_occupied,<sp/>N_P},<sp/>{<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>,<sp/>K<sp/>-<sp/>N_P}});<sp/><sp/></highlight><highlight class="comment">//<sp/>N_P<sp/>occupied<sp/>(spatial)<sp/>orbitals,<sp/>K-N_P<sp/>virtual<sp/>(spatial)<sp/>orbitals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>Jacobi<sp/>rotation<sp/>coefficients<sp/>with<sp/>disjoint<sp/>cases<sp/>for<sp/>p<sp/>and<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-occupied<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orbital_space.isIndex(OccupationType::k_occupied,<sp/>p)<sp/>&amp;&amp;<sp/>orbital_space.isIndex(OccupationType::k_occupied,<sp/>q))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>orbital_space.indices(<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A1<sp/>-=<sp/>0.5<sp/>*<sp/>(g(b,<sp/>p,<sp/>b,<sp/>p)<sp/>-<sp/>g(b,<sp/>q,<sp/>b,<sp/>q))<sp/>*<sp/>(G(p,<sp/>b)<sp/>-<sp/>G(q,<sp/>b));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B1<sp/>+=<sp/>0.5<sp/>*<sp/>(g(b,<sp/>p,<sp/>b,<sp/>p)<sp/>-<sp/>g(b,<sp/>q,<sp/>b,<sp/>q))<sp/>*<sp/>(G(p,<sp/>b)<sp/>-<sp/>G(q,<sp/>b));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C1<sp/>+=<sp/>g(b,<sp/>p,<sp/>b,<sp/>q)<sp/>*<sp/>(G(q,<sp/>b)<sp/>-<sp/>G(p,<sp/>b));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-virtual<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orbital_space.isIndex(<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>,<sp/>p)<sp/>&amp;&amp;<sp/>orbital_space.isIndex(OccupationType::k_occupied,<sp/>q))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;D2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;E2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A2<sp/>+=<sp/>h(p,<sp/>p)<sp/>-<sp/>h(q,<sp/>q)<sp/>+<sp/>0.375<sp/>*<sp/>(g(p,<sp/>p,<sp/>p,<sp/>p)<sp/>+<sp/>g(q,<sp/>q,<sp/>q,<sp/>q))<sp/>*<sp/>(1<sp/>-<sp/>G(q,<sp/>p))<sp/>-<sp/>0.25<sp/>*<sp/>g(p,<sp/>p,<sp/>q,<sp/>q)<sp/>*<sp/>(7<sp/>+<sp/>G(q,<sp/>p))<sp/>+<sp/>0.5<sp/>*<sp/>g(p,<sp/>q,<sp/>p,<sp/>q)<sp/>*<sp/>(3<sp/>+<sp/>G(q,<sp/>p));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B2<sp/>+=<sp/>h(q,<sp/>q)<sp/>-<sp/>h(p,<sp/>p)<sp/>+<sp/>2<sp/>*<sp/>g(p,<sp/>p,<sp/>q,<sp/>q)<sp/>+<sp/>0.5<sp/>*<sp/>(g(p,<sp/>p,<sp/>p,<sp/>p)<sp/>+<sp/>g(q,<sp/>q,<sp/>q,<sp/>q))<sp/>*<sp/>(G(q,<sp/>p)<sp/>-<sp/>1)<sp/>-<sp/>g(p,<sp/>q,<sp/>p,<sp/>q)<sp/>*<sp/>(1<sp/>+<sp/>G(q,<sp/>p));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C2<sp/>+=<sp/>2<sp/>*<sp/>h(p,<sp/>q)<sp/>+<sp/>(g(p,<sp/>p,<sp/>p,<sp/>q)<sp/>-<sp/>g(p,<sp/>q,<sp/>q,<sp/>q))<sp/>*<sp/>(1<sp/>-<sp/>G(q,<sp/>p));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;D2<sp/>+=<sp/>0.125<sp/>*<sp/>(g(p,<sp/>p,<sp/>p,<sp/>p)<sp/>+<sp/>g(q,<sp/>q,<sp/>q,<sp/>q)<sp/>-<sp/>2<sp/>*<sp/>(g(p,<sp/>p,<sp/>q,<sp/>q)<sp/>+<sp/>2<sp/>*<sp/>g(p,<sp/>q,<sp/>p,<sp/>q)))<sp/>*<sp/>(1<sp/>-<sp/>G(q,<sp/>p));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;E2<sp/>+=<sp/>0.5<sp/>*<sp/>(g(p,<sp/>p,<sp/>p,<sp/>q)<sp/>-<sp/>g(p,<sp/>q,<sp/>q,<sp/>q))<sp/>*<sp/>(G(q,<sp/>p)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>j<sp/>:<sp/>orbital_space.indices(OccupationType::k_occupied))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A2<sp/>+=<sp/>2<sp/>*<sp/>(g(j,<sp/>j,<sp/>p,<sp/>p)<sp/>-<sp/>g(j,<sp/>j,<sp/>q,<sp/>q))<sp/>-<sp/>0.5<sp/>*<sp/>(g(j,<sp/>p,<sp/>j,<sp/>p)<sp/>-<sp/>g(j,<sp/>q,<sp/>j,<sp/>q))<sp/>*<sp/>(2<sp/>+<sp/>G(j,<sp/>p));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B2<sp/>+=<sp/>2<sp/>*<sp/>(g(j,<sp/>j,<sp/>q,<sp/>q)<sp/>-<sp/>g(j,<sp/>j,<sp/>p,<sp/>p))<sp/>+<sp/>0.5<sp/>*<sp/>(g(j,<sp/>p,<sp/>j,<sp/>p)<sp/>-<sp/>g(j,<sp/>q,<sp/>j,<sp/>q))<sp/>*<sp/>(2<sp/>+<sp/>G(j,<sp/>p));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C2<sp/>+=<sp/>4<sp/>*<sp/>g(j,<sp/>j,<sp/>p,<sp/>q)<sp/>-<sp/>g(j,<sp/>p,<sp/>j,<sp/>q)<sp/>*<sp/>(2<sp/>+<sp/>G(j,<sp/>p));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>orbital_space.indices(<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A2<sp/>+=<sp/>0.5<sp/>*<sp/>(g(b,<sp/>p,<sp/>b,<sp/>p)<sp/>-<sp/>g(b,<sp/>q,<sp/>b,<sp/>q))<sp/>*<sp/>G(q,<sp/>b);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B2<sp/>+=<sp/>0.5<sp/>*<sp/>(g(b,<sp/>q,<sp/>b,<sp/>q)<sp/>-<sp/>g(b,<sp/>p,<sp/>b,<sp/>p))<sp/>*<sp/>G(q,<sp/>b);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C2<sp/>+=<sp/>g(b,<sp/>p,<sp/>b,<sp/>q)<sp/>*<sp/>G(q,<sp/>b);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Virtual-virtual<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orbital_space.isIndex(<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>,<sp/>p)<sp/>&amp;&amp;<sp/>orbital_space.isIndex(<ref refid="namespace_g_q_c_p_1a3030f130c450e7134eb0670b39ab246bae0a1ca016cf8646a44cf4e074d194a4a" kindref="member">OccupationType::k_virtual</ref>,<sp/>q))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>j<sp/>:<sp/>orbital_space.indices(OccupationType::k_occupied))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;A3<sp/>-=<sp/>0.5<sp/>*<sp/>(g(j,<sp/>p,<sp/>j,<sp/>p)<sp/>-<sp/>g(j,<sp/>q,<sp/>j,<sp/>q))<sp/>*<sp/>(G(j,<sp/>p)<sp/>-<sp/>G(j,<sp/>q));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;B3<sp/>+=<sp/>0.5<sp/>*<sp/>(g(j,<sp/>p,<sp/>j,<sp/>p)<sp/>-<sp/>g(j,<sp/>q,<sp/>j,<sp/>q))<sp/>*<sp/>(G(j,<sp/>p)<sp/>-<sp/>G(j,<sp/>q));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;C3<sp/>+=<sp/>g(j,<sp/>p,<sp/>j,<sp/>q)<sp/>*<sp/>(G(j,<sp/>q)<sp/>-<sp/>G(j,<sp/>p));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>that<sp/>p<sp/>&lt;=<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;AP1roGJacobiOrbitalOptimizer::calculateJacobiCoefficients(const<sp/>RSQHamiltonian&lt;double&gt;&amp;,<sp/>const<sp/>size_t,<sp/>const<sp/>size_t):<sp/>The<sp/>given<sp/>p<sp/>and<sp/>q<sp/>are<sp/>invalid:<sp/>p<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>q.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1af4c02c5f63b7224dce4345d6fbea2449" kindref="member">AP1roGJacobiOrbitalOptimizer::calculateOptimalRotationAngle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RSQHamiltonian&lt;double&gt;&amp;<sp/>sq_hamiltonian,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>q)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>optimal<sp/>Jacobi<sp/>rotation<sp/>angle<sp/>with<sp/>disjoint<sp/>cases<sp/>for<sp/>p<sp/>and<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-occupied<sp/>rotations:<sp/>if<sp/>p<sp/>&lt;=<sp/>N_P<sp/>and<sp/>q<sp/>&lt;=<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&lt;<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&lt;<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/>std::sqrt(std::pow(this-&gt;B1,<sp/>2)<sp/>+<sp/>std::pow(this-&gt;C1,<sp/>2));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>denominator<sp/>is<sp/>almost<sp/>zero,<sp/>the<sp/>Jacobi<sp/>rotation<sp/>is<sp/>redundant:<sp/>the<sp/>corresponding<sp/>angle<sp/>of<sp/>a<sp/>&apos;non&apos;-rotation<sp/>is<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>&lt;<sp/>1.0e-08)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>std::atan2(-this-&gt;C1<sp/>/<sp/>denominator,<sp/>-this-&gt;B1<sp/>/<sp/>denominator);<sp/><sp/></highlight><highlight class="comment">//<sp/>std::atan2(y,x)<sp/>=<sp/>tan^-1(y/x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-virtual<sp/>rotations:<sp/>if<sp/>p<sp/>&gt;<sp/>N_P<sp/>and<sp/>q<sp/>&lt;=<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&gt;=<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&lt;<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cmp<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_jacobi_orbital_optimizer_1a47db01d590dd175c7125a2f8d12546be" kindref="member">comparer</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::priority_queue&lt;pair_type,<sp/>std::vector&lt;pair_type&gt;,<sp/>decltype(cmp)&gt;<sp/>queue(cmp);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>lambda<sp/>gradient<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorFunction&lt;double&gt;<sp/>gradient_function<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorX&lt;double&gt;&amp;<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorX&lt;double&gt;<sp/>gradient_vec(1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_vec<sp/>&lt;&lt;<sp/>(-2<sp/>*<sp/>this-&gt;B2<sp/>*<sp/>std::sin(2<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>+<sp/>2<sp/>*<sp/>this-&gt;C2<sp/>*<sp/>std::cos(2<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>-<sp/>4<sp/>*<sp/>this-&gt;D2<sp/>*<sp/>std::sin(4<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>+<sp/>4<sp/>*<sp/>this-&gt;E2<sp/>*<sp/>std::cos(4<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0)));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gradient_vec;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>lambda<sp/>Hessian<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatrixFunction&lt;double&gt;<sp/>hessian_function<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorX&lt;double&gt;&amp;<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SquareMatrix&lt;double&gt;<sp/>hessian_matrix(1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hessian_matrix<sp/>&lt;&lt;<sp/>(-4<sp/>*<sp/>this-&gt;B2<sp/>*<sp/>std::cos(2<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>-<sp/>2<sp/>*<sp/>this-&gt;C2<sp/>*<sp/>std::sin(2<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>-<sp/>16<sp/>*<sp/>this-&gt;D2<sp/>*<sp/>std::cos(4<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0))<sp/>-<sp/>16<sp/>*<sp/>this-&gt;E2<sp/>*<sp/>std::sin(4<sp/>*<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>(0)));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hessian_matrix;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>three<sp/>initial<sp/>guesses<sp/>to<sp/>get<sp/>the<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>half_pi<sp/>=<sp/>boost::math::constants::half_pi&lt;double&gt;();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>quarter_pi<sp/>=<sp/>half_pi<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>theta_values<sp/>{0.0,<sp/>half_pi,<sp/>quarter_pi};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>theta<sp/>:<sp/>theta_values)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorX&lt;double&gt;<sp/>theta_vec(1);<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>implicitly<sp/>convert<sp/>a<sp/>float<sp/>to<sp/>an<sp/>VectorX&lt;double&gt;<sp/>so<sp/>we<sp/>make<sp/>it<sp/>ourselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_vec<sp/>&lt;&lt;<sp/>theta;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinimizationEnvironment&lt;double&gt;<sp/>minimization_environment(theta_vec,<sp/>gradient_function,<sp/>hessian_function);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>minimizer<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_minimizer_1a3a798b44876f9fdd5685bced252a4a9b" kindref="member">GQCP::Minimizer&lt;double&gt;::Newton</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimizer.perform(minimization_environment);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>theta_min<sp/>=<sp/>minimization_environment.variables.back()(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>inside<sp/>the<sp/>VectorX&lt;double&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JacobiRotation<sp/>jacobi_rotation<sp/>{p,<sp/>q,<sp/>theta_min};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_change<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1a1feb9cc0360904a0dc681756ef681e00" kindref="member">calculateScalarFunctionChange</ref>(sq_hamiltonian,<sp/>jacobi_rotation);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue.emplace(jacobi_rotation,<sp/>E_change);<sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>a<sp/>pair_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>theta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>optimal_theta<sp/>=<sp/>queue.top().first.angle();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorX&lt;double&gt;<sp/>theta_min_vec<sp/>{1};<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>implicitly<sp/>convert<sp/>a<sp/>float<sp/>to<sp/>an<sp/>VectorX&lt;double&gt;<sp/>so<sp/>we<sp/>make<sp/>it<sp/>ourselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_min_vec<sp/>&lt;&lt;<sp/>optimal_theta;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hessian_function(theta_min_vec)(0,<sp/>0)<sp/>&gt;<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Hessian<sp/>of<sp/>the<sp/>minimal<sp/>value<sp/>of<sp/>the<sp/>three<sp/>must<sp/>be<sp/>positive,<sp/>otherwise<sp/>we&apos;re<sp/>not<sp/>in<sp/>a<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>optimal_theta;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Virtual-virtual<sp/>rotations:<sp/>if<sp/>p<sp/>&gt;<sp/>N_P<sp/>and<sp/>q<sp/>&gt;<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&gt;=<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&gt;=<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/>std::sqrt(std::pow(this-&gt;B3,<sp/>2)<sp/>+<sp/>std::pow(this-&gt;C3,<sp/>2));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>denominator<sp/>is<sp/>almost<sp/>zero,<sp/>the<sp/>Jacobi<sp/>rotation<sp/>is<sp/>redundant:<sp/>the<sp/>corresponding<sp/>angle<sp/>of<sp/>a<sp/>&apos;non&apos;-rotation<sp/>is<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>&lt;<sp/>1.0e-08)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>std::atan2(-this-&gt;C3<sp/>/<sp/>denominator,<sp/>-this-&gt;B3<sp/>/<sp/>denominator);<sp/><sp/></highlight><highlight class="comment">//<sp/>std::atan2(y,x)<sp/>=<sp/>tan^-1(y/x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>that<sp/>p<sp/>&lt;=<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;AP1roGJacobiOrbitalOptimizer::calculateJacobiCoefficients(const<sp/>RSQHamiltonian&lt;double&gt;&amp;,<sp/>const<sp/>size_t,<sp/>const<sp/>size_t):<sp/>The<sp/>given<sp/>p<sp/>and<sp/>q<sp/>are<sp/>invalid:<sp/>p<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>q.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1a1feb9cc0360904a0dc681756ef681e00" kindref="member">AP1roGJacobiOrbitalOptimizer::calculateScalarFunctionChange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RSQHamiltonian&lt;double&gt;&amp;<sp/>sq_hamiltonian,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JacobiRotation&amp;<sp/>jacobi_rotation)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>jacobi_rotation.p();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>jacobi_rotation.q();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>jacobi_rotation.angle();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I&apos;ve<sp/>written<sp/>everything<sp/>in<sp/>terms<sp/>of<sp/>cos(2<sp/>theta),<sp/>sin(2<sp/>theta),<sp/>cos(4<sp/>theta)<sp/>and<sp/>sin(4<sp/>theta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>std::cos(2<sp/>*<sp/>theta);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>std::sin(2<sp/>*<sp/>theta);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c4<sp/>=<sp/>std::cos(4<sp/>*<sp/>theta);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s4<sp/>=<sp/>std::sin(4<sp/>*<sp/>theta);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>Jacobi<sp/>rotated<sp/>energy<sp/>with<sp/>disjoint<sp/>cases<sp/>for<sp/>p<sp/>and<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-occupied<sp/>rotations:<sp/>if<sp/>p<sp/>&lt;=<sp/>N_P<sp/>and<sp/>q<sp/>&lt;=<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&lt;<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&lt;<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;A1<sp/>+<sp/>this-&gt;B1<sp/>*<sp/>c2<sp/>+<sp/>this-&gt;C1<sp/>*<sp/>s2;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occupied-virtual<sp/>rotations:<sp/>if<sp/>p<sp/>&gt;<sp/>N_P<sp/>and<sp/>q<sp/>&lt;=<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&gt;=<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&lt;<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;A2<sp/>+<sp/>this-&gt;B2<sp/>*<sp/>c2<sp/>+<sp/>this-&gt;C2<sp/>*<sp/>s2<sp/>+<sp/>this-&gt;D2<sp/>*<sp/>c4<sp/>+<sp/>this-&gt;E2<sp/>*<sp/>s4;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Virtual-virtual<sp/>rotations:<sp/>if<sp/>p<sp/>&gt;<sp/>N_P<sp/>and<sp/>q<sp/>&gt;<sp/>N_P<sp/>for<sp/>computers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>&gt;=<sp/>this-&gt;N_P)<sp/>&amp;&amp;<sp/>(q<sp/>&gt;=<sp/>this-&gt;N_P))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;A3<sp/>+<sp/>this-&gt;B3<sp/>*<sp/>c2<sp/>+<sp/>this-&gt;C3<sp/>*<sp/>s2;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>means<sp/>that<sp/>p<sp/>&lt;=<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;AP1roGJacobiOrbitalOptimizer::calculateJacobiCoefficients(const<sp/>RSQHamiltonian&lt;double&gt;&amp;,<sp/>const<sp/>size_t,<sp/>const<sp/>size_t):<sp/>The<sp/>given<sp/>p<sp/>and<sp/>q<sp/>are<sp/>invalid:<sp/>p<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>q.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_a_p1ro_g_jacobi_orbital_optimizer_1adc5302895d7c2e72a6d807777f9426f9" kindref="member">AP1roGJacobiOrbitalOptimizer::prepareJacobiSpecificConvergenceChecking</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RSQHamiltonian&lt;double&gt;&amp;<sp/>sq_hamiltonian)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimize<sp/>the<sp/>AP1roG<sp/>wave<sp/>function<sp/>model<sp/>in<sp/>this<sp/>basis<sp/>and<sp/>update<sp/>the<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solver<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_non_linear_equation_solver_1a8fa8bd3c3e4cf9b433968460b15cc779" kindref="member">GQCP::NonLinearEquationSolver&lt;double&gt;::Newton</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>environment<sp/>=<sp/><ref refid="namespace_g_q_c_p_1_1_p_s_environment_1ab7ade7744238001d644f02702f8d7309" kindref="member">GQCP::PSEnvironment::AP1roG</ref>(sq_hamiltonian,<sp/>this-&gt;G);<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>initial<sp/>guess<sp/>are<sp/>the<sp/>current<sp/>geminal<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qc_structure<sp/>=<sp/><ref refid="namespace_g_q_c_p_1_1_p_s_environment_1ab7ade7744238001d644f02702f8d7309" kindref="member">GQCP::QCMethod::AP1roG</ref>(sq_hamiltonian,<sp/>N_P).optimize(solver,<sp/>environment);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;G<sp/>=<sp/>qc_structure.groundStateParameters().geminalCoefficients();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;E<sp/>=<sp/>qc_structure.groundStateEnergy();</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>GQCP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.cpp"/>
  </compounddef>
</doxygen>
