<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_r_spin_orbital_basis" kind="class" language="C++" prot="public">
    <compoundname>GQCP::RSpinOrbitalBasis</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis" prot="public" virt="non-virtual">GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</basecompoundref>
    <includes refid="_r_spin_orbital_basis_8hpp" local="no">RSpinOrbitalBasis.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _ExpansionScalar</type>
      </param>
      <param>
        <type>typename _Shell</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" prot="public" static="no">
        <type>_ExpansionScalar</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::ExpansionScalar =  _ExpansionScalar</definition>
        <argsstring></argsstring>
        <name>ExpansionScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="50" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a5cc5b25be3944ebe7140b30a14dedbce" prot="public" static="no">
        <type>_Shell</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::Shell =  _Shell</definition>
        <argsstring></argsstring>
        <name>Shell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="53" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1aad32b0cc0dce8be836799d61e50cf500" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_simple_spinor_basis" kindref="compound">SimpleSpinorBasis</ref>&lt; _ExpansionScalar, <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis" kindref="compound">RSpinOrbitalBasis</ref>&lt; _ExpansionScalar, _Shell &gt; &gt;</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::BaseSpinorBasis =  SimpleSpinorBasis&lt;_ExpansionScalar, RSpinOrbitalBasis&lt;_ExpansionScalar, _Shell&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>BaseSpinorBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="56" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a75c80392015198d949774257c5d1d84d" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_r_transformation" kindref="compound">RTransformation</ref>&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" kindref="member">ExpansionScalar</ref> &gt;</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::Transformation =  RTransformation&lt;ExpansionScalar&gt;</definition>
        <argsstring></argsstring>
        <name>Transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="59" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1af95118cd66ddd598ec1c6b350e46c5c7" prot="public" static="no">
        <type>typename Shell::Primitive</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::Primitive =  typename Shell::Primitive</definition>
        <argsstring></argsstring>
        <name>Primitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="62" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" prot="public" static="no">
        <type>typename Shell::BasisFunction</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::BasisFunction =  typename Shell::BasisFunction</definition>
        <argsstring></argsstring>
        <name>BasisFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="65" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a36cc50b784a2dba257914a00bfe85d89" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>&lt; <ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t</ref>&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" kindref="member">ExpansionScalar</ref>, typename BasisFunction::CoefficientScalar &gt;, <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" kindref="member">BasisFunction</ref> &gt;</type>
        <definition>using GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::SpatialOrbital =  LinearCombination&lt;product_t&lt;ExpansionScalar, typename BasisFunction::CoefficientScalar&gt;, BasisFunction&gt;</definition>
        <argsstring></argsstring>
        <name>SpatialOrbital</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="68" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1acc337f6e3f3dddd0be78dacc69d3599c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::numberOfSpatialOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>numberOfSpatialOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of different spatial orbitals that are used in this restricted spin-orbital basis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="87" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a5bcee2b4b1b0e35dadde44a46984e029" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::numberOfSpinors</definition>
        <argsstring>() const</argsstring>
        <name>numberOfSpinors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of spinors that are described by this restricted spin-orbital basis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="92" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a89c30d78567b003c9020c6b31520eaa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::numberOfSpinOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>numberOfSpinOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of spin-orbitals that are described by this restricted spin-orbital basis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="97" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a6633da0cc38c0089254de3778c731e2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FQOneElectronOperator</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::quantize</definition>
        <argsstring>(const FQOneElectronOperator &amp;fq_one_op) const -&gt; RSQOneElectronOperator&lt; product_t&lt; typename FQOneElectronOperator::Scalar, ExpansionScalar &gt;, typename FQOneElectronOperator::Vectorizer &gt;</argsstring>
        <name>quantize</name>
        <param>
          <type>const FQOneElectronOperator &amp;</type>
          <declname>fq_one_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Quantize a first-quantized one-electron operator in this restricted spin-orbital basis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fq_one_op</parametername>
</parameternamelist>
<parameterdescription>
<para>The first-quantized one-electron operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FQOneElectronOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the first-quantized one-electron operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The second-quantized operator corresponding to the given first-quantized operator, i.e. expressed in/projected onto this spin-orbital basis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="114" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="114" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1ad5f906f989853bc821ba0150a221eec7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::quantize</definition>
        <argsstring>(const CoulombRepulsionOperator &amp;fq_op) const -&gt; RSQTwoElectronOperator&lt; product_t&lt; CoulombRepulsionOperator::Scalar, ExpansionScalar &gt;, CoulombRepulsionOperator::Vectorizer &gt;</argsstring>
        <name>quantize</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_coulomb_repulsion_operator" kindref="compound">CoulombRepulsionOperator</ref> &amp;</type>
          <declname>fq_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Quantize the Coulomb operator in this restricted spin-orbital basis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fq_op</parametername>
</parameternamelist>
<parameterdescription>
<para>The first-quantized Coulomb operator.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The second-quantized operator corresponding to the Coulomb operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="134" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1aa742e5dc57b287170d71b8f2bcd8e06f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_evaluatable_scalar_r_s_q_one_electron_operator" kindref="compound">EvaluatableScalarRSQOneElectronOperator</ref>&lt; <ref refid="class_g_q_c_p_1_1_scalar_function_product" kindref="compound">ScalarFunctionProduct</ref>&lt; <ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>&lt; double, <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" kindref="member">BasisFunction</ref> &gt; &gt; &gt;</type>
        <definition>EvaluatableScalarRSQOneElectronOperator&lt;ScalarFunctionProduct&lt;LinearCombination&lt;double, BasisFunction&gt; &gt; &gt; GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::quantize</definition>
        <argsstring>(const ElectronicDensityOperator &amp;fq_density_op) const</argsstring>
        <name>quantize</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_electronic_density_operator" kindref="compound">ElectronicDensityOperator</ref> &amp;</type>
          <declname>fq_density_op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Quantize the (one-electron) electronic density operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fq_density_op</parametername>
</parameternamelist>
<parameterdescription>
<para>the first-quantized density operator</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the second-quantized density operator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="154" column="45" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="154" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1aa1c01d076a42f04ede664dfe6c901e33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a36cc50b784a2dba257914a00bfe85d89" kindref="member">SpatialOrbital</ref> &gt;</type>
        <definition>std::vector&lt;SpatialOrbital&gt; GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::spatialOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>spatialOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the set of spatial orbitals that is associated to this spin-orbital basis </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="181" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="181" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a4f93ecf321ddc5e10f81f3344a3449a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_spinor" kindref="compound">Spinor</ref>&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" kindref="member">ExpansionScalar</ref>, <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" kindref="member">BasisFunction</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Spinor&lt;ExpansionScalar, BasisFunction&gt; &gt; GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::spinOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>spinOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the set of spin-orbitals that is associated to this spin-orbital basis </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="211" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="211" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1a03892758a8559dcfb2a36ad05f62f1cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_r_mulliken_partitioning" kindref="compound">RMullikenPartitioning</ref>&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" kindref="member">ExpansionScalar</ref> &gt;</type>
        <definition>RMullikenPartitioning&lt;ExpansionScalar&gt; GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::mullikenPartitioning</definition>
        <argsstring>(const std::function&lt; bool(const BasisFunction &amp;)&gt; &amp;selector) const</argsstring>
        <name>mullikenPartitioning</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" kindref="member">BasisFunction</ref> &amp;)&gt; &amp;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Partition this set of restricted spin-orbitals according to the Mulliken partitioning scheme.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function that returns true for basis functions that should be included the Mulliken partitioning.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput><ref refid="class_g_q_c_p_1_1_r_mulliken_partitioning" kindref="compound">RMullikenPartitioning</ref></computeroutput> for the AOs selected by the supplied selector function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="243" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_r_spin_orbital_basis_1ac769e0f84752591775771245c338fef2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_r_mulliken_partitioning" kindref="compound">RMullikenPartitioning</ref>&lt; <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" kindref="member">ExpansionScalar</ref> &gt;</type>
        <definition>RMullikenPartitioning&lt;ExpansionScalar&gt; GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;::mullikenPartitioning</definition>
        <argsstring>(const std::function&lt; bool(const Shell &amp;)&gt; &amp;selector) const</argsstring>
        <name>mullikenPartitioning</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a5cc5b25be3944ebe7140b30a14dedbce" kindref="member">Shell</ref> &amp;)&gt; &amp;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Partition this set of restricted spin-orbitals according to the Mulliken partitioning scheme.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function that returns true for shells that should be included the Mulliken partitioning.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput><ref refid="class_g_q_c_p_1_1_r_mulliken_partitioning" kindref="compound">RMullikenPartitioning</ref></computeroutput> for the AOs selected by the supplied selector function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="257" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="257" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A restricted spin-orbital basis, i.e. a spin-orbital basis where the alpha- and beta-spinors are equal.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_ExpansionScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used to represent an expansion coefficient of the spin-orbitals in the underlying scalar orbitals: real or complex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Shell</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of shell the underlying scalar basis contains. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;</label>
        <link refid="class_g_q_c_p_1_1_r_spin_orbital_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spin_orbital_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::SimpleSpinorBasis&lt; _ExpansionScalar, RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spinor_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::CRTP&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="5">
        <label>GQCP::BasisTransformable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="6">
        <label>GQCP::JacobiRotatable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt;</label>
        <link refid="class_g_q_c_p_1_1_r_spin_orbital_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spin_orbital_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#scalar_basis</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::SimpleSpinorBasis&lt; _ExpansionScalar, RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spinor_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#C</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::CRTP&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="5">
        <label>GQCP::BasisTransformable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="8">
        <label>GQCP::ScalarBasis&lt; Shell &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_basis"/>
      </node>
      <node id="7">
        <label>GQCP::BasisTransformableTraits&lt; FinalSpinorBasis &gt;</label>
        <link refid="struct_g_q_c_p_1_1_basis_transformable_traits"/>
      </node>
      <node id="6">
        <label>GQCP::JacobiRotatable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" line="46" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp" bodystart="47" bodyend="262"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1aad32b0cc0dce8be836799d61e50cf500" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>BaseSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af80a4fe5fd969824042cc98025acb72e" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>BasisFunction</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a9abca647ddeb9772b5c58fe7366204ac" prot="protected" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>C</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1a2266d4aacaad437e302033b24e1d6d11" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab53c6ca668c4f27dd4aa51856b6aee91" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab72cbeb2fad6d811d4f6fcd2c962b55e" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>Derived</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a1df9d7598f4fac0445ef10d7eff4ec74" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>DerivedSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1ad150aa71df288eda895400a1970976d2" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>expansion</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a80cd4ad6ae5cbc165404fc7cb09e3ffe" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>ExpansionScalar</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa3b991f95864658a48cb6b7360dca2aa" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>FinalSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa00b804a0f522ee6b046e45d9e39a7b8" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>isOrthonormal</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa137ad5da7e46d3f6bfb30e1c8a4a71f" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>JacobiRotationType</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a7dcbcf5803cb8c3b4b65cb49ce3f5f69" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>lowdinOrthonormalization</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a53160b32246fe945f0fb7aa46d15c4e9" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>lowdinOrthonormalize</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a03892758a8559dcfb2a36ad05f62f1cc" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>mullikenPartitioning</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1ac769e0f84752591775771245c338fef2" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>mullikenPartitioning</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1acc337f6e3f3dddd0be78dacc69d3599c" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>numberOfSpatialOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a89c30d78567b003c9020c6b31520eaa8" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>numberOfSpinOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a5bcee2b4b1b0e35dadde44a46984e029" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>numberOfSpinors</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a42b2813a11f43e74c7fa60ee90a5ae0e" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>overlap</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1af95118cd66ddd598ec1c6b350e46c5c7" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>Primitive</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a6633da0cc38c0089254de3778c731e2c" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>quantize</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1ad5f906f989853bc821ba0150a221eec7" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>quantize</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1aa742e5dc57b287170d71b8f2bcd8e06f" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>quantize</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a2e107bd3cf4d603c003c8cb9357d0094" prot="public" virt="non-virtual" ambiguityscope="BasisTransformable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;::"><scope>GQCP::RSpinOrbitalBasis</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1a11657b774fe75246bef1f7849f9aad72" prot="public" virt="non-virtual" ambiguityscope="JacobiRotatable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;::"><scope>GQCP::RSpinOrbitalBasis</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a35d1cde61d7596a61df2c39ddef578b1" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1ae0af50867dbd06193b64c2bcdd6b51ba" prot="public" virt="virtual" ambiguityscope="BasisTransformable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;::"><scope>GQCP::RSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1ae518b652e54f43acf2db43300c1d6fc0" prot="public" virt="pure-virtual" ambiguityscope="JacobiRotatable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;::"><scope>GQCP::RSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ad82e9a3ee9b7b72cb07eea596b80db53" prot="protected" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>scalar_basis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a65c66682f4aa90cc4c7bf2cd3dfb3e43" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>scalarBasis</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a5cc5b25be3944ebe7140b30a14dedbce" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>Shell</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1abbad8e4366b720933a378ea276bf9502" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>simpleDimension</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1af946e8de1e88562c95630a0aef5f6a77" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SimpleSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3db0589ecea68031a220f82e5711d2de" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1af096f847c1c3c17d4c95c0bd7c0805c2" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1aefeac1ce6c38d836ad6d8bd3fb11212d" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3048576f622f5afc8abe21ccb8c1f227" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a36cc50b784a2dba257914a00bfe85d89" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SpatialOrbital</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1aa1c01d076a42f04ede664dfe6c901e33" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>spatialOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a4f93ecf321ddc5e10f81f3344a3449a9" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>spinOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a62e6854ce1fb8ab009b0479586337f8e" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>SQOverlapOperator</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1aa55d3cf1b186ac2ec926e97a7b6d645f" prot="public" virt="virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>transform</name></member>
      <member refid="class_g_q_c_p_1_1_r_spin_orbital_basis_1a75c80392015198d949774257c5d1d84d" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>Transformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa6d146421985b3aefc1b4a9ec4aa6c54" prot="public" virt="non-virtual"><scope>GQCP::RSpinOrbitalBasis</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a3c511224fd132184fb2e01579754850d" prot="public" virt="pure-virtual" ambiguityscope="BasisTransformable&lt; RSpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;::"><scope>GQCP::RSpinOrbitalBasis</scope><name>transformed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
