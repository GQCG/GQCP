<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_simple_spin_orbital_basis" kind="class" language="C++" prot="public">
    <compoundname>GQCP::SimpleSpinOrbitalBasis</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_simple_spinor_basis" prot="public" virt="non-virtual">GQCP::SimpleSpinorBasis&lt; _ExpansionScalar, _DerivedSpinOrbitalBasis &gt;</basecompoundref>
    <includes refid="_simple_spin_orbital_basis_8hpp" local="no">SimpleSpinOrbitalBasis.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _ExpansionScalar</type>
      </param>
      <param>
        <type>typename _Shell</type>
      </param>
      <param>
        <type>typename _DerivedSpinOrbitalBasis</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a319f74c5446dbd8540e29cf794b3d22b" prot="public" static="no">
        <type>_ExpansionScalar</type>
        <definition>using GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::ExpansionScalar =  _ExpansionScalar</definition>
        <argsstring></argsstring>
        <name>ExpansionScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="42" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" prot="public" static="no">
        <type>_Shell</type>
        <definition>using GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::Shell =  _Shell</definition>
        <argsstring></argsstring>
        <name>Shell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="45" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a1df9d7598f4fac0445ef10d7eff4ec74" prot="public" static="no">
        <type>_DerivedSpinOrbitalBasis</type>
        <definition>using GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::DerivedSpinOrbitalBasis =  _DerivedSpinOrbitalBasis</definition>
        <argsstring></argsstring>
        <name>DerivedSpinOrbitalBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="48" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1abc259871107d62ac95ced183c272baa0" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_simple_spinor_basis" kindref="compound">SimpleSpinorBasis</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a319f74c5446dbd8540e29cf794b3d22b" kindref="member">ExpansionScalar</ref>, <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a1df9d7598f4fac0445ef10d7eff4ec74" kindref="member">DerivedSpinOrbitalBasis</ref> &gt;</type>
        <definition>using GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::BaseSpinorBasis =  SimpleSpinorBasis&lt;ExpansionScalar, DerivedSpinOrbitalBasis&gt;</definition>
        <argsstring></argsstring>
        <name>BaseSpinorBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="51" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ac3b0da5ca443326d3a8829702b504d8a" prot="public" static="no">
        <type>typename <ref refid="struct_g_q_c_p_1_1_spinor_basis_traits" kindref="compound">SpinorBasisTraits</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a1df9d7598f4fac0445ef10d7eff4ec74" kindref="member">DerivedSpinOrbitalBasis</ref> &gt;::<ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ac3b0da5ca443326d3a8829702b504d8a" kindref="member">Transformation</ref></type>
        <definition>using GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::Transformation =  typename SpinorBasisTraits&lt;DerivedSpinOrbitalBasis&gt;::Transformation</definition>
        <argsstring></argsstring>
        <name>Transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="54" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ad82e9a3ee9b7b72cb07eea596b80db53" prot="protected" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" kindref="member">Shell</ref> &gt;</type>
        <definition>ScalarBasis&lt;Shell&gt; GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::scalar_basis</definition>
        <argsstring></argsstring>
        <name>scalar_basis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="59" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3db0589ecea68031a220f82e5711d2de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::SimpleSpinOrbitalBasis</definition>
        <argsstring>(const ScalarBasis&lt; Shell &gt; &amp;scalar_basis, const Transformation &amp;C)</argsstring>
        <name>SimpleSpinOrbitalBasis</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" kindref="member">Shell</ref> &gt; &amp;</type>
          <declname>scalar_basis</declname>
        </param>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ac3b0da5ca443326d3a8829702b504d8a" kindref="member">Transformation</ref> &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis" kindref="compound">SimpleSpinOrbitalBasis</ref></computeroutput> from a scalar basis and a transformation that expresses the current spin-orbitals in terms of that underlying scalar basis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_basis</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying scalar basis with respect to which the basis coefficients are expressed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>The transformation that relates the current set of spinors with the atomic spinors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="73" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1af096f847c1c3c17d4c95c0bd7c0805c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::SimpleSpinOrbitalBasis</definition>
        <argsstring>(const ScalarBasis&lt; Shell &gt; &amp;scalar_basis)</argsstring>
        <name>SimpleSpinOrbitalBasis</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" kindref="member">Shell</ref> &gt; &amp;</type>
          <declname>scalar_basis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis" kindref="compound">SimpleSpinOrbitalBasis</ref></computeroutput> with an initial coefficient matrix that is the identity. The resulting spin-orbital basis then corresponds to the (non-orthogonal) atomic spin-orbitals (AOs).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_basis</parametername>
</parameternamelist>
<parameterdescription>
<para>The underlying scalar basis with respect to which the basis coefficients are expressed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="83" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1aefeac1ce6c38d836ad6d8bd3fb11212d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::SimpleSpinOrbitalBasis</definition>
        <argsstring>(const NuclearFramework &amp;nuclear_framework, const std::string &amp;basisset_name)</argsstring>
        <name>SimpleSpinOrbitalBasis</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_nuclear_framework" kindref="compound">NuclearFramework</ref> &amp;</type>
          <declname>nuclear_framework</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>basisset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis" kindref="compound">SimpleSpinOrbitalBasis</ref></computeroutput> with an underlying scalar basis that is made by placing shells corresponding to the basisset specification on every nucleus of the nuclear framework. The resulting spin-orbital basis then corresponds to the (non-orthogonal) atomic spin-orbitals (AOs).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuclear_framework</parametername>
</parameternamelist>
<parameterdescription>
<para>The nuclear framework containing the nuclei on which the shells of the scalar basis should be centered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basisset_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the basisset, e.g. &quot;STO-3G&quot;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The normalization factors of the spherical (or axis-aligned Cartesian) GTO primitives are embedded in the contraction coefficients of the underlying shells. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="95" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="95" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3048576f622f5afc8abe21ccb8c1f227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::SimpleSpinOrbitalBasis</definition>
        <argsstring>(const Molecule &amp;molecule, const std::string &amp;basisset_name)</argsstring>
        <name>SimpleSpinOrbitalBasis</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_molecule" kindref="compound">Molecule</ref> &amp;</type>
          <declname>molecule</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>basisset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis" kindref="compound">SimpleSpinOrbitalBasis</ref></computeroutput> with an underlying scalar basis that is made by placing shells corresponding to the basisset specification on every nucleus of the molecule. The resulting spin-orbital basis then corresponds to the (non-orthogonal) atomic spin-orbitals (AOs).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>molecule</parametername>
</parameternamelist>
<parameterdescription>
<para>The molecule containing the nuclei on which the shells of the scalar basis should be centered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basisset_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the basisset, e.g. &quot;STO-3G&quot;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The normalization factors of the spherical (or axis-aligned Cartesian) GTO primitives are embedded in the contraction coefficients of the underlying shells. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="107" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="107" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a65c66682f4aa90cc4c7bf2cd3dfb3e43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" kindref="member">Shell</ref> &gt; &amp;</type>
        <definition>const ScalarBasis&lt;Shell&gt;&amp; GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;::scalarBasis</definition>
        <argsstring>() const</argsstring>
        <name>scalarBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The underlying scalar basis with respect to which the basis coefficients are expressed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="118" column="23" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A type specifically designed to act as a parent class for <computeroutput><ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis" kindref="compound">RSpinOrbitalBasis</ref></computeroutput> and <computeroutput><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component" kindref="compound">USpinOrbitalBasisComponent</ref></computeroutput> in order to share common functionality.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_ExpansionScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used to represent an expansion coefficient of the spin-orbitals in the underlying scalar orbitals: real or complex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Shell</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of shell that the underlying scalar basis contains. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_DerivedSpinOrbitalBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>The spin-orbital basis that derives from this class, enabling <ref refid="class_g_q_c_p_1_1_c_r_t_p" kindref="compound">CRTP</ref> and compile-time polymorphism. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>GQCP::CRTP&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="2">
        <label>GQCP::SimpleSpinorBasis&lt; _ExpansionScalar, _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spinor_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spin_orbital_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::BasisTransformable&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="5">
        <label>GQCP::JacobiRotatable&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>GQCP::CRTP&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="2">
        <label>GQCP::SimpleSpinorBasis&lt; _ExpansionScalar, _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spinor_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#C</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>GQCP::SimpleSpinOrbitalBasis&lt; _ExpansionScalar, _Shell, _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_spin_orbital_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#scalar_basis</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::BasisTransformable&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="7">
        <label>GQCP::ScalarBasis&lt; Shell &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_basis"/>
      </node>
      <node id="5">
        <label>GQCP::JacobiRotatable&lt; _DerivedSpinOrbitalBasis &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
      <node id="6">
        <label>GQCP::BasisTransformableTraits&lt; FinalSpinorBasis &gt;</label>
        <link refid="struct_g_q_c_p_1_1_basis_transformable_traits"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" line="38" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp" bodystart="39" bodyend="119"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1abc259871107d62ac95ced183c272baa0" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>BaseSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a9abca647ddeb9772b5c58fe7366204ac" prot="protected" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>C</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1a2266d4aacaad437e302033b24e1d6d11" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab53c6ca668c4f27dd4aa51856b6aee91" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab72cbeb2fad6d811d4f6fcd2c962b55e" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>Derived</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a1df9d7598f4fac0445ef10d7eff4ec74" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>DerivedSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1ad150aa71df288eda895400a1970976d2" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>expansion</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a319f74c5446dbd8540e29cf794b3d22b" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>ExpansionScalar</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa3b991f95864658a48cb6b7360dca2aa" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>FinalSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa00b804a0f522ee6b046e45d9e39a7b8" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>isOrthonormal</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa137ad5da7e46d3f6bfb30e1c8a4a71f" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>JacobiRotationType</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a7dcbcf5803cb8c3b4b65cb49ce3f5f69" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>lowdinOrthonormalization</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a53160b32246fe945f0fb7aa46d15c4e9" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>lowdinOrthonormalize</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a42b2813a11f43e74c7fa60ee90a5ae0e" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>overlap</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a2e107bd3cf4d603c003c8cb9357d0094" prot="public" virt="non-virtual" ambiguityscope="BasisTransformable&lt; _DerivedSpinOrbitalBasis &gt;::"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1a11657b774fe75246bef1f7849f9aad72" prot="public" virt="non-virtual" ambiguityscope="JacobiRotatable&lt; _DerivedSpinOrbitalBasis &gt;::"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a35d1cde61d7596a61df2c39ddef578b1" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1ae0af50867dbd06193b64c2bcdd6b51ba" prot="public" virt="virtual" ambiguityscope="BasisTransformable&lt; _DerivedSpinOrbitalBasis &gt;::"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1ae518b652e54f43acf2db43300c1d6fc0" prot="public" virt="pure-virtual" ambiguityscope="JacobiRotatable&lt; _DerivedSpinOrbitalBasis &gt;::"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ad82e9a3ee9b7b72cb07eea596b80db53" prot="protected" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>scalar_basis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a65c66682f4aa90cc4c7bf2cd3dfb3e43" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>scalarBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a461d84956dd760d5f7be2d4c715de2ae" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>Shell</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1abbad8e4366b720933a378ea276bf9502" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>simpleDimension</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1af946e8de1e88562c95630a0aef5f6a77" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SimpleSpinorBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3db0589ecea68031a220f82e5711d2de" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1af096f847c1c3c17d4c95c0bd7c0805c2" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1aefeac1ce6c38d836ad6d8bd3fb11212d" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a3048576f622f5afc8abe21ccb8c1f227" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SimpleSpinOrbitalBasis</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1a62e6854ce1fb8ab009b0479586337f8e" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>SQOverlapOperator</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1aa55d3cf1b186ac2ec926e97a7b6d645f" prot="public" virt="virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>transform</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1ac3b0da5ca443326d3a8829702b504d8a" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>Transformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa6d146421985b3aefc1b4a9ec4aa6c54" prot="public" virt="non-virtual"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a3c511224fd132184fb2e01579754850d" prot="public" virt="pure-virtual" ambiguityscope="BasisTransformable&lt; _DerivedSpinOrbitalBasis &gt;::"><scope>GQCP::SimpleSpinOrbitalBasis</scope><name>transformed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
