<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_levi_civita_tensor" kind="class" language="C++" prot="public">
    <compoundname>GQCP::LeviCivitaTensor</compoundname>
    <includes refid="_levi_civita_tensor_8hpp" local="no">LeviCivitaTensor.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_levi_civita_tensor_1afeab51aff802e8395a2f7a10543981f6" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::LeviCivitaTensor&lt; _Scalar &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <qualifiedname>GQCP::LeviCivitaTensor::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="38" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_levi_civita_tensor_1a60bd704a5b1df06af1a4e6189a597e05" prot="private" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_tensor" kindref="compound">Tensor</ref>&lt; <ref refid="class_g_q_c_p_1_1_levi_civita_tensor_1afeab51aff802e8395a2f7a10543981f6" kindref="member">Scalar</ref>, 3 &gt;</type>
        <definition>Tensor&lt;Scalar, 3&gt; GQCP::LeviCivitaTensor&lt; _Scalar &gt;::epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <qualifiedname>GQCP::LeviCivitaTensor::epsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="42" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_levi_civita_tensor_1a1d443d72976ec0945fd9a4042710d790" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::LeviCivitaTensor&lt; _Scalar &gt;::LeviCivitaTensor</definition>
        <argsstring>()</argsstring>
        <name>LeviCivitaTensor</name>
        <qualifiedname>GQCP::LeviCivitaTensor::LeviCivitaTensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="52" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_levi_civita_tensor_1a4e212aacf3e622754d323f7670cddb49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_levi_civita_tensor_1afeab51aff802e8395a2f7a10543981f6" kindref="member">Scalar</ref></type>
        <definition>Scalar GQCP::LeviCivitaTensor&lt; _Scalar &gt;::operator()</definition>
        <argsstring>(const size_t i, const size_t j, const size_t k) const</argsstring>
        <name>operator()</name>
        <qualifiedname>GQCP::LeviCivitaTensor::operator()</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access one of the elements of the Levi-Civita tensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The first accessor index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The second accessor index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The third accessor index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element epsilon(i,j,k) of the Levi-Civita tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="78" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_levi_civita_tensor_1a53da2e83ad429431d426c43184800780" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::LeviCivitaTensor&lt; _Scalar &gt;::nonZeroIndex</definition>
        <argsstring>(const size_t i, const size_t j) const</argsstring>
        <name>nonZeroIndex</name>
        <qualifiedname>GQCP::LeviCivitaTensor::nonZeroIndex</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the index k such that the Levi-Civita tensor epsilon(i,j,k) (or any permutations thereof) does not vanish.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>An index of the Levi-Civita tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Another index of the Levi-Civita tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index k such that epsilon(i,j,k) does not vanish. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="88" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="88" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The antisymmetric rank-three Levi-Civita tensor.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type of one of the elements of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::LeviCivitaTensor&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_levi_civita_tensor"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" line="35" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/LeviCivitaTensor.hpp" bodystart="35" bodyend="97"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_levi_civita_tensor_1a60bd704a5b1df06af1a4e6189a597e05" prot="private" virt="non-virtual"><scope>GQCP::LeviCivitaTensor</scope><name>epsilon</name></member>
      <member refid="class_g_q_c_p_1_1_levi_civita_tensor_1a1d443d72976ec0945fd9a4042710d790" prot="public" virt="non-virtual"><scope>GQCP::LeviCivitaTensor</scope><name>LeviCivitaTensor</name></member>
      <member refid="class_g_q_c_p_1_1_levi_civita_tensor_1a53da2e83ad429431d426c43184800780" prot="public" virt="non-virtual"><scope>GQCP::LeviCivitaTensor</scope><name>nonZeroIndex</name></member>
      <member refid="class_g_q_c_p_1_1_levi_civita_tensor_1a4e212aacf3e622754d323f7670cddb49" prot="public" virt="non-virtual"><scope>GQCP::LeviCivitaTensor</scope><name>operator()</name></member>
      <member refid="class_g_q_c_p_1_1_levi_civita_tensor_1afeab51aff802e8395a2f7a10543981f6" prot="public" virt="non-virtual"><scope>GQCP::LeviCivitaTensor</scope><name>Scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
