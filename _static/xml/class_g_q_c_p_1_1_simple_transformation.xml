<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_simple_transformation" kind="class" language="C++" prot="public">
    <compoundname>GQCP::SimpleTransformation</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_basis_transformable" prot="public" virt="non-virtual">GQCP::BasisTransformable&lt; _DerivedTransformation &gt;</basecompoundref>
    <basecompoundref refid="class_g_q_c_p_1_1_jacobi_rotatable" prot="public" virt="non-virtual">GQCP::JacobiRotatable&lt; _DerivedTransformation &gt;</basecompoundref>
    <includes refid="_simple_transformation_8hpp" local="no">SimpleTransformation.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
      <param>
        <type>typename _DerivedTransformation</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="50" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" prot="public" static="no">
        <type>_DerivedTransformation</type>
        <definition>using GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::DerivedTransformation =  _DerivedTransformation</definition>
        <argsstring></argsstring>
        <name>DerivedTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="53" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_transformation_1ada44eeef314de5b5ad79587480745505" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation" kindref="compound">SimpleTransformation</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" kindref="member">Scalar</ref>, <ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref> &gt;</type>
        <definition>using GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::Self =  SimpleTransformation&lt;Scalar, DerivedTransformation&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="56" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_simple_transformation_1a30b9d326d44957602bc7081c692fc719" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_jacobi_rotation" kindref="compound">JacobiRotation</ref></type>
        <definition>using GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::JacobiRotationType =  JacobiRotation</definition>
        <argsstring></argsstring>
        <name>JacobiRotationType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="59" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_simple_transformation_1ac262d8b59931978058481f1b6bea735e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" kindref="member">Scalar</ref> &gt;</type>
        <definition>SquareMatrix&lt;Scalar&gt; GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::T</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="64" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a5ecd32337e09da059a91ba0a9a5da30e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::SimpleTransformation</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;T)</argsstring>
        <name>SimpleTransformation</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <computeroutput><ref refid="class_g_q_c_p_1_1_simple_transformation" kindref="compound">SimpleTransformation</ref></computeroutput> from the transformation matrix that it encapsulates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The transformation matrix that collects the expansion coefficients of the new basis (vectors) in the old basis as columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="77" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="77" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a2bf93e827850f7ccebcd64af4999abb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::numberOfOrbitals</definition>
        <argsstring>() const</argsstring>
        <name>numberOfOrbitals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of orbitals (spinors, spin-orbitals or spatial orbitals, depending on the context/derived class) this transformation is related to. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="138" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a639513b3b77cdce79434a46e81c4cd0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The dimension of this basis transformation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="143" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a006ae80a78c72409fad4769058c4e048" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" kindref="member">Scalar</ref> &gt; &amp;</type>
        <definition>const SquareMatrix&lt;Scalar&gt;&amp; GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::matrix</definition>
        <argsstring>() const</argsstring>
        <name>matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The transformation matrix that collects the expansion coefficients of the new basis (vectors) in the old basis as columns. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="153" column="24" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a1c0f14136382fc6d98f006013eb87c15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::adjoint</definition>
        <argsstring>() const</argsstring>
        <name>adjoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The adjoint transformation of this one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="163" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a5f36fc890460cc7c7a64eee376261c54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::inverse</definition>
        <argsstring>() const</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The inverse transformation of this one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="168" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a69eb192652259a3c7894b873aba818a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::isUnitary</definition>
        <argsstring>(const double threshold=1.0e-12) const</argsstring>
        <name>isUnitary</name>
        <param>
          <type>const double</type>
          <declname>threshold</declname>
          <defval>1.0e-12</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this transformation is unitary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold used to check for unitarity.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If this transformation is unitary, within the given threshold. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="177" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a93317a9a6e9f48a371a422c76b117054" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::transformed</definition>
        <argsstring>(const DerivedTransformation &amp;T) const override</argsstring>
        <name>transformed</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref> &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the basis transformation and return the result, which corresponds to the concatenation of two basis transformations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The basis transformation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformation that encapsulates the sequential application of this transformation, followed by the given transformation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="191" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a31eeb20c66eabcc2c2c88599716c0ea9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::rotated</definition>
        <argsstring>(const JacobiRotationType &amp;jacobi_rotation) const override</argsstring>
        <name>rotated</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_simple_transformation_1a30b9d326d44957602bc7081c692fc719" kindref="member">JacobiRotationType</ref> &amp;</type>
          <declname>jacobi_rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the Jacobi rotation and return the result.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobi_rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The Jacobi rotation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformation that encapsulates the sequential application of this transformation, followed by the Jacobi rotation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="211" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="211" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a62eded5880afac6391df8e70a51c5dfe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>static DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::FromJacobi</definition>
        <argsstring>(const JacobiRotation &amp;jacobi_rotation, const size_t dim)</argsstring>
        <name>FromJacobi</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_jacobi_rotation" kindref="compound">JacobiRotation</ref> &amp;</type>
          <declname>jacobi_rotation</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a general transformation from Jacobi rotation. Note that we work with the (cos, sin, -sin, cos) definition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jacobi_rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The Jacobi rotation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the resulting matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The general transformation that corresponds to the given Jacobi rotation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="93" column="34" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1af9eb142b5ae58396440fbb408d029d4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>static DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::Identity</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>Identity</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity transformation between two orbital bases.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the transformation matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="107" column="34" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1a66165a4d5eb2217a80196d6d34a27023" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>static DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::Random</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>Random</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a random transformation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the transformation matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="114" column="34" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1af94648942e1be2a5929462fd48daea27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>static DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::RandomUnitary</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>RandomUnitary</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a random unitary transformation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the transformation matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="121" column="34" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_simple_transformation_1ad41c1f7a3627227e1bfc475596e78b39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" kindref="member">DerivedTransformation</ref></type>
        <definition>static DerivedTransformation GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;::Zero</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>Zero</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a zero transformation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the transformation matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="128" column="34" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A basis transformation that can be represented by a single transformation matrix.</para>
<para>In general, we adopt the convention outlined in (<ulink url="https://gqcg-res.github.io/knowdes/spinor-transformations.html">https://gqcg-res.github.io/knowdes/spinor-transformations.html</ulink>), where the new orbitals&apos; coefficients can be found in the respective <bold>column</bold> of the related transformation matrix.</para>
<para>This class is used as a base class for <computeroutput><ref refid="class_g_q_c_p_1_1_r_transformation" kindref="compound">RTransformation</ref></computeroutput> and <computeroutput><ref refid="class_g_q_c_p_1_1_g_transformation" kindref="compound">GTransformation</ref></computeroutput>, since they are both expressed using a single matrix, as opposed to <computeroutput><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref></computeroutput>, which uses separate transformation coefficients for alpha- and beta- matrices. The word &apos;simple&apos; is used here as an antonym for &apos;compound&apos;.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type used for a transformation coefficient: real or complex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_DerivedTransformation</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the transformation matrix that derives from this class, enabling <ref refid="class_g_q_c_p_1_1_c_r_t_p" kindref="compound">CRTP</ref> and compile-time polymorphism. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>GQCP::BasisTransformable&lt; _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="1">
        <label>GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_transformation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::JacobiRotatable&lt; _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GQCP::BasisTransformable&lt; _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_basis_transformable"/>
      </node>
      <node id="6">
        <label>Eigen::Matrix&lt; double, Dynamic, Dynamic &gt;</label>
      </node>
      <node id="4">
        <label>GQCP::SquareMatrix&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_square_matrix"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>MatrixX&lt; Scalar  &gt;</label>
        <link refid="class_g_q_c_p_1_1_matrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>GQCP::SimpleTransformation&lt; _Scalar, _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_transformation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#T</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::JacobiRotatable&lt; _DerivedTransformation &gt;</label>
        <link refid="class_g_q_c_p_1_1_jacobi_rotatable"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" line="44" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/SimpleTransformation.hpp" bodystart="46" bodyend="227"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a1c0f14136382fc6d98f006013eb87c15" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>adjoint</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a9ddaf7cad44d42ad616be867a418c87f" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>DerivedTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a639513b3b77cdce79434a46e81c4cd0d" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>dimension</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a62eded5880afac6391df8e70a51c5dfe" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>FromJacobi</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1af9eb142b5ae58396440fbb408d029d4c" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Identity</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a5f36fc890460cc7c7a64eee376261c54" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>inverse</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a69eb192652259a3c7894b873aba818a1" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>isUnitary</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a30b9d326d44957602bc7081c692fc719" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>JacobiRotationType</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a006ae80a78c72409fad4769058c4e048" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>matrix</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a2bf93e827850f7ccebcd64af4999abb4" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>numberOfOrbitals</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a66165a4d5eb2217a80196d6d34a27023" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Random</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1af94648942e1be2a5929462fd48daea27" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>RandomUnitary</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a2e107bd3cf4d603c003c8cb9357d0094" prot="public" virt="non-virtual" ambiguityscope="BasisTransformable&lt; _DerivedTransformation &gt;::"><scope>GQCP::SimpleTransformation</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1a11657b774fe75246bef1f7849f9aad72" prot="public" virt="non-virtual" ambiguityscope="JacobiRotatable&lt; _DerivedTransformation &gt;::"><scope>GQCP::SimpleTransformation</scope><name>rotate</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a31eeb20c66eabcc2c2c88599716c0ea9" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1ae0af50867dbd06193b64c2bcdd6b51ba" prot="public" virt="virtual" ambiguityscope="BasisTransformable&lt; _DerivedTransformation &gt;::"><scope>GQCP::SimpleTransformation</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_jacobi_rotatable_1ae518b652e54f43acf2db43300c1d6fc0" prot="public" virt="pure-virtual" ambiguityscope="JacobiRotatable&lt; _DerivedTransformation &gt;::"><scope>GQCP::SimpleTransformation</scope><name>rotated</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a37046a0b41af3f45a28b326c427f2ee5" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Scalar</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ada44eeef314de5b5ad79587480745505" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Self</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a5ecd32337e09da059a91ba0a9a5da30e" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>SimpleTransformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ac262d8b59931978058481f1b6bea735e" prot="protected" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>T</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1aa55d3cf1b186ac2ec926e97a7b6d645f" prot="public" virt="virtual"><scope>GQCP::SimpleTransformation</scope><name>transform</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a701f799aca6ea8311782e82685851f72" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Transformation</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1a93317a9a6e9f48a371a422c76b117054" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_basis_transformable_1a3c511224fd132184fb2e01579754850d" prot="public" virt="pure-virtual" ambiguityscope="BasisTransformable&lt; _DerivedTransformation &gt;::"><scope>GQCP::SimpleTransformation</scope><name>transformed</name></member>
      <member refid="class_g_q_c_p_1_1_simple_transformation_1ad41c1f7a3627227e1bfc475596e78b39" prot="public" virt="non-virtual"><scope>GQCP::SimpleTransformation</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
