<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_u_spin_orbital_basis_8hpp" kind="file" language="C++">
    <compoundname>USpinOrbitalBasis.hpp</compoundname>
    <includes refid="_g_t_o_shell_8hpp" local="yes">Basis/ScalarBasis/GTOShell.hpp</includes>
    <includes refid="_r_spin_orbital_basis_8hpp" local="yes">Basis/SpinorBasis/RSpinOrbitalBasis.hpp</includes>
    <includes refid="_u_spin_orbital_basis_component_8hpp" local="yes">Basis/SpinorBasis/USpinOrbitalBasisComponent.hpp</includes>
    <includes refid="_spin_resolved_basis_transformable_8hpp" local="yes">Basis/Transformations/SpinResolvedBasisTransformable.hpp</includes>
    <includes refid="_spin_resolved_jacobi_rotatable_8hpp" local="yes">Basis/Transformations/SpinResolvedJacobiRotatable.hpp</includes>
    <includes refid="_u_transformation_8hpp" local="yes">Basis/Transformations/UTransformation.hpp</includes>
    <includes refid="_u_mulliken_domain_8hpp" local="yes">Domain/MullikenDomain/UMullikenDomain.hpp</includes>
    <includes refid="_cartesian_direction_8hpp" local="yes">Mathematical/Functions/CartesianDirection.hpp</includes>
    <includes refid="_coulomb_repulsion_operator_8hpp" local="yes">Operator/FirstQuantized/CoulombRepulsionOperator.hpp</includes>
    <includes refid="_electronic_dipole_operator_8hpp" local="yes">Operator/FirstQuantized/ElectronicDipoleOperator.hpp</includes>
    <includes refid="_electronic_spin__z_operator_8hpp" local="yes">Operator/FirstQuantized/ElectronicSpin_zOperator.hpp</includes>
    <includes refid="_f_q_molecular_hamiltonian_8hpp" local="yes">Operator/FirstQuantized/FQMolecularHamiltonian.hpp</includes>
    <includes refid="_f_q_molecular_magnetic_hamiltonian_8hpp" local="yes">Operator/FirstQuantized/FQMolecularMagneticHamiltonian.hpp</includes>
    <includes refid="_f_q_molecular_pauli_hamiltonian_8hpp" local="yes">Operator/FirstQuantized/FQMolecularPauliHamiltonian.hpp</includes>
    <includes refid="_kinetic_operator_8hpp" local="yes">Operator/FirstQuantized/KineticOperator.hpp</includes>
    <includes refid="_nuclear_attraction_operator_8hpp" local="yes">Operator/FirstQuantized/NuclearAttractionOperator.hpp</includes>
    <includes refid="_overlap_operator_8hpp" local="yes">Operator/FirstQuantized/OverlapOperator.hpp</includes>
    <includes refid="_s_q_hamiltonian_8hpp" local="yes">Operator/SecondQuantized/SQHamiltonian.hpp</includes>
    <includes refid="_u_s_q_one_electron_operator_8hpp" local="yes">Operator/SecondQuantized/USQOneElectronOperator.hpp</includes>
    <includes refid="_u_s_q_two_electron_operator_8hpp" local="yes">Operator/SecondQuantized/USQTwoElectronOperator.hpp</includes>
    <includes refid="_spin_resolved_base_8hpp" local="yes">QuantumChemical/SpinResolvedBase.hpp</includes>
    <includes refid="type__traits_8hpp" local="yes">Utilities/type_traits.hpp</includes>
    <includedby refid="gqcp_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</includedby>
    <includedby refid="_g_spinor_basis_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/GSpinorBasis.hpp</includedby>
    <includedby refid="transform_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/transform.hpp</includedby>
    <includedby refid="_linear_expansion_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/QCModel/CI/LinearExpansion.hpp</includedby>
    <incdepgraph>
      <node id="186">
        <label>Basis/SpinorBasis/USpinOrbitalBasisComponent.hpp</label>
        <link refid="_u_spin_orbital_basis_component_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>Operator/SecondQuantized/SQOperatorStorage.hpp</label>
        <link refid="_s_q_operator_storage_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>Operator/SecondQuantized/GSQOneElectronOperator.hpp</label>
        <link refid="_g_s_q_one_electron_operator_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="87">
        <label>Operator/FirstQuantized/AngularMomentumOperator.hpp</label>
        <link refid="_angular_momentum_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>iomanip</label>
      </node>
      <node id="28">
        <label>functional</label>
      </node>
      <node id="100">
        <label>Basis/Integrals/TwoElectronIntegralBuffer.hpp</label>
        <link refid="_two_electron_integral_buffer_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>Physical/HomogeneousMagneticField.hpp</label>
        <link refid="_homogeneous_magnetic_field_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>Basis/SpinorBasis/SimpleSpinorBasis.hpp</label>
        <link refid="_simple_spinor_basis_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>Basis/Integrals/Interfaces/LibcintTwoElectronIntegralBuffer.hpp</label>
        <link refid="_libcint_two_electron_integral_buffer_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>Basis/Transformations/SpinResolvedJacobiRotatable.hpp</label>
        <link refid="_spin_resolved_jacobi_rotatable_8hpp"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>Operator/FirstQuantized/BaseFQOperator.hpp</label>
        <link refid="_base_f_q_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Utilities/Eigen.hpp</label>
        <link refid="_eigen_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>boost/math/constants/constants.hpp</label>
      </node>
      <node id="66">
        <label>iterator</label>
      </node>
      <node id="129">
        <label>QuantumChemical/SpinResolved.hpp</label>
        <link refid="_spin_resolved_8hpp"/>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>Operator/SecondQuantized/OperatorTraits.hpp</label>
        <link refid="_operator_traits_8hpp"/>
      </node>
      <node id="172">
        <label>DensityMatrix/SpinDensity1DM.hpp</label>
        <link refid="_spin_density1_d_m_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="103">
        <label>Mathematical/Representation/SquareMatrix.hpp</label>
        <link refid="_square_matrix_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Basis/Integrals/BaseOneElectronIntegralBuffer.hpp</label>
        <link refid="_base_one_electron_integral_buffer_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>Operator/FirstQuantized/LinearMomentumOperator.hpp</label>
        <link refid="_linear_momentum_operator_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Molecule/Molecule.hpp</label>
        <link refid="_molecule_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>Basis/Transformations/SimpleOrbitalRotationGenerators.hpp</label>
        <link refid="_simple_orbital_rotation_generators_8hpp"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>Mathematical/Functions/DyadicCartesianDirection.hpp</label>
        <link refid="_dyadic_cartesian_direction_8hpp"/>
      </node>
      <node id="97">
        <label>Basis/Integrals/Primitive/PrimitiveNuclearAttractionIntegralEngine.hpp</label>
        <link refid="_primitive_nuclear_attraction_integral_engine_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>DensityMatrix/SpinResolved1DM.hpp</label>
        <link refid="_spin_resolved1_d_m_8hpp"/>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>Basis/Integrals/Primitive/McMurchieDavidsonCoefficient.hpp</label>
        <link refid="_mc_murchie_davidson_coefficient_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>DensityMatrix/G2DM.hpp</label>
        <link refid="_g2_d_m_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>Basis/Transformations/SpinResolvedBasisTransformable.hpp</label>
        <link refid="_spin_resolved_basis_transformable_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>Operator/FirstQuantized/ElectronicQuadrupoleOperator.hpp</label>
        <link refid="_electronic_quadrupole_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>Basis/Integrals/Interfaces/LibintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libint_two_electron_integral_engine_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Mathematical/Functions/CartesianGTO.hpp</label>
        <link refid="_cartesian_g_t_o_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>Operator/SecondQuantized/ModelHamiltonian/HubbardHamiltonian.hpp</label>
        <link refid="_hubbard_hamiltonian_8hpp"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Basis/Integrals/Interfaces/LibcintInterfacer.hpp</label>
        <link refid="_libcint_interfacer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>Utilities/miscellaneous.hpp</label>
        <link refid="miscellaneous_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>boost/format.hpp</label>
      </node>
      <node id="119">
        <label>Basis/SpinorBasis/OccupationType.hpp</label>
        <link refid="_occupation_type_8hpp"/>
      </node>
      <node id="187">
        <label>Operator/FirstQuantized/ElectronicSpin_zOperator.hpp</label>
        <link refid="_electronic_spin__z_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>cmath</label>
      </node>
      <node id="177">
        <label>QuantumChemical/DoublySpinResolvedBase.hpp</label>
        <link refid="_doubly_spin_resolved_base_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>Operator/SecondQuantized/PureUSQTwoElectronOperatorComponent.hpp</label>
        <link refid="_pure_u_s_q_two_electron_operator_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>QuantumChemical/spinor_tags.hpp</label>
        <link refid="spinor__tags_8hpp"/>
      </node>
      <node id="136">
        <label>Operator/SecondQuantized/EvaluableRSQOneElectronOperator.hpp</label>
        <link refid="_evaluable_r_s_q_one_electron_operator_8hpp"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>stdexcept</label>
      </node>
      <node id="132">
        <label>Operator/FirstQuantized/ElectronicDensityOperator.hpp</label>
        <link refid="_electronic_density_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>numeric</label>
      </node>
      <node id="50">
        <label>Molecule/NuclearFramework.hpp</label>
        <link refid="_nuclear_framework_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>Operator/SecondQuantized/ModelHamiltonian/AdjacencyMatrix.hpp</label>
        <link refid="_adjacency_matrix_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>Mathematical/Representation/ImplicitMatrixSlice.hpp</label>
        <link refid="_implicit_matrix_slice_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Basis/Integrals/IntegralEngine.hpp</label>
        <link refid="_integral_engine_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>Operator/SecondQuantized/SimpleSQTwoElectronOperator.hpp</label>
        <link refid="_simple_s_q_two_electron_operator_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="59">
        <label>Operator/FirstQuantized/KineticOperator.hpp</label>
        <link refid="_kinetic_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>Basis/Integrals/Primitive/DoubleLondonHermiteCoulombIntegral.hpp</label>
        <link refid="_double_london_hermite_coulomb_integral_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>Operator/SecondQuantized/USQTwoElectronOperator.hpp</label>
        <link refid="_u_s_q_two_electron_operator_8hpp"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>unsupported/Eigen/MatrixFunctions</label>
      </node>
      <node id="169">
        <label>Basis/Transformations/UOrbitalRotationGenerators.hpp</label>
        <link refid="_u_orbital_rotation_generators_8hpp"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>Operator/SecondQuantized/RSQTwoElectronOperator.hpp</label>
        <link refid="_r_s_q_two_electron_operator_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>map</label>
      </node>
      <node id="149">
        <label>Operator/SecondQuantized/USQOneElectronOperatorComponent.hpp</label>
        <link refid="_u_s_q_one_electron_operator_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>Basis/Transformations/UTransformationComponent.hpp</label>
        <link refid="_u_transformation_component_8hpp"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>Operator/FirstQuantized/FQMolecularPauliHamiltonian.hpp</label>
        <link refid="_f_q_molecular_pauli_hamiltonian_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="153">
        <label>DensityMatrix/SpinResolved1DMComponent.hpp</label>
        <link refid="_spin_resolved1_d_m_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp</label>
        <link refid="_simple_spin_orbital_basis_8hpp"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Molecule/Nucleus.hpp</label>
        <link refid="_nucleus_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>Basis/Integrals/TwoElectronIntegralEngine.hpp</label>
        <link refid="_two_electron_integral_engine_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Basis/Integrals/IntegralCalculator.hpp</label>
        <link refid="_integral_calculator_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>QuantumChemical/SpinResolvedBase.hpp</label>
        <link refid="_spin_resolved_base_8hpp"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>Operator/SecondQuantized/SQOperatorStorageBase.hpp</label>
        <link refid="_s_q_operator_storage_base_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>Mathematical/Representation/SquareRankFourTensor.hpp</label>
        <link refid="_square_rank_four_tensor_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>DensityMatrix/Simple2DM.hpp</label>
        <link refid="_simple2_d_m_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Operator/FirstQuantized/NuclearAttractionOperator.hpp</label>
        <link refid="_nuclear_attraction_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>boost/numeric/conversion/converter.hpp</label>
      </node>
      <node id="71">
        <label>boost/preprocessor.hpp</label>
      </node>
      <node id="24">
        <label>fstream</label>
      </node>
      <node id="138">
        <label>DensityMatrix/DensityMatrixTraits.hpp</label>
        <link refid="_density_matrix_traits_8hpp"/>
      </node>
      <node id="112">
        <label>ostream</label>
      </node>
      <node id="164">
        <label>Basis/Transformations/GOrbitalRotationGenerators.hpp</label>
        <link refid="_g_orbital_rotation_generators_8hpp"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>Basis/Integrals/Primitive/BaseScalarPrimitiveIntegralEngine.hpp</label>
        <link refid="_base_scalar_primitive_integral_engine_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>Basis/ScalarBasis/ScalarBasis.hpp</label>
        <link refid="_scalar_basis_8hpp"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>Basis/Transformations/OrbitalRotationGeneratorTraits.hpp</label>
        <link refid="_orbital_rotation_generator_traits_8hpp"/>
      </node>
      <node id="27">
        <label>Molecule/elements.hpp</label>
        <link refid="elements_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>Operator/SecondQuantized/GSQTwoElectronOperator.hpp</label>
        <link refid="_g_s_q_two_electron_operator_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Operator/FirstQuantized/BaseNuclearOperator.hpp</label>
        <link refid="_base_nuclear_operator_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>Basis/Integrals/Primitive/BaseVectorPrimitiveIntegralEngine.hpp</label>
        <link refid="_base_vector_primitive_integral_engine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>Basis/Transformations/SimpleTransformation.hpp</label>
        <link refid="_simple_transformation_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>Basis/Integrals/Primitive/HermiteCoulombIntegral.hpp</label>
        <link refid="_hermite_coulomb_integral_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>Operator/FirstQuantized/BaseReferenceDependentOperator.hpp</label>
        <link refid="_base_reference_dependent_operator_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Basis/Integrals/OneElectronIntegralBuffer.hpp</label>
        <link refid="_one_electron_integral_buffer_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>DensityMatrix/SpinResolved2DM.hpp</label>
        <link refid="_spin_resolved2_d_m_8hpp"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>Basis/Integrals/Primitive/PrimitiveElectronicQuadrupoleIntegralEngine.hpp</label>
        <link refid="_primitive_electronic_quadrupole_integral_engine_8hpp"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Mathematical/Functions/Function.hpp</label>
        <link refid="_function_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>DensityMatrix/G1DM.hpp</label>
        <link refid="_g1_d_m_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>Basis/Integrals/Primitive/PrimitiveElectronicDipoleIntegralEngine.hpp</label>
        <link refid="_primitive_electronic_dipole_integral_engine_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Basis/Integrals/BaseTwoElectronIntegralBuffer.hpp</label>
        <link refid="_base_two_electron_integral_buffer_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Utilities/CRTP.hpp</label>
        <link refid="_c_r_t_p_8hpp"/>
      </node>
      <node id="120">
        <label>Basis/SpinorBasis/OrbitalSpace.hpp</label>
        <link refid="_orbital_space_8hpp"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Mathematical/Functions/EvaluableLinearCombination.hpp</label>
        <link refid="_evaluable_linear_combination_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Eigen/Dense</label>
      </node>
      <node id="116">
        <label>Basis/Transformations/RTransformation.hpp</label>
        <link refid="_r_transformation_8hpp"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Basis/SpinorBasis/RSpinOrbitalBasis.hpp</label>
        <link refid="_r_spin_orbital_basis_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>Domain/MullikenDomain/UMullikenDomainComponent.hpp</label>
        <link refid="_u_mulliken_domain_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>Domain/MullikenDomain/RMullikenDomain.hpp</label>
        <link refid="_r_mulliken_domain_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>Basis/Transformations/BasisTransformable.hpp</label>
        <link refid="_basis_transformable_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>Operator/FirstQuantized/OverlapOperator.hpp</label>
        <link refid="_overlap_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Mathematical/Representation/Matrix.hpp</label>
        <link refid="_matrix_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>Basis/Transformations/UJacobiRotation.hpp</label>
        <link refid="_u_jacobi_rotation_8hpp"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>Mathematical/Representation/DenseVectorizer.hpp</label>
        <link refid="_dense_vectorizer_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Utilities/type_traits.hpp</label>
        <link refid="type__traits_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>Basis/Transformations/GTransformation.hpp</label>
        <link refid="_g_transformation_8hpp"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="178">
        <label>Domain/MullikenDomain/GMullikenDomain.hpp</label>
        <link refid="_g_mulliken_domain_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Utilities/aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Mathematical/Functions/LondonCartesianGTO.hpp</label>
        <link refid="_london_cartesian_g_t_o_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>Basis/Integrals/Primitive/PrimitiveOverlapIntegralEngine.hpp</label>
        <link refid="_primitive_overlap_integral_engine_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>Operator/FirstQuantized/OrbitalZeemanOperator.hpp</label>
        <link refid="_orbital_zeeman_operator_8hpp"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>Operator/FirstQuantized/DiamagneticOperator.hpp</label>
        <link refid="_diamagnetic_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>Basis/Integrals/Primitive/PrimitiveLinearMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_linear_momentum_integral_engine_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>QuantumChemical/Spin.hpp</label>
        <link refid="_spin_8hpp"/>
      </node>
      <node id="152">
        <label>DensityMatrix/PureSpinResolved2DMComponent.hpp</label>
        <link refid="_pure_spin_resolved2_d_m_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>Basis/Integrals/Primitive/PrimitiveCanonicalKineticEnergyIntegralEngine.hpp</label>
        <link refid="_primitive_canonical_kinetic_energy_integral_engine_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>array</label>
      </node>
      <node id="165">
        <label>Basis/Transformations/UTransformation.hpp</label>
        <link refid="_u_transformation_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>DensityMatrix/Orbital2DM.hpp</label>
        <link refid="_orbital2_d_m_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>Basis/Integrals/Interfaces/LibintOneElectronIntegralBuffer.hpp</label>
        <link refid="_libint_one_electron_integral_buffer_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>Basis/Integrals/Primitive/PrimitiveCoulombRepulsionIntegralEngine.hpp</label>
        <link refid="_primitive_coulomb_repulsion_integral_engine_8hpp"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>Domain/DiscreteDomain.hpp</label>
      </node>
      <node id="111">
        <label>Basis/Transformations/JacobiRotation.hpp</label>
        <link refid="_jacobi_rotation_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>Operator/FirstQuantized/CurrentDensityOperator.hpp</label>
        <link refid="_current_density_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>Operator/FirstQuantized/ElectronicDipoleOperator.hpp</label>
        <link refid="_electronic_dipole_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>Mathematical/Representation/ImplicitRankFourTensorSlice.hpp</label>
        <link refid="_implicit_rank_four_tensor_slice_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Basis/Integrals/Interfaces/LibcintOneElectronIntegralEngine.hpp</label>
        <link refid="_libcint_one_electron_integral_engine_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>Basis/Integrals/Primitive/LondonHermiteCoulombIntegral.hpp</label>
        <link refid="_london_hermite_coulomb_integral_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Basis/Integrals/BaseTwoElectronIntegralEngine.hpp</label>
        <link refid="_base_two_electron_integral_engine_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Basis/Integrals/BaseOneElectronIntegralEngine.hpp</label>
        <link refid="_base_one_electron_integral_engine_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>Operator/SecondQuantized/ModelHamiltonian/HoppingMatrix.hpp</label>
        <link refid="_hopping_matrix_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstdlib</label>
      </node>
      <node id="106">
        <label>Basis/SpinorBasis/CurrentDensityMatrixElement.hpp</label>
        <link refid="_current_density_matrix_element_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="110">
        <label>Basis/Transformations/JacobiRotatable.hpp</label>
        <link refid="_jacobi_rotatable_8hpp"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>Basis/Integrals/Interfaces/LibcintOneElectronIntegralBuffer.hpp</label>
        <link refid="_libcint_one_electron_integral_buffer_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstddef</label>
      </node>
      <node id="147">
        <label>Operator/SecondQuantized/SimpleSQOneElectronOperator.hpp</label>
        <link refid="_simple_s_q_one_electron_operator_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>Basis/Transformations/DoublySpinResolvedBasisTransformable.hpp</label>
        <link refid="_doubly_spin_resolved_basis_transformable_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Basis/ScalarBasis/LondonGTOShell.hpp</label>
        <link refid="_london_g_t_o_shell_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Utilities/complex.hpp</label>
        <link refid="complex_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>cint.h</label>
      </node>
      <node id="72">
        <label>libint2.hpp</label>
      </node>
      <node id="184">
        <label>Domain/MullikenDomain/UMullikenDomain.hpp</label>
        <link refid="_u_mulliken_domain_8hpp"/>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Mathematical/Functions/CartesianExponents.hpp</label>
        <link refid="_cartesian_exponents_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/USpinOrbitalBasis.hpp</label>
        <link refid="_u_spin_orbital_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>Operator/FirstQuantized/SpinZeemanOperator.hpp</label>
        <link refid="_spin_zeeman_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>Operator/SecondQuantized/EvaluableSimpleSQOneElectronOperator.hpp</label>
        <link refid="_evaluable_simple_s_q_one_electron_operator_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>Basis/Integrals/Interfaces/LibintInterfacer.hpp</label>
        <link refid="_libint_interfacer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>Basis/Integrals/Interfaces/LibcintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libcint_two_electron_integral_engine_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>Operator/SecondQuantized/USQOneElectronOperator.hpp</label>
        <link refid="_u_s_q_one_electron_operator_8hpp"/>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>Operator/SecondQuantized/RSQOneElectronOperator.hpp</label>
        <link refid="_r_s_q_one_electron_operator_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>DensityMatrix/MixedSpinResolved2DMComponent.hpp</label>
        <link refid="_mixed_spin_resolved2_d_m_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>Operator/FirstQuantized/FQMolecularMagneticHamiltonian.hpp</label>
        <link refid="_f_q_molecular_magnetic_hamiltonian_8hpp"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>type_traits</label>
      </node>
      <node id="52">
        <label>Operator/FirstQuantized/CoulombRepulsionOperator.hpp</label>
        <link refid="_coulomb_repulsion_operator_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>Basis/Integrals/Interfaces/LibintTwoElectronIntegralBuffer.hpp</label>
        <link refid="_libint_two_electron_integral_buffer_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>Basis/Integrals/Primitive/PrimitiveAngularMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_angular_momentum_integral_engine_8hpp"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>complex</label>
      </node>
      <node id="39">
        <label>algorithm</label>
      </node>
      <node id="43">
        <label>Basis/ScalarBasis/ShellSet.hpp</label>
        <link refid="_shell_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>Basis/Transformations/DoublySpinResolvedJacobiRotatable.hpp</label>
        <link refid="_doubly_spin_resolved_jacobi_rotatable_8hpp"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>Basis/ScalarBasis/GTOBasisSet.hpp</label>
        <link refid="_g_t_o_basis_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>DensityMatrix/Simple1DM.hpp</label>
        <link refid="_simple1_d_m_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>Basis/Integrals/OneElectronIntegralEngine.hpp</label>
        <link refid="_one_electron_integral_engine_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>Operator/SecondQuantized/MixedUSQTwoElectronOperatorComponent.hpp</label>
        <link refid="_mixed_u_s_q_two_electron_operator_component_8hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Mathematical/Functions/CartesianDirection.hpp</label>
        <link refid="_cartesian_direction_8hpp"/>
      </node>
      <node id="137">
        <label>DensityMatrix/Orbital1DM.hpp</label>
        <link refid="_orbital1_d_m_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Mathematical/Representation/Tensor.hpp</label>
        <link refid="_tensor_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>Operator/FirstQuantized/FQMolecularHamiltonian.hpp</label>
        <link refid="_f_q_molecular_hamiltonian_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>Basis/Integrals/Primitive/BaseMatrixPrimitiveIntegralEngine.hpp</label>
        <link refid="_base_matrix_primitive_integral_engine_8hpp"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>Basis/Transformations/ROrbitalRotationGenerators.hpp</label>
        <link refid="_r_orbital_rotation_generators_8hpp"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>Basis/Integrals/Interfaces/LibintOneElectronIntegralEngine.hpp</label>
        <link refid="_libint_one_electron_integral_engine_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>Mathematical/Representation/StorageArray.hpp</label>
        <link refid="_storage_array_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="51">
        <label>initializer_list</label>
      </node>
      <node id="2">
        <label>Basis/ScalarBasis/GTOShell.hpp</label>
        <link refid="_g_t_o_shell_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Mathematical/Functions/VectorSpaceArithmetic.hpp</label>
        <link refid="_vector_space_arithmetic_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>Basis/Transformations/UOrbitalRotationGeneratorsComponent.hpp</label>
        <link refid="_u_orbital_rotation_generators_component_8hpp"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>Operator/SecondQuantized/SQHamiltonian.hpp</label>
        <link refid="_s_q_hamiltonian_8hpp"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>Basis/SpinorBasis/Spinor.hpp</label>
        <link refid="_spinor_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="26">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/APIGGeminalCoefficients.cpp</label>
        <link refid="_a_p_i_g_geminal_coefficients_8cpp"/>
      </node>
      <node id="11">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.hpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/GSpinorBasis.hpp</label>
        <link refid="_g_spinor_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/vAP1roG.cpp</label>
        <link refid="v_a_p1ro_g_8cpp"/>
      </node>
      <node id="13">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roGLagrangianNewtonOrbitalOptimizer.hpp</label>
        <link refid="_a_p1ro_g_lagrangian_newton_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/vAP1roG.hpp</label>
        <link refid="_q_c_method_2_geminals_2v_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGLagrangianNewtonOrbitalOptimizer.cpp</label>
        <link refid="_a_p1ro_g_lagrangian_newton_orbital_optimizer_8cpp"/>
      </node>
      <node id="24">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/AP1roGGeminalCoefficients.cpp</label>
        <link refid="_a_p1ro_g_geminal_coefficients_8cpp"/>
      </node>
      <node id="2">
        <label>/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</label>
        <link refid="gqcp_8hpp"/>
      </node>
      <node id="30">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/BaseOrbitalOptimizer.cpp</label>
        <link refid="_base_orbital_optimizer_8cpp"/>
      </node>
      <node id="17">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/PSEnvironment.hpp</label>
        <link refid="_p_s_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_model_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CI/LinearExpansion.hpp</label>
        <link refid="_linear_expansion_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/AP1roG.cpp</label>
        <link refid="_a_p1ro_g_8cpp"/>
      </node>
      <node id="20">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/vAP1roGElectricalResponseSolver.cpp</label>
        <link refid="v_a_p1ro_g_electrical_response_solver_8cpp"/>
      </node>
      <node id="27">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/GeminalCoefficientsInterface.hpp</label>
        <link refid="_geminal_coefficients_interface_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/DOCINewtonOrbitalOptimizer.hpp</label>
        <link refid="_d_o_c_i_newton_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/DysonOrbital.hpp</label>
        <link refid="_dyson_orbital_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/USpinOrbitalBasis.hpp</label>
        <link refid="_u_spin_orbital_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/GeminalCoefficientsInterface.cpp</label>
        <link refid="_geminal_coefficients_interface_8cpp"/>
      </node>
      <node id="12">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.cpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8cpp"/>
      </node>
      <node id="18">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/vAP1roG.hpp</label>
        <link refid="_q_c_model_2_geminals_2v_a_p1ro_g_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/vAP1roGElectricalResponseSolver.hpp</label>
        <link refid="v_a_p1ro_g_electrical_response_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/properties.hpp</label>
        <link refid="properties_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/CI.hpp</label>
        <link refid="_c_i_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/properties.cpp</label>
        <link refid="properties_8cpp"/>
      </node>
      <node id="10">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/AP1roGGeminalCoefficients.hpp</label>
        <link refid="_a_p1ro_g_geminal_coefficients_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/APIGGeminalCoefficients.hpp</label>
        <link refid="_a_p_i_g_geminal_coefficients_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_method_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_g_q_c_p_1_1_u_spin_orbital_basis" prot="public">GQCP::USpinOrbitalBasis</innerclass>
    <innerclass refid="struct_g_q_c_p_1_1_basis_transformable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4" prot="public">GQCP::BasisTransformableTraits&lt; USpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</innerclass>
    <innerclass refid="struct_g_q_c_p_1_1_jacobi_rotatable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4" prot="public">GQCP::JacobiRotatableTraits&lt; USpinOrbitalBasis&lt; _ExpansionScalar, _Shell &gt; &gt;</innerclass>
    <innernamespace refid="namespace_g_q_c_p">GQCP</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GQCG-GQCP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017-2020<sp/><sp/>the<sp/>GQCG<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GQCG-GQCP.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_t_o_shell_8hpp" kindref="compound">Basis/ScalarBasis/GTOShell.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_r_spin_orbital_basis_8hpp" kindref="compound">Basis/SpinorBasis/RSpinOrbitalBasis.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_spin_orbital_basis_component_8hpp" kindref="compound">Basis/SpinorBasis/USpinOrbitalBasisComponent.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spin_resolved_basis_transformable_8hpp" kindref="compound">Basis/Transformations/SpinResolvedBasisTransformable.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spin_resolved_jacobi_rotatable_8hpp" kindref="compound">Basis/Transformations/SpinResolvedJacobiRotatable.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_transformation_8hpp" kindref="compound">Basis/Transformations/UTransformation.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_mulliken_domain_8hpp" kindref="compound">Domain/MullikenDomain/UMullikenDomain.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_cartesian_direction_8hpp" kindref="compound">Mathematical/Functions/CartesianDirection.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_coulomb_repulsion_operator_8hpp" kindref="compound">Operator/FirstQuantized/CoulombRepulsionOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_electronic_dipole_operator_8hpp" kindref="compound">Operator/FirstQuantized/ElectronicDipoleOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_electronic_spin__z_operator_8hpp" kindref="compound">Operator/FirstQuantized/ElectronicSpin_zOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_q_molecular_hamiltonian_8hpp" kindref="compound">Operator/FirstQuantized/FQMolecularHamiltonian.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_q_molecular_magnetic_hamiltonian_8hpp" kindref="compound">Operator/FirstQuantized/FQMolecularMagneticHamiltonian.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_q_molecular_pauli_hamiltonian_8hpp" kindref="compound">Operator/FirstQuantized/FQMolecularPauliHamiltonian.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_kinetic_operator_8hpp" kindref="compound">Operator/FirstQuantized/KineticOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_nuclear_attraction_operator_8hpp" kindref="compound">Operator/FirstQuantized/NuclearAttractionOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_overlap_operator_8hpp" kindref="compound">Operator/FirstQuantized/OverlapOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_q_hamiltonian_8hpp" kindref="compound">Operator/SecondQuantized/SQHamiltonian.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_s_q_one_electron_operator_8hpp" kindref="compound">Operator/SecondQuantized/USQOneElectronOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_s_q_two_electron_operator_8hpp" kindref="compound">Operator/SecondQuantized/USQTwoElectronOperator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spin_resolved_base_8hpp" kindref="compound">QuantumChemical/SpinResolvedBase.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__traits_8hpp" kindref="compound">Utilities/type_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_ExpansionScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Shell&gt;</highlight></codeline>
<codeline lineno="56" refid="class_g_q_c_p_1_1_u_spin_orbital_basis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_base" kindref="compound">SpinResolvedBase</ref>&lt;USpinOrbitalBasisComponent&lt;_ExpansionScalar,<sp/>_Shell&gt;,<sp/>USpinOrbitalBasis&lt;_ExpansionScalar,<sp/>_Shell&gt;&gt;,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_basis_transformable" kindref="compound">SpinResolvedBasisTransformable</ref>&lt;USpinOrbitalBasis&lt;_ExpansionScalar,<sp/>_Shell&gt;&gt;,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_jacobi_rotatable" kindref="compound">SpinResolvedJacobiRotatable</ref>&lt;USpinOrbitalBasis&lt;_ExpansionScalar,<sp/>_Shell&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scalar<sp/>type<sp/>used<sp/>to<sp/>represent<sp/>an<sp/>expansion<sp/>coefficient<sp/>of<sp/>the<sp/>spinors<sp/>in<sp/>the<sp/>underlying<sp/>scalar<sp/>orbitals:<sp/>real<sp/>or<sp/>complex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref><sp/>=<sp/>_ExpansionScalar;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>shell<sp/>the<sp/>underlying<sp/>scalar<sp/>bases<sp/>contain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref><sp/>=<sp/>_Shell;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>&apos;this&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1af987cf0a2ee191db63496d0d52f2f203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">Self</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>that<sp/>is<sp/>used<sp/>for<sp/>representing<sp/>the<sp/>primitive<sp/>for<sp/>a<sp/>basis<sp/>function<sp/>of<sp/>this<sp/>spin-orbital<sp/>basis&apos;<sp/>underlying<sp/>AO<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a28ee9b8176eb78f5b0af328a0291ba0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a28ee9b8176eb78f5b0af328a0291ba0c" kindref="member">Primitive</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Shell::Primitive;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>that<sp/>is<sp/>used<sp/>for<sp/>representing<sp/>the<sp/>underlying<sp/>basis<sp/>functions<sp/>of<sp/>this<sp/>spin-orbital<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a1b300eaa8d2637d545c0c6a1f8b4f2b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a1b300eaa8d2637d545c0c6a1f8b4f2b9" kindref="member">BasisFunction</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Shell::BasisFunction;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>component<sp/>this<sp/>spin<sp/>resolved<sp/>object<sp/>is<sp/>made<sp/>of.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4a27d7ac6936062dc62851de79a06fdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4a27d7ac6936062dc62851de79a06fdd" kindref="member">ComponentType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_base" kindref="compound">SpinResolvedBase&lt;USpinOrbitalBasisComponent&lt;ExpansionScalar, Shell&gt;</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">Self</ref>&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">::Of</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Constructors</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inherit<sp/>`SpinResolvedBase`&apos;s<sp/>constructors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_base" kindref="compound">SpinResolvedBase&lt;USpinOrbitalBasisComponent&lt;ExpansionScalar, Shell&gt;</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref>&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ac6430934631d0e81584d742dcb28e524" kindref="member">::SpinResolvedBase</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aee04c0bffc6f03cc458762e98d05162d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aee04c0bffc6f03cc458762e98d05162d" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>alpha_scalar_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>beta_scalar_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;</ref>&amp;<sp/>C)<sp/>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component" kindref="compound">USpinOrbitalBasisComponent</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;<sp/>{alpha_scalar_basis,<sp/>C.<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>()},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component" kindref="compound">USpinOrbitalBasisComponent&lt;ExpansionScalar, Shell&gt;</ref><sp/>{beta_scalar_basis,<sp/>C.beta()})<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>given<sp/>objects<sp/>are<sp/>compatible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(C.alpha().numberOfOrbitals()<sp/>!=<sp/>alpha_scalar_basis.numberOfBasisFunctions())<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;USpinOrbitalBasis(const<sp/>ScalarBasis&lt;Shell&gt;&amp;,<sp/>const<sp/>ScalarBasis&lt;Shell&gt;&amp;,<sp/>const<sp/>UTransformation&lt;ExpansionScalar&gt;&amp;):<sp/>The<sp/>given<sp/>dimensions<sp/>of<sp/>the<sp/>scalar<sp/>basis<sp/>and<sp/>coefficient<sp/>matrix<sp/>for<sp/>the<sp/>alpha<sp/>spin-orbitals<sp/>are<sp/>incompatible.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(C.beta().numberOfOrbitals()<sp/>!=<sp/>beta_scalar_basis.numberOfBasisFunctions())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;USpinOrbitalBasis(const<sp/>ScalarBasis&lt;Shell&gt;&amp;,<sp/>const<sp/>ScalarBasis&lt;Shell&gt;&amp;,<sp/>const<sp/>UTransformation&lt;ExpansionScalar&gt;&amp;):<sp/>The<sp/>given<sp/>dimensions<sp/>of<sp/>the<sp/>scalar<sp/>basis<sp/>and<sp/>coefficient<sp/>matrix<sp/>for<sp/>the<sp/>beta<sp/>spin-orbitals<sp/>are<sp/>incompatible.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a393e69a090834b0c40dd1f6256d6c020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a393e69a090834b0c40dd1f6256d6c020" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>scalar_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_transformation_component" kindref="compound">UTransformationComponent&lt;ExpansionScalar&gt;</ref>&amp;<sp/>C)<sp/>:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(scalar_basis,<sp/>scalar_basis,<sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref>&gt;::<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ad684026f9ce2481de03ed06267365e46" kindref="member">FromEqual</ref>(C))<sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1afe8f99e8ce84ac868aba2e9062917008" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1afe8f99e8ce84ac868aba2e9062917008" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>alpha_scalar_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>beta_scalar_basis)<sp/>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(alpha_scalar_basis,<sp/>beta_scalar_basis,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref>&gt;(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_transformation_component" kindref="compound">UTransformationComponent</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref>&gt;::Identity(alpha_scalar_basis.numberOfBasisFunctions()),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_transformation_component" kindref="compound">UTransformationComponent</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae20445a1b3cf603f62e96ed8840e4d81" kindref="member">ExpansionScalar</ref>&gt;::Identity(beta_scalar_basis.numberOfBasisFunctions())))<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ace6431c7d2d00be53fb65e5f030c9483" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ace6431c7d2d00be53fb65e5f030c9483" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis&lt;Shell&gt;</ref>&amp;<sp/>scalar_basis)<sp/>:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(scalar_basis,<sp/>scalar_basis)<sp/>{}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a410b8d61448ae6dfd637ea986504629a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a410b8d61448ae6dfd637ea986504629a" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_nuclear_framework" kindref="compound">NuclearFramework</ref>&amp;<sp/>nuclear_framework,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name)<sp/>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(nuclear_framework,<sp/>basisset_name))<sp/>{}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1abb42b49627bca4d2ef2b0e823446d7de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1abb42b49627bca4d2ef2b0e823446d7de" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_molecule" kindref="compound">Molecule</ref>&amp;<sp/>molecule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name)<sp/>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(molecule.nuclearFramework(),<sp/>basisset_name))<sp/>{}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a61bed093085a840a1433f2f5c3a7ede4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a61bed093085a840a1433f2f5c3a7ede4" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_nuclear_framework" kindref="compound">NuclearFramework</ref>&amp;<sp/>nuclear_framework,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name_alpha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name_beta)<sp/>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(nuclear_framework,<sp/>basisset_name_alpha),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(nuclear_framework,<sp/>basisset_name_beta))<sp/>{}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a8318cd22c98453bb9ace5196ae980f46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a8318cd22c98453bb9ace5196ae980f46" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_molecule" kindref="compound">Molecule</ref>&amp;<sp/>molecule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name_alpha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name_beta)<sp/>:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(molecule.nuclearFramework(),<sp/>basisset_name_alpha),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(molecule.nuclearFramework(),<sp/>basisset_name_beta))<sp/>{}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="205" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aaf902f4303cb96069d1d83ecccafd1e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aaf902f4303cb96069d1d83ecccafd1e6" kindref="member">USpinOrbitalBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_molecule" kindref="compound">Molecule</ref>&amp;<sp/>molecule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>basisset_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_homogeneous_magnetic_field" kindref="compound">HomogeneousMagneticField</ref>&amp;<sp/>B,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_same&lt;Z,<sp/>LondonGTOShell&gt;::value&gt;::type*<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>(<ref refid="class_g_q_c_p_1_1_scalar_basis" kindref="compound">ScalarBasis</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&gt;(molecule.nuclearFramework(),<sp/>basisset_name,<sp/>B))<sp/>{}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Named<sp/>constructors</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa44a67887b29acb6cee0fdbee427f9b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa44a67887b29acb6cee0fdbee427f9b6" kindref="member">FromRestricted</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_r_spin_orbital_basis" kindref="compound">RSpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref>&amp;<sp/>r_spinor_basis)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>scalar_basis<sp/>=<sp/>r_spinor_basis.<ref refid="class_g_q_c_p_1_1_simple_spin_orbital_basis_1a65c66682f4aa90cc4c7bf2cd3dfb3e43" kindref="member">scalarBasis</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>C<sp/>=<sp/>r_spinor_basis.<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1ad150aa71df288eda895400a1970976d2" kindref="member">expansion</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref>(scalar_basis,<sp/>scalar_basis,<sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;::FromRestricted</ref>(C));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>General<sp/>information</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa769e1e7147f8f3aceb6a891dcf72b35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa769e1e7147f8f3aceb6a891dcf72b35" kindref="member">expansion</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;</ref><sp/>{this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1ad150aa71df288eda895400a1970976d2" kindref="member">expansion</ref>(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1ad150aa71df288eda895400a1970976d2" kindref="member">expansion</ref>()};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4d13ceda13422fdbdda0e2092faa90eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4d13ceda13422fdbdda0e2092faa90eb" kindref="member">numberOfSpinors</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>K_alpha<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1abbad8e4366b720933a378ea276bf9502" kindref="member">simpleDimension</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>K_beta<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1abbad8e4366b720933a378ea276bf9502" kindref="member">simpleDimension</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>K_alpha<sp/>+<sp/>K_beta;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a6e6f8f6f10158b22ed787fab7bcfa268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a6e6f8f6f10158b22ed787fab7bcfa268" kindref="member">numberOfSpinOrbitals</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4d13ceda13422fdbdda0e2092faa90eb" kindref="member">numberOfSpinors</ref>();<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Orthonormality</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ad6d69d1e1c6dbb2787f10e36555ba9c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ad6d69d1e1c6dbb2787f10e36555ba9c6" kindref="member">isOrthonormal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>1.0e-08)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa00b804a0f522ee6b046e45d9e39a7b8" kindref="member">isOrthonormal</ref>(precision)<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1aa00b804a0f522ee6b046e45d9e39a7b8" kindref="member">isOrthonormal</ref>(precision);<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa1f9ed2ffe54b230fad07dced29aa215" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa1f9ed2ffe54b230fad07dced29aa215" kindref="member">lowdinOrthonormalization</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T_a<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a7dcbcf5803cb8c3b4b65cb49ce3f5f69" kindref="member">lowdinOrthonormalization</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T_b<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a7dcbcf5803cb8c3b4b65cb49ce3f5f69" kindref="member">lowdinOrthonormalization</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;ExpansionScalar&gt;</ref><sp/>{T_a,<sp/>T_b};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4eb3449b97998a8f1aad758fc9add0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a4eb3449b97998a8f1aad758fc9add0a3" kindref="member">lowdinOrthonormalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a53160b32246fe945f0fb7aa46d15c4e9" kindref="member">lowdinOrthonormalize</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a53160b32246fe945f0fb7aa46d15c4e9" kindref="member">lowdinOrthonormalize</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Quantization<sp/>of<sp/>first-quantized<sp/>operators<sp/>(GTOShell)</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">USQOneElectronOperator&lt;product_t&lt;ElectronicSpin_zOperator::Scalar, ExpansionScalar&gt;</ref>,<sp/><ref refid="class_g_q_c_p_1_1_dense_vectorizer" kindref="compound">ElectronicSpin_zOperator::Vectorizer</ref>&gt;<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_electronic_spin__z_operator" kindref="compound">ElectronicSpin_zOperator</ref>&amp;<sp/>fq_op)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultScalar<sp/>=<sp/><ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t&lt;ElectronicSpin_zOperator::Scalar, ExpansionScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultOperator<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">USQOneElectronOperator&lt;ResultScalar, ElectronicSpin_zOperator::Vectorizer&gt;</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>quantization<sp/>of<sp/>the<sp/>overlap<sp/>operator<sp/>for<sp/>the<sp/>quantization<sp/>of<sp/>S_z.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S_a<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a42b2813a11f43e74c7fa60ee90a5ae0e" kindref="member">overlap</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>current<sp/>orbital<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S_b<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_simple_spinor_basis_1a42b2813a11f43e74c7fa60ee90a5ae0e" kindref="member">overlap</ref>();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>current<sp/>orbital<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S_z_a<sp/>=<sp/>0.5<sp/>*<sp/>S_a;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>S_z_b<sp/>=<sp/>-0.5<sp/>*<sp/>S_b;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultOperator<sp/>{S_z_a,<sp/>S_z_b};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="330" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a0e79ad71e61584a8933feb93a868aeb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a0e79ad71e61584a8933feb93a868aeb8" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_zeeman_operator" kindref="compound">SpinZeemanOperator</ref>&amp;<sp/>fq_op)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t&lt;std::is_same&lt;Z, LondonGTOShell&gt;::value</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">USQOneElectronOperator&lt;product_t&lt;SpinZeemanOperator::Scalar, ExpansionScalar&gt;</ref>,<sp/><ref refid="class_g_q_c_p_1_1_dense_vectorizer" kindref="compound">SpinZeemanOperator::Vectorizer</ref>&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>B<sp/>=<sp/>fq_op.magneticField().strength();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((std::abs(B(<ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">CartesianDirection::x</ref>))<sp/>&gt;<sp/>1.0e-12)<sp/>||<sp/>(std::abs(B(<ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a8611d87f8dc5908d04f3d314c7c321b1" kindref="member">CartesianDirection::y</ref>))<sp/>&gt;<sp/>1.0e-12))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;USpinOrbitalBasis::quantize(const<sp/>FQMolecularPauliHamiltonian&amp;):<sp/>Only<sp/>the<sp/>spin<sp/>Zeeman<sp/>operator<sp/>for<sp/>a<sp/>magnetic<sp/>field<sp/>along<sp/>the<sp/>z-axis<sp/>can<sp/>be<sp/>quantized<sp/>in<sp/>an<sp/>USpinOrbitalBasis.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_g_q_c_p_1a1ffc21109e62d09d3485c62e03677dfd" kindref="member">complex</ref>(B(<ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a11d242b501b62c0182e98a9d516335f7" kindref="member">CartesianDirection::z</ref>))<sp/>*<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(<ref refid="class_g_q_c_p_1_1_electronic_spin__z_operator" kindref="compound">ElectronicSpin_zOperator</ref>());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ab8f9e7467685ee81d6cb0bb56f2fb88c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">ScalarUSQOneElectronOperator&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ab8f9e7467685ee81d6cb0bb56f2fb88c" kindref="member">overlap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(<ref refid="class_g_q_c_p_1_1_overlap_operator" kindref="compound">OverlapOperator</ref>());<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="357" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1afb495aa178b4039badd5236eefc6d027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1afb495aa178b4039badd5236eefc6d027" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_coulomb_repulsion_operator" kindref="compound">CoulombRepulsionOperator</ref>&amp;<sp/>coulomb_op)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t&lt;std::is_same&lt;Z, GTOShell&gt;::value</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_two_electron_operator" kindref="compound">ScalarUSQTwoElectronOperator&lt;product_t&lt;typename CoulombRepulsionOperator::Scalar, ExpansionScalar&gt;</ref>&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultScalar<sp/>=<sp/><ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t&lt;typename CoulombRepulsionOperator::Scalar, ExpansionScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultOperator<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_two_electron_operator" kindref="compound">ScalarUSQTwoElectronOperator&lt;ResultScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>matrix<sp/>representation<sp/>of<sp/>the<sp/>four<sp/>spin-components<sp/>of<sp/>the<sp/>second-quantized<sp/>Coulomb<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_aa_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1a22ede51fbb3db63443ccfc14bee0a049" kindref="member">IntegralCalculator::calculateLibintIntegrals</ref>(coulomb_op,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis());<sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ab_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1a22ede51fbb3db63443ccfc14bee0a049" kindref="member">IntegralCalculator::calculateLibintIntegrals</ref>(coulomb_op,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis());<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ba_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1a22ede51fbb3db63443ccfc14bee0a049" kindref="member">IntegralCalculator::calculateLibintIntegrals</ref>(coulomb_op,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis());<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_bb_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1a22ede51fbb3db63443ccfc14bee0a049" kindref="member">IntegralCalculator::calculateLibintIntegrals</ref>(coulomb_op,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis());<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_aa<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_aa_par.dimension(0));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ab<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_ab_par.dimension(0));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ba<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_ba_par.dimension(0));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_bb<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_bb_par.dimension(0));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_aa_par.dimension(0);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>g_aa_par.dimension(1);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>g_aa_par.dimension(2);<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>g_aa_par.dimension(3);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_aa(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_aa_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ab(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_ab_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ba(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_ba_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_bb(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_bb_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>previously<sp/>calculated<sp/>the<sp/>representations<sp/>in<sp/>the<sp/>AO<sp/>basis,<sp/>so<sp/>we&apos;ll<sp/>still<sp/>have<sp/>to<sp/>transform<sp/>these<sp/>representations<sp/>to<sp/>the<sp/>current<sp/>spin-orbitals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultOperator<sp/>g<sp/>{g_aa,<sp/>g_ab,<sp/>g_ba,<sp/>g_bb};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.transform(this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa769e1e7147f8f3aceb6a891dcf72b35" kindref="member">expansion</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>g<sp/>is<sp/>expressed<sp/>in<sp/>the<sp/>current<sp/>spin-orbital<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Quantization<sp/>of<sp/>first-quantized<sp/>operators<sp/>(LondonGTOShell)</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="406" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1af375e276f954de740a93f264047b2b22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1af375e276f954de740a93f264047b2b22" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_coulomb_repulsion_operator" kindref="compound">CoulombRepulsionOperator</ref>&amp;<sp/>coulomb_op)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t&lt;std::is_same&lt;Z, LondonGTOShell&gt;::value</ref>,<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_two_electron_operator" kindref="compound">ScalarUSQTwoElectronOperator&lt;product_t&lt;typename CoulombRepulsionOperator::Scalar, ExpansionScalar&gt;</ref>&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultScalar<sp/>=<sp/><ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t&lt;typename CoulombRepulsionOperator::Scalar, ExpansionScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultOperator<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_two_electron_operator" kindref="compound">ScalarUSQTwoElectronOperator&lt;ResultScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>matrix<sp/>representation<sp/>of<sp/>the<sp/>four<sp/>spin-components<sp/>of<sp/>the<sp/>second-quantized<sp/>Coulomb<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coulomb_engine<sp/>=<sp/>GQCP::IntegralEngine::InHouse&lt;GQCP::LondonGTOShell&gt;(<ref refid="class_g_q_c_p_1_1_coulomb_repulsion_operator" kindref="compound">CoulombRepulsionOperator</ref>());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_aa_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1ad04f586e4635103bc9f61fc573811eb3" kindref="member">GQCP::IntegralCalculator::calculate</ref>(coulomb_engine,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis().shellSet(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis().shellSet())[0];<sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>AO<sp/>basis,<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ab_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1ad04f586e4635103bc9f61fc573811eb3" kindref="member">GQCP::IntegralCalculator::calculate</ref>(coulomb_engine,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis().shellSet(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis().shellSet())[0];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>AO<sp/>basis,<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ba_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1ad04f586e4635103bc9f61fc573811eb3" kindref="member">GQCP::IntegralCalculator::calculate</ref>(coulomb_engine,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis().shellSet(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().scalarBasis().shellSet())[0];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>AO<sp/>basis,<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_bb_par<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_integral_calculator_1ad04f586e4635103bc9f61fc573811eb3" kindref="member">GQCP::IntegralCalculator::calculate</ref>(coulomb_engine,<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis().shellSet(),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().scalarBasis().shellSet())[0];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>AO<sp/>basis,<sp/>&apos;par&apos;<sp/>for<sp/>&apos;parameters&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_aa<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_aa_par.dimension(0));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ab<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_ab_par.dimension(0));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_ba<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_ba_par.dimension(0));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g_bb<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_square_rank_four_tensor_1ac8d9dac01c85a4f11aa67c7efa877e04" kindref="member">SquareRankFourTensor&lt;ResultScalar&gt;::Zero</ref>(g_bb_par.dimension(0));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>g_aa_par.dimension(0);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>g_aa_par.dimension(1);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>g_aa_par.dimension(2);<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>g_aa_par.dimension(3);<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_aa(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_aa_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ab(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_ab_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ba(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_ba_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_bb(i,<sp/>j,<sp/>k,<sp/>l)<sp/>=<sp/>g_bb_par(i,<sp/>j,<sp/>k,<sp/>l);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>previously<sp/>calculated<sp/>the<sp/>representations<sp/>in<sp/>the<sp/>AO<sp/>basis,<sp/>so<sp/>we&apos;ll<sp/>still<sp/>have<sp/>to<sp/>transform<sp/>these<sp/>representations<sp/>to<sp/>the<sp/>current<sp/>spin-orbitals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultOperator<sp/>g<sp/>{g_aa,<sp/>g_ab,<sp/>g_ba,<sp/>g_bb};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.transform(this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa769e1e7147f8f3aceb6a891dcf72b35" kindref="member">expansion</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>g<sp/>is<sp/>expressed<sp/>in<sp/>the<sp/>current<sp/>spin-orbital<sp/>basis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="454" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a43f187483f1e671712e8015e38b154b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t&lt;std::is_same&lt;Z, LondonGTOShell&gt;::value</ref>,<sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref>&gt;<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a43f187483f1e671712e8015e38b154b4" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_f_q_molecular_magnetic_hamiltonian" kindref="compound">FQMolecularMagneticHamiltonian</ref>&amp;<sp/>fq_hamiltonian)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a64af403ad687229af6f46d10f6ad0e16" kindref="member">kinetic</ref>());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OZ<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_magnetic_hamiltonian_1a2d0224ce7f4de6170aad1cd1a07852ec" kindref="member">orbitalZeeman</ref>());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>D<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_magnetic_hamiltonian_1a9ab6848d23b02227d9f3569ca59ade2d" kindref="member">diamagnetic</ref>());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a5164e11ed7cb82e09d15e964adc29f0d" kindref="member">nuclearAttraction</ref>());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a7503d7530e4e4bcdb1b21eb4eddfc109" kindref="member">coulombRepulsion</ref>());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref><sp/>{{T,<sp/>OZ,<sp/>D,<sp/>V},<sp/>{g}};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>Shell&gt;</highlight></codeline>
<codeline lineno="476" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a35ee2dc28bda2b64c75d8c6e2a2cd787" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t&lt;std::is_same&lt;Z, LondonGTOShell&gt;::value</ref>,<sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref>&gt;<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a35ee2dc28bda2b64c75d8c6e2a2cd787" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_f_q_molecular_pauli_hamiltonian" kindref="compound">FQMolecularPauliHamiltonian</ref>&amp;<sp/>fq_hamiltonian)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a64af403ad687229af6f46d10f6ad0e16" kindref="member">kinetic</ref>());</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OZ<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_magnetic_hamiltonian_1a2d0224ce7f4de6170aad1cd1a07852ec" kindref="member">orbitalZeeman</ref>());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>D<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_magnetic_hamiltonian_1a9ab6848d23b02227d9f3569ca59ade2d" kindref="member">diamagnetic</ref>());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>SZ<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_pauli_hamiltonian_1ab327e241c291d6b14de80bf76f397cef" kindref="member">spinZeeman</ref>());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a5164e11ed7cb82e09d15e964adc29f0d" kindref="member">nuclearAttraction</ref>());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a7503d7530e4e4bcdb1b21eb4eddfc109" kindref="member">coulombRepulsion</ref>());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref><sp/>{{T,<sp/>OZ,<sp/>D,<sp/>V,<sp/>SZ},<sp/>{g}};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Quantization<sp/>of<sp/>first-quantized<sp/>operators</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FQOneElectronOperator&gt;</highlight></codeline>
<codeline lineno="506" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a2200b24771de76df594a1971474ceeb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a2200b24771de76df594a1971474ceeb7" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FQOneElectronOperator&amp;<sp/>fq_op)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">USQOneElectronOperator&lt;product_t&lt;typename FQOneElectronOperator::Scalar, ExpansionScalar&gt;</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FQOneElectronOperator::Vectorizer&gt;<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultScalar<sp/>=<sp/><ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t&lt;typename FQOneElectronOperator::Scalar, ExpansionScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultOperator<sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" kindref="compound">USQOneElectronOperator&lt;ResultScalar, typename FQOneElectronOperator::Vectorizer&gt;</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quantize<sp/>the<sp/>one-electron<sp/>operator<sp/>in<sp/>the<sp/>alpha-<sp/>and<sp/>beta-<sp/>bases<sp/>and<sp/>return<sp/>the<sp/>wrapped<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f_a<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a1f60a52617ba297c7dbc41882b01e838" kindref="member">quantize</ref>(fq_op);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f_b<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a1f60a52617ba297c7dbc41882b01e838" kindref="member">quantize</ref>(fq_op);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResultOperator<sp/>{f_a,<sp/>f_b};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa06df84fc3d1d8d81b04642a6195f382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1aa06df84fc3d1d8d81b04642a6195f382" kindref="member">quantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian" kindref="compound">FQMolecularHamiltonian</ref>&amp;<sp/>fq_hamiltonian)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a64af403ad687229af6f46d10f6ad0e16" kindref="member">kinetic</ref>());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a5164e11ed7cb82e09d15e964adc29f0d" kindref="member">nuclearAttraction</ref>());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1ae2860d23306f3bfd1a987b60485fd8b1" kindref="member">quantize</ref>(fq_hamiltonian.<ref refid="class_g_q_c_p_1_1_f_q_molecular_hamiltonian_1a7503d7530e4e4bcdb1b21eb4eddfc109" kindref="member">coulombRepulsion</ref>());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_s_q_hamiltonian" kindref="compound">USQHamiltonian&lt;ExpansionScalar&gt;</ref><sp/>{T<sp/>+<sp/>V,<sp/>g};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1add39c1ea5cd6656083f3b407e6e0cdb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_mulliken_domain" kindref="compound">UMullikenDomain&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1add39c1ea5cd6656083f3b407e6e0cdb5" kindref="member">mullikenDomain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a1b300eaa8d2637d545c0c6a1f8b4f2b9" kindref="member">BasisFunction</ref>&amp;)&gt;&amp;<sp/>selector)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_mulliken_domain" kindref="compound">UMullikenDomain&lt;ExpansionScalar&gt;</ref><sp/>{this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a6b17e0c30be846596a3359437cbda772" kindref="member">mullikenDomain</ref>(selector),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a6b17e0c30be846596a3359437cbda772" kindref="member">mullikenDomain</ref>(selector)};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1adc32afe4293ad7c11576e7d9f933b4e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_u_mulliken_domain" kindref="compound">UMullikenDomain&lt;ExpansionScalar&gt;</ref><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1adc32afe4293ad7c11576e7d9f933b4e6" kindref="member">mullikenDomain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_1a359a0209c9e89ac045fece42ba6ad1c6" kindref="member">Shell</ref>&amp;)&gt;&amp;<sp/>selector)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_mulliken_domain" kindref="compound">UMullikenDomain&lt;ExpansionScalar&gt;</ref><sp/>{this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1ae525d777321321160dbf3e10158d3599" kindref="member">alpha</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a6b17e0c30be846596a3359437cbda772" kindref="member">mullikenDomain</ref>(selector),<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a01de2ba3a5e4723aeea6b79e7cd0e1a4" kindref="member">beta</ref>().<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis_component_1a6b17e0c30be846596a3359437cbda772" kindref="member">mullikenDomain</ref>(selector)};</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>`rotate`<sp/>and<sp/>`rotated`<sp/>are<sp/>both<sp/>defined<sp/>in<sp/>`SpinResolvedBasisTransformable`<sp/>and<sp/>`SpinResolvedJacobiRotatable`,<sp/>we<sp/>have<sp/>to<sp/>explicitly<sp/>enable<sp/>these<sp/>methods<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>`rotate`<sp/>method<sp/>from<sp/>`SpinResolvedBasisTransformable`,<sp/>since<sp/>there&apos;s<sp/>also<sp/>a<sp/>`rotate`<sp/>from<sp/>`SpinResolvedJacobiRotatable`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_basis_transformable" kindref="compound">SpinResolvedBasisTransformable&lt;Self&gt;::rotate</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>`rotated`<sp/>method<sp/>from<sp/>`SpinResolvedBasisTransformable`,<sp/>since<sp/>there&apos;s<sp/>also<sp/>a<sp/>`rotated`<sp/>from<sp/>`SpinResolvedJacobiRotatable`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_basis_transformable" kindref="compound">SpinResolvedBasisTransformable&lt;Self&gt;::rotated</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>`rotate`<sp/>method<sp/>from<sp/>`SpinResolvedJacobiRotatable`,<sp/>since<sp/>there&apos;s<sp/>also<sp/>a<sp/>`rotate`<sp/>from<sp/>`SpinResolvedBasisTransformable`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_jacobi_rotatable" kindref="compound">SpinResolvedJacobiRotatable&lt;Self&gt;::rotate</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>`rotated`<sp/>method<sp/>from<sp/>`SpinResolvedJacobiRotatable`,<sp/>since<sp/>there&apos;s<sp/>also<sp/>a<sp/>`rotated`<sp/>from<sp/>`SpinResolvedBasisTransformable`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_spin_resolved_jacobi_rotatable" kindref="compound">SpinResolvedJacobiRotatable&lt;Self&gt;::rotated</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">};</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/><sp/>MARK:<sp/>Convenience<sp/>aliases</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExpansionScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Shell&gt;</highlight></codeline>
<codeline lineno="590" refid="namespace_g_q_c_p_1ac56b6631b5b2d8034ad931616abfa7a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinorBasis</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis&lt;ExpansionScalar, Shell&gt;</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/><sp/>MARK:<sp/>BasisTransformableTraits</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_ExpansionScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Shell&gt;</highlight></codeline>
<codeline lineno="601" refid="struct_g_q_c_p_1_1_basis_transformable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_q_c_p_1_1_basis_transformable_traits" kindref="compound">BasisTransformableTraits</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>&lt;_ExpansionScalar,<sp/>_Shell&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>transformation<sp/>that<sp/>is<sp/>naturally<sp/>related<sp/>to<sp/>a<sp/>`USpinOrbitalBasis`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="struct_g_q_c_p_1_1_basis_transformable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4_1a896f011b2349157cdf51629c38b6f725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">Transformation</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_transformation" kindref="compound">UTransformation&lt;_ExpansionScalar&gt;</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">};</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/><sp/>MARK:<sp/>JacobiRotatableTraits</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_ExpansionScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Shell&gt;</highlight></codeline>
<codeline lineno="616" refid="struct_g_q_c_p_1_1_jacobi_rotatable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_g_q_c_p_1_1_jacobi_rotatable_traits" kindref="compound">JacobiRotatableTraits</ref>&lt;<ref refid="class_g_q_c_p_1_1_u_spin_orbital_basis" kindref="compound">USpinOrbitalBasis</ref>&lt;_ExpansionScalar,<sp/>_Shell&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>Jacobi<sp/>rotation<sp/>for<sp/>which<sp/>the<sp/>Jacobi<sp/>rotation<sp/>should<sp/>be<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="struct_g_q_c_p_1_1_jacobi_rotatable_traits_3_01_u_spin_orbital_basis_3_01___expansion_scalar_00_01___shell_01_4_01_4_1a2104f581c7d9a8d5baa0cec72258b200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_u_jacobi_rotation" kindref="compound">JacobiRotationType</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_u_jacobi_rotation" kindref="compound">UJacobiRotation</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>GQCP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/USpinOrbitalBasis.hpp"/>
  </compounddef>
</doxygen>
