<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_storage_array" kind="class" language="C++" prot="public">
    <compoundname>GQCP::StorageArray</compoundname>
    <includes refid="_storage_array_8hpp" local="no">StorageArray.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Element</type>
      </param>
      <param>
        <type>typename _Vectorizer</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" prot="public" static="no">
        <type>_Element</type>
        <definition>using GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::Element =  _Element</definition>
        <argsstring></argsstring>
        <name>Element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="41" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" prot="public" static="no">
        <type>_Vectorizer</type>
        <definition>using GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::Vectorizer =  _Vectorizer</definition>
        <argsstring></argsstring>
        <name>Vectorizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="44" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_storage_array_1aa4796adbc9dcca9ac7e6f1f480e343c6" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_storage_array" kindref="compound">StorageArray</ref>&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref>, <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &gt;</type>
        <definition>using GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::Self =  StorageArray&lt;Element, Vectorizer&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="47" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_storage_array_1a79bca4884e8981d1ba7a378178d311d0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::NumberOfAxes</definition>
        <argsstring></argsstring>
        <name>NumberOfAxes</name>
        <initializer>= Vectorizer::NumberOfAxes</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="50" column="27" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_storage_array_1a237dfeb5befa1fff135cb409d7a3b9e5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &gt;</type>
        <definition>std::vector&lt;Element&gt; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::m_elements</definition>
        <argsstring></argsstring>
        <name>m_elements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="55" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_storage_array_1ab5d8651e0e234dd6049cca4982d7bd59" prot="private" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref></type>
        <definition>Vectorizer GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::m_vectorizer</definition>
        <argsstring></argsstring>
        <name>m_vectorizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="58" column="16" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a0aade5a8ec10e2079a85e92afb2a3d92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::StorageArray</definition>
        <argsstring>(const std::vector&lt; Element &gt; &amp;elements, const Vectorizer &amp;vectorizer)</argsstring>
        <name>StorageArray</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &amp;</type>
          <declname>vectorizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The one-dimensional representation of the elements of the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vectorizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectorizer that relates multiple tuple coordinates to a one-dimensional index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="72" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1af8f1cb9ce64ff5cff566a4e18a48f4d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::StorageArray</definition>
        <argsstring>(const Element &amp;element, const Vectorizer &amp;vectorizer)</argsstring>
        <name>StorageArray</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &amp;</type>
          <declname>vectorizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array with equal elements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The one-dimensional representation of the elements of the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vectorizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectorizer that relates multiple tuple coordinates to a one-dimensional index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="83" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a83b18d73072f0a22c4850bb3f48893ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::StorageArray</definition>
        <argsstring>(const Vectorizer &amp;vectorizer)</argsstring>
        <name>StorageArray</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &amp;</type>
          <declname>vectorizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array with defaultly initialized elements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vectorizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectorizer that relates multiple tuple coordinates to a one-dimensional index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="92" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a880c6a1f3e9a64f2585ff6905a9ce08f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::StorageArray</definition>
        <argsstring>(const std::array&lt; Element, N &gt; &amp;elements, const Vectorizer &amp;vectorizer)</argsstring>
        <name>StorageArray</name>
        <param>
          <type>const std::array&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref>, N &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &amp;</type>
          <declname>vectorizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an array from a <computeroutput>std::array</computeroutput> and a vectorizer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The one-dimensional representation of the elements of the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vectorizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectorizer that relates multiple tuple coordinates to a one-dimensional index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in the <computeroutput>std::array</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="105" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="105" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a1afead824c6f09ba10cc74dbd9b4b3cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Z</type>
            <defval><ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref></defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_same&lt;Z, <ref refid="namespace_g_q_c_p_1a6c012317d3e2de845b7ee1a860c61e99" kindref="member">ScalarVectorizer</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::operator Element</definition>
        <argsstring>() const</argsstring>
        <name>operator Element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A conversion operator between a scalar array and the underlying scalar.</para>
<para>For the enable_if-part, check <ulink url="https://stackoverflow.com/a/18101382">https://stackoverflow.com/a/18101382</ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="119" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1af5c33456e2f3996561c1e3f5e469c158" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Indices</declname>
            <defname>Indices</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &amp;</type>
        <definition>const Element&amp; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::operator()</definition>
        <argsstring>(const Indices &amp;... indices) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const Indices &amp;...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>A set of coordinates that accesses this array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element that is stored at the given coordinate indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="134" column="19" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a63ba4fe0ff40dfd65bfcf222edb67db7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Indices</declname>
            <defname>Indices</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &amp;</type>
        <definition>Element&amp; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::operator()</definition>
        <argsstring>(const Indices &amp;... indices)</argsstring>
        <name>operator()</name>
        <param>
          <type>const Indices &amp;...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>A set of coordinates that accesses this array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element that is stored at the given coordinate indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="155" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a60c7738ff7d96cb95a742d46cbb9c90c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Element&gt;&amp; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::elements</definition>
        <argsstring>() const</argsstring>
        <name>elements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A read-only vector of all elements that this array stores. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="161" column="23" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1ae1a8728a102c0db1e203b25b33711eed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &gt; &amp;</type>
        <definition>std::vector&lt;Element&gt;&amp; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::elements</definition>
        <argsstring>()</argsstring>
        <name>elements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A writable vector of all elements that this array stores. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="167" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a2169f2d6a312916bf31d08ca769f9c09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref> &amp;</type>
        <definition>const Vectorizer&amp; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::vectorizer</definition>
        <argsstring>() const</argsstring>
        <name>vectorizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The vectorizer that relates multiple tuple coordinates to a one-dimensional index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="177" column="22" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_storage_array_1a2cb80d53a35c3842541cc95d5737f707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Z</type>
            <defval><ref refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" kindref="member">Vectorizer</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; Z, <ref refid="namespace_g_q_c_p_1a75056d5799528c495b717e21cccc75f7" kindref="member">VectorVectorizer</ref> &gt;::value, <ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" kindref="member">Element</ref> &gt; &gt;</type>
        <definition>enable_if_t&lt;std::is_same&lt;Z, VectorVectorizer&gt;::value, VectorX&lt;Element&gt; &gt; GQCP::StorageArray&lt; _Element, _Vectorizer &gt;::asVector</definition>
        <argsstring>()</argsstring>
        <name>asVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert this <computeroutput><ref refid="class_g_q_c_p_1_1_storage_array" kindref="compound">StorageArray</ref></computeroutput> to a <computeroutput>Vector</computeroutput>, if possible.</para>
<para><simplesect kind="note"><para>This method is only available for <computeroutput>StorageArrays</computeroutput> that admit vector-like storage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="190" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simple array data structure.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Element</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of element that this array stores. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Vectorizer</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the vectorizer that relates multiple tuple coordinates to a one-dimensional index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::StorageArray&lt; _Element, _Vectorizer &gt;</label>
        <link refid="class_g_q_c_p_1_1_storage_array"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" line="38" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Representation/StorageArray.hpp" bodystart="38" bodyend="194"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_storage_array_1a2cb80d53a35c3842541cc95d5737f707" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>asVector</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a25d46a7fbdcbedeb31475cf694edc40c" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>Element</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a60c7738ff7d96cb95a742d46cbb9c90c" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>elements</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1ae1a8728a102c0db1e203b25b33711eed" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>elements</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a237dfeb5befa1fff135cb409d7a3b9e5" prot="private" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>m_elements</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1ab5d8651e0e234dd6049cca4982d7bd59" prot="private" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>m_vectorizer</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a79bca4884e8981d1ba7a378178d311d0" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>NumberOfAxes</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a1afead824c6f09ba10cc74dbd9b4b3cb" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>operator Element</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1af5c33456e2f3996561c1e3f5e469c158" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>operator()</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a63ba4fe0ff40dfd65bfcf222edb67db7" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>operator()</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1aa4796adbc9dcca9ac7e6f1f480e343c6" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>Self</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a0aade5a8ec10e2079a85e92afb2a3d92" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>StorageArray</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1af8f1cb9ce64ff5cff566a4e18a48f4d4" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>StorageArray</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a83b18d73072f0a22c4850bb3f48893ec" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>StorageArray</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a880c6a1f3e9a64f2585ff6905a9ce08f" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>StorageArray</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1ac25750c505083e8acf20527e578f163d" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>Vectorizer</name></member>
      <member refid="class_g_q_c_p_1_1_storage_array_1a2169f2d6a312916bf31d08ca769f9c09" prot="public" virt="non-virtual"><scope>GQCP::StorageArray</scope><name>vectorizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
