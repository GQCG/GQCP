<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_spin_resolved_base" kind="class" language="C++" prot="public">
    <compoundname>GQCP::SpinResolvedBase</compoundname>
    <derivedcompoundref refid="class_g_q_c_p_1_1_spin_resolved" prot="public" virt="non-virtual">GQCP::SpinResolved&lt; GQCP::ScalarBasis&lt; Shell &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_spin_resolved" prot="public" virt="non-virtual">GQCP::SpinResolved&lt; size_t &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_spin_resolved" prot="public" virt="non-virtual">GQCP::SpinResolved&lt; GQCP::Matrix&lt; Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" prot="public" virt="non-virtual">GQCP::USQOneElectronOperator&lt; Scalar &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_u_transformation" prot="public" virt="non-virtual">GQCP::UTransformation&lt; Scalar &gt;</derivedcompoundref>
    <includes refid="_spin_resolved_base_8hpp" local="no">SpinResolvedBase.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Of</type>
      </param>
      <param>
        <type>typename _Derived</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" prot="public" static="no">
        <type>_Of</type>
        <definition>using GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::Of =  _Of</definition>
        <argsstring></argsstring>
        <name>Of</name>
        <qualifiedname>GQCP::SpinResolvedBase::Of</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="42" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_spin_resolved_base_1a6074bc4e9b29958b9fb2ade214182b42" prot="public" static="no">
        <type>_Derived</type>
        <definition>using GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::Derived =  _Derived</definition>
        <argsstring></argsstring>
        <name>Derived</name>
        <qualifiedname>GQCP::SpinResolvedBase::Derived</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="45" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_spin_resolved_base_1ac2ecb42d733bb8ddf78fdb011855dcdc" prot="public" static="no">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base" kindref="compound">SpinResolvedBase</ref>&lt; <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref>, <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a6074bc4e9b29958b9fb2ade214182b42" kindref="member">Derived</ref> &gt;</type>
        <definition>using GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::Self =  SpinResolvedBase&lt;Of, Derived&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>GQCP::SpinResolvedBase::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="48" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_spin_resolved_base_1a98c23922046112f5125834a5339449f6" prot="private" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref></type>
        <definition>Of GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::m_alpha</definition>
        <argsstring></argsstring>
        <name>m_alpha</name>
        <qualifiedname>GQCP::SpinResolvedBase::m_alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="53" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_spin_resolved_base_1a3ee39f03838c02817ae4cd023006c822" prot="private" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref></type>
        <definition>Of GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::m_beta</definition>
        <argsstring></argsstring>
        <name>m_beta</name>
        <qualifiedname>GQCP::SpinResolvedBase::m_beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="56" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1ac6430934631d0e81584d742dcb28e524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::SpinResolvedBase</definition>
        <argsstring>(const Of &amp;alpha, const Of &amp;beta)</argsstring>
        <name>SpinResolvedBase</name>
        <qualifiedname>GQCP::SpinResolvedBase::SpinResolvedBase</qualifiedname>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a spin-resolved instance from its alpha and beta objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha-object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The beta-object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="70" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a3830b1d56ee5b6bc0132d1026025ce07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::SpinResolvedBase</definition>
        <argsstring>(const std::vector&lt; Of &gt; &amp;both)</argsstring>
        <name>SpinResolvedBase</name>
        <qualifiedname>GQCP::SpinResolvedBase::SpinResolvedBase</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &gt; &amp;</type>
          <declname>both</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a spin-resolved instance from a vector containing its alpha and beta objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>both</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector containing both alpha and beta objects (in that order). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="80" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a855eff9779b50d5b390b39330d5c69ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::SpinResolvedBase</definition>
        <argsstring>(const std::array&lt; Of, 2 &gt; &amp;both)</argsstring>
        <name>SpinResolvedBase</name>
        <qualifiedname>GQCP::SpinResolvedBase::SpinResolvedBase</qualifiedname>
        <param>
          <type>const std::array&lt; <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref>, 2 &gt; &amp;</type>
          <declname>both</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a spin-resolved instance from an array containing its alpha and beta objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>both</parametername>
</parameternamelist>
<parameterdescription>
<para>An array containing both alpha and beta objects (in that order). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="94" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="94" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a9fd9984b90c113bc10b86bcfe5631a32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::SpinResolvedBase</definition>
        <argsstring>(const std::initializer_list&lt; Of &gt; &amp;both)</argsstring>
        <name>SpinResolvedBase</name>
        <qualifiedname>GQCP::SpinResolvedBase::SpinResolvedBase</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &gt; &amp;</type>
          <declname>both</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a spin-resolved instance from an initializer list containing its alpha and beta objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>both</parametername>
</parameternamelist>
<parameterdescription>
<para>An initializer list containing both alpha and beta objects (in that order). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="103" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="103" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1accab13c5e8be1be72246ab1fe440cc1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>const Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <qualifiedname>GQCP::SpinResolvedBase::alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A read-only reference to the alpha object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="130" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a1dfb8ca22ac80e83c47db5b7dc3ddd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::alpha</definition>
        <argsstring>()</argsstring>
        <name>alpha</name>
        <qualifiedname>GQCP::SpinResolvedBase::alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A writable reference to the alpha object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="135" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a070d0be1f00ac25b16c623e6679bb0f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>const Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <qualifiedname>GQCP::SpinResolvedBase::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A read-only reference to the beta object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="140" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a9874eb94be81b82ff933f14532cea3c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::beta</definition>
        <argsstring>()</argsstring>
        <name>beta</name>
        <qualifiedname>GQCP::SpinResolvedBase::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A writable reference to the beta object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="145" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1abc73c03917a9bc4469007c832b7dc8d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>const Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::component</definition>
        <argsstring>(const Spin sigma) const</argsstring>
        <name>component</name>
        <qualifiedname>GQCP::SpinResolvedBase::component</qualifiedname>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1ac6f590924cfbbf11847a4ce174fe6e4f" kindref="member">Spin</ref></type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the alpha or beta component of this spin-resolved instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Alpha or beta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A read-only reference to the alpha or beta object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="154" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="154" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1a091d5449d9bedc3d2b8c63b1a54dce30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
        <definition>Of &amp; GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::component</definition>
        <argsstring>(const Spin sigma)</argsstring>
        <name>component</name>
        <qualifiedname>GQCP::SpinResolvedBase::component</qualifiedname>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1ac6f590924cfbbf11847a4ce174fe6e4f" kindref="member">Spin</ref></type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the alpha or beta component of this spin-resolved type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Alpha or beta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A writable reference to the alpha or beta object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="176" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="176" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_spin_resolved_base_1ad684026f9ce2481de03ed06267365e46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a6074bc4e9b29958b9fb2ade214182b42" kindref="member">Derived</ref></type>
        <definition>static Derived GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;::FromEqual</definition>
        <argsstring>(const Of &amp;equal)</argsstring>
        <name>FromEqual</name>
        <qualifiedname>GQCP::SpinResolvedBase::FromEqual</qualifiedname>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" kindref="member">Of</ref> &amp;</type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a derived (spin-resolved) instance, from equal alpha and beta representations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>equal</parametername>
</parameternamelist>
<parameterdescription>
<para>The equal representation for both the alpha and beta objects.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The derived (spin-resolved) type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="118" column="20" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A utility type encapsulating an alpha- and beta-type. In contrast to <computeroutput><ref refid="class_g_q_c_p_1_1_spin_resolved" kindref="compound">SpinResolved</ref></computeroutput>, this type is to be used as a base class/interface for types that are spin-resolved.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_Of</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the alpha- and beta-objects. The name &apos;Of&apos; is chosen for a natural reading <computeroutput><ref refid="class_g_q_c_p_1_1_spin_resolved_base" kindref="compound">SpinResolvedBase</ref>&lt;_Of, _Derived&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The type that derives from this type, given as a template argument, enabling <ref refid="class_g_q_c_p_1_1_c_r_t_p" kindref="compound">CRTP</ref> and compile-time polymorphism. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved_base"/>
      </node>
      <node id="4">
        <label>GQCP::SpinResolved&lt; GQCP::Matrix&lt; Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SpinResolved&lt; GQCP::ScalarBasis&lt; Shell &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::SpinResolved&lt; size_t &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>GQCP::USQOneElectronOperator&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>GQCP::UTransformation&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_u_transformation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::SpinResolvedBase&lt; _Of, _Derived &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved_base"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" line="39" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/QuantumChemical/SpinResolvedBase.hpp" bodystart="39" bodyend="177"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1accab13c5e8be1be72246ab1fe440cc1a" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>alpha</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a1dfb8ca22ac80e83c47db5b7dc3ddd44" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>alpha</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a070d0be1f00ac25b16c623e6679bb0f6" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>beta</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a9874eb94be81b82ff933f14532cea3c2" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>beta</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1abc73c03917a9bc4469007c832b7dc8d0" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>component</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a091d5449d9bedc3d2b8c63b1a54dce30" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>component</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a6074bc4e9b29958b9fb2ade214182b42" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>Derived</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1ad684026f9ce2481de03ed06267365e46" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>FromEqual</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a98c23922046112f5125834a5339449f6" prot="private" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>m_alpha</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a3ee39f03838c02817ae4cd023006c822" prot="private" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>m_beta</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a012e7533770449f494a6066c36bd835a" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>Of</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1ac2ecb42d733bb8ddf78fdb011855dcdc" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>Self</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1ac6430934631d0e81584d742dcb28e524" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>SpinResolvedBase</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a3830b1d56ee5b6bc0132d1026025ce07" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>SpinResolvedBase</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a855eff9779b50d5b390b39330d5c69ab" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>SpinResolvedBase</name></member>
      <member refid="class_g_q_c_p_1_1_spin_resolved_base_1a9fd9984b90c113bc10b86bcfe5631a32" prot="public" virt="non-virtual"><scope>GQCP::SpinResolvedBase</scope><name>SpinResolvedBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
