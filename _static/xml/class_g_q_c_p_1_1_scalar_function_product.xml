<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_scalar_function_product" kind="class" language="C++" prot="public">
    <compoundname>GQCP::ScalarFunctionProduct</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_scalar_function" prot="public" virt="non-virtual">GQCP::ScalarFunction&lt; product_t&lt; T1::Valued, T2::Valued &gt;, T1::Scalar, T1::Cols &gt;</basecompoundref>
    <includes refid="_scalar_function_8hpp" local="no">ScalarFunction.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T1</type>
      </param>
      <param>
        <type>typename T2</type>
        <defval>T1</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_scalar_function_product_1ac65c286f254398c890747487b3d182f2" prot="public" static="no">
        <type><ref refid="namespace_g_q_c_p_1a09e1543a47643a7a62401aa600bb2e28" kindref="member">product_t</ref>&lt; typename T1::Valued, typename T2::Valued &gt;</type>
        <definition>using GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::Valued =  product_t&lt;typename T1::Valued, typename T2::Valued&gt;</definition>
        <argsstring></argsstring>
        <name>Valued</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="65" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_scalar_function_product_1a1aa38b29542830aaf77357d9f646afde" prot="public" static="no">
        <type>typename T1::Scalar</type>
        <definition>using GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::Scalar =  typename T1::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="66" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_scalar_function_product_1aa2b73df24167ab148a84144908719856" prot="private" static="no" mutable="no">
        <type>T1</type>
        <definition>T1 GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::m_lhs</definition>
        <argsstring></argsstring>
        <name>m_lhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="60" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_scalar_function_product_1a22e7f3a1a248effd8db5d2db3595ce5b" prot="private" static="no" mutable="no">
        <type>T2</type>
        <definition>T2 GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::m_rhs</definition>
        <argsstring></argsstring>
        <name>m_rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="61" column="8" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_scalar_function_product_1a7e177d6f65f265f1aaf25658accfb8b5" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::Cols</definition>
        <argsstring></argsstring>
        <name>Cols</name>
        <initializer>= T1::Cols</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="68" column="23" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1a393fe273be01a60f718fc97fe918d818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::ScalarFunctionProduct</definition>
        <argsstring>(const T1 &amp;lhs, const T2 &amp;rhs)</argsstring>
        <name>ScalarFunctionProduct</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the left-hand side of the product </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the right-hand side of the product </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="80" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1aca07784c628c2856deab08682e05e1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::ScalarFunctionProduct</definition>
        <argsstring>()=default</argsstring>
        <name>ScalarFunctionProduct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="88" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1a4b9515f99b8eb9454165fc3bd6985df1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::ScalarFunctionProduct</definition>
        <argsstring>(const int literal)</argsstring>
        <name>ScalarFunctionProduct</name>
        <param>
          <type>const int</type>
          <declname>literal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The constructor for a &apos;zero&apos; instance given the &apos;0&apos; integer literal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="94" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1a3a54511e9fb2f8b5ffb21cd695f2c2d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::description</definition>
        <argsstring>() const</argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a textual description of self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="111" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1acadf6b7e46b4e9e54d4a80570548d101" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T1 &amp;</type>
        <definition>const T1&amp; GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::lhs</definition>
        <argsstring>() const</argsstring>
        <name>lhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the left-hand side of this product </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="118" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1ac5c556ca9f1b740b7760f0c2cc5b8f48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_scalar_function_product_1ac65c286f254398c890747487b3d182f2" kindref="member">Valued</ref></type>
        <definition>Valued GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::operator()</definition>
        <argsstring>(const Vector&lt; Scalar, Cols &gt; &amp;x) const override</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a0b93cbbef69cd49e5de8027a7b945756" kindref="member">Vector</ref>&lt; <ref refid="class_g_q_c_p_1_1_scalar_function_product_1a1aa38b29542830aaf77357d9f646afde" kindref="member">Scalar</ref>, <ref refid="class_g_q_c_p_1_1_scalar_function_product_1a7e177d6f65f265f1aaf25658accfb8b5" kindref="member">Cols</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector/point at which the scalar function product is to be evaluated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the product of the evaluated left-hand and right-hand side scalar functions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="125" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_scalar_function_product_1a38035afedcd55b113652a1ecc253df92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T2 &amp;</type>
        <definition>const T2&amp; GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;::rhs</definition>
        <argsstring>() const</argsstring>
        <name>rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the right-hand side of this product </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="133" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class template that represents a product of scalar functions (of the same type), such that the evaluation of a product is the product of the evaluations</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T1</parametername>
</parameternamelist>
<parameterdescription>
<para>the left-hand side scalar function type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T2</parametername>
</parameternamelist>
<parameterdescription>
<para>the right-hand side scalar function type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_function_product"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::ScalarFunction&lt; product_t&lt; T1::Valued, T2::Valued &gt;, T1::Scalar, T1::Cols &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::ScalarFunctionProduct&lt; T1, T2 &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_function_product"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::ScalarFunction&lt; product_t&lt; T1::Valued, T2::Valued &gt;, T1::Scalar, T1::Cols &gt;</label>
        <link refid="class_g_q_c_p_1_1_scalar_function"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" line="49" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/ScalarFunction.hpp" bodystart="50" bodyend="134"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a7e177d6f65f265f1aaf25658accfb8b5" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>Cols</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a3a54511e9fb2f8b5ffb21cd695f2c2d3" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>description</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1acadf6b7e46b4e9e54d4a80570548d101" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>lhs</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1aa2b73df24167ab148a84144908719856" prot="private" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>m_lhs</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a22e7f3a1a248effd8db5d2db3595ce5b" prot="private" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>m_rhs</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1ac5c556ca9f1b740b7760f0c2cc5b8f48" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>operator()</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_1a92e4862c14d2cf4574625dfba796eaf6" prot="public" virt="pure-virtual" ambiguityscope="ScalarFunction&lt; product_t&lt; T1::Valued, T2::Valued &gt;, T1::Scalar, T1::Cols &gt;::"><scope>GQCP::ScalarFunctionProduct</scope><name>operator()</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a38035afedcd55b113652a1ecc253df92" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>rhs</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a1aa38b29542830aaf77357d9f646afde" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>Scalar</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a393fe273be01a60f718fc97fe918d818" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>ScalarFunctionProduct</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1aca07784c628c2856deab08682e05e1ce" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>ScalarFunctionProduct</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1a4b9515f99b8eb9454165fc3bd6985df1" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>ScalarFunctionProduct</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_product_1ac65c286f254398c890747487b3d182f2" prot="public" virt="non-virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>Valued</name></member>
      <member refid="class_g_q_c_p_1_1_scalar_function_1a0f4c43609c40b1754b07aba9b69b66f6" prot="public" virt="virtual"><scope>GQCP::ScalarFunctionProduct</scope><name>~ScalarFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
