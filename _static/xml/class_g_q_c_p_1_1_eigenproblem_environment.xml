<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_eigenproblem_environment" kind="class" language="C++" prot="public">
    <compoundname>GQCP::EigenproblemEnvironment</compoundname>
    <includes refid="_eigenproblem_environment_8hpp" local="no">EigenproblemEnvironment.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" prot="public" static="no">
        <type>_Scalar</type>
        <definition>using GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Scalar =  _Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="38" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1aa5d1ac8e9e8a5124ff821328c190cd9e" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1ae8a9e0086f5fbab030b1d49b05202054" kindref="member">VectorFunction</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>VectorFunction&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::matrix_vector_product_function</definition>
        <argsstring></argsstring>
        <name>matrix_vector_product_function</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::matrix_vector_product_function</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="43" column="20" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a849aa0ad0c9466c531ae2801fc12d8de" prot="public" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>SquareMatrix&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::A</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="47" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a25b534ad54e086e91c69bde714a0c4c4" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>VectorX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::diagonal</definition>
        <argsstring></argsstring>
        <name>diagonal</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::diagonal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="50" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a5409c53cfd95076713c08a6fb341afb1" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="53" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a32a61251a3de42f08c34013bd764a9bc" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; double &gt;</type>
        <definition>VectorX&lt;double&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::eigenvalues</definition>
        <argsstring></argsstring>
        <name>eigenvalues</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::eigenvalues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="57" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1ae6067f5f512100449b51ff98a2c22a4f" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::eigenvectors</definition>
        <argsstring></argsstring>
        <name>eigenvectors</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::eigenvectors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="60" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1abf4e241d51681616cb4b6ed28a6d4026" prot="public" static="no" mutable="no">
        <type><ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>SquareMatrix&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::S</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="63" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1ab9d9ff337078f8cdd90cc166f89d7cbe" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; double &gt;</type>
        <definition>VectorX&lt;double&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Lambda</definition>
        <argsstring></argsstring>
        <name>Lambda</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Lambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="66" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a7f53eede93b4b59a2bdfb50dfb7bd810" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Z</definition>
        <argsstring></argsstring>
        <name>Z</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="69" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a33c85239d26787d391d5036f136bc153" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::V</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="73" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1ad1322f5ba8ad32def492dc275f85cb76" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::VA</definition>
        <argsstring></argsstring>
        <name>VA</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::VA</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="76" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a238f88df14aff1b0ce73f34e4aa8ba0f" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::X</definition>
        <argsstring></argsstring>
        <name>X</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::X</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="79" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1af75cf9113b87fd65208c7b6d38910be6" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="83" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_q_c_p_1_1_eigenproblem_environment_1a38990312c6e1d4f8e39eea7d714f409e" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt;</type>
        <definition>MatrixX&lt;Scalar&gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Delta</definition>
        <argsstring></argsstring>
        <name>Delta</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Delta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="86" column="13" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1ad144d41a45edab52a494694a7e59066f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::EigenproblemEnvironment</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;A)</argsstring>
        <name>EigenproblemEnvironment</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::EigenproblemEnvironment</qualifiedname>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix whose eigenvalue problem should be solved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="97" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="97" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1a7ecaa971dceb4e76e0efa1058593eb2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::EigenproblemEnvironment</definition>
        <argsstring>(const VectorFunction&lt; Scalar &gt; &amp;matrix_vector_product_function, const VectorX&lt; Scalar &gt; &amp;diagonal, const MatrixX&lt; Scalar &gt; &amp;V)</argsstring>
        <name>EigenproblemEnvironment</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::EigenproblemEnvironment</qualifiedname>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1ae8a9e0086f5fbab030b1d49b05202054" kindref="member">VectorFunction</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>matrix_vector_product_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>diagonal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matrix_vector_product</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector function that returns the matrix-vector product (i.e. the matrix-vector product representation of the matrix). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diagonal</parametername>
</parameternamelist>
<parameterdescription>
<para>The diagonal of the matrix whose eigenvalue problem should be solved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="104" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1a13adc7214798089577bc2e1705c02fc3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_eigenpair" kindref="compound">Eigenpair</ref>&lt; double, <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &gt;</type>
        <definition>std::vector&lt; Eigenpair&lt; double, Scalar &gt; &gt; GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::eigenpairs</definition>
        <argsstring>(const size_t number_of_requested_eigenpairs=1) const</argsstring>
        <name>eigenpairs</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::eigenpairs</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>number_of_requested_eigenpairs</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>number_of_requested_eigenpairs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of eigenpairs to retrieve.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The eigenvalues and eigenvectors as a vector of eigenpairs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="154" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="154" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1acf84deadaff12d58fc9cf21d46b45787" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_eigenproblem_environment" kindref="compound">EigenproblemEnvironment</ref></type>
        <definition>static EigenproblemEnvironment GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Dense</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;A)</argsstring>
        <name>Dense</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Dense</qualifiedname>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix whose eigenvalue problem should be solved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An environment that can be used to solve the dense eigenvalue problem for the given square matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="121" column="36" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1a727e721f3027d6da3b35790584f4cf1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_eigenproblem_environment" kindref="compound">EigenproblemEnvironment</ref></type>
        <definition>static EigenproblemEnvironment GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Iterative</definition>
        <argsstring>(const VectorFunction&lt; Scalar &gt; &amp;matrix_vector_product_function, const VectorX&lt; Scalar &gt; &amp;diagonal, const MatrixX&lt; Scalar &gt; &amp;V)</argsstring>
        <name>Iterative</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Iterative</qualifiedname>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1ae8a9e0086f5fbab030b1d49b05202054" kindref="member">VectorFunction</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>matrix_vector_product_function</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a48fd76814344f532956445188044b544" kindref="member">VectorX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>diagonal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matrix_vector_product</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector function that returns the matrix-vector product (i.e. the matrix-vector product representation of the matrix). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diagonal</parametername>
</parameternamelist>
<parameterdescription>
<para>The diagonal of the matrix whose eigenvalue problem should be solved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>A matrix of initial guess vectors (each column of the matrix is an initial guess vector).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An environment that can be used to solve the eigenvalue problem for the matrix that is represented by the given matrix-vector product. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="130" column="36" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_eigenproblem_environment_1a826d9df6c704d8128195ff08dc447973" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_eigenproblem_environment" kindref="compound">EigenproblemEnvironment</ref></type>
        <definition>static EigenproblemEnvironment GQCP::EigenproblemEnvironment&lt; _Scalar &gt;::Iterative</definition>
        <argsstring>(const SquareMatrix&lt; Scalar &gt; &amp;A, const MatrixX&lt; Scalar &gt; &amp;V)</argsstring>
        <name>Iterative</name>
        <qualifiedname>GQCP::EigenproblemEnvironment::Iterative</qualifiedname>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_square_matrix" kindref="compound">SquareMatrix</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_g_q_c_p_1a1682f7552bb345204c32a5cc7c464dc6" kindref="member">MatrixX</ref>&lt; <ref refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" kindref="member">Scalar</ref> &gt; &amp;</type>
          <declname>V</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix whose eigenvalue problem should be solved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>A matrix of initial guess vectors (each column of the matrix is an initial guess vector).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An environment that can be used to solve the eigenvalue problem for the matrix that is represented by the given matrix-vector product. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="138" column="36" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="138" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An environment used to solve eigenvalue problems for self-adjoint matrices.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type of the matrix elements: real or complex. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>Eigen::Matrix&lt; Scalar , Dynamic , Dynamic  &gt;</label>
      </node>
      <node id="4">
        <label>Eigen::Matrix&lt; double, Dynamic, Dynamic &gt;</label>
      </node>
      <node id="1">
        <label>GQCP::EigenproblemEnvironment&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_eigenproblem_environment"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+A</edgelabel>
          <edgelabel>+S</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+Delta</edgelabel>
          <edgelabel>+R</edgelabel>
          <edgelabel>+V</edgelabel>
          <edgelabel>+VA</edgelabel>
          <edgelabel>+X</edgelabel>
          <edgelabel>+Z</edgelabel>
          <edgelabel>+diagonal</edgelabel>
          <edgelabel>+eigenvectors</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+Lambda</edgelabel>
          <edgelabel>+eigenvalues</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>GQCP::Matrix&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_matrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>GQCP::Matrix&lt; double &gt;</label>
        <link refid="class_g_q_c_p_1_1_matrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MatrixX&lt; Scalar  &gt;</label>
        <link refid="class_g_q_c_p_1_1_matrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::SquareMatrix&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_square_matrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" line="35" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/EigenproblemEnvironment.hpp" bodystart="35" bodyend="172"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a849aa0ad0c9466c531ae2801fc12d8de" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>A</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a38990312c6e1d4f8e39eea7d714f409e" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Delta</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1acf84deadaff12d58fc9cf21d46b45787" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Dense</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a25b534ad54e086e91c69bde714a0c4c4" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>diagonal</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a5409c53cfd95076713c08a6fb341afb1" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>dimension</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a13adc7214798089577bc2e1705c02fc3" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>eigenpairs</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1ad144d41a45edab52a494694a7e59066f" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>EigenproblemEnvironment</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a7ecaa971dceb4e76e0efa1058593eb2a" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>EigenproblemEnvironment</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a32a61251a3de42f08c34013bd764a9bc" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>eigenvalues</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1ae6067f5f512100449b51ff98a2c22a4f" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>eigenvectors</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a727e721f3027d6da3b35790584f4cf1a" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Iterative</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a826d9df6c704d8128195ff08dc447973" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Iterative</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1ab9d9ff337078f8cdd90cc166f89d7cbe" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Lambda</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1aa5d1ac8e9e8a5124ff821328c190cd9e" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>matrix_vector_product_function</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1af75cf9113b87fd65208c7b6d38910be6" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>R</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1abf4e241d51681616cb4b6ed28a6d4026" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>S</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a088f09eda9140bf157ab9deb5a4d7b3f" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Scalar</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a33c85239d26787d391d5036f136bc153" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>V</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1ad1322f5ba8ad32def492dc275f85cb76" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>VA</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a238f88df14aff1b0ce73f34e4aa8ba0f" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>X</name></member>
      <member refid="class_g_q_c_p_1_1_eigenproblem_environment_1a7f53eede93b4b59a2bdfb50dfb7bd810" prot="public" virt="non-virtual"><scope>GQCP::EigenproblemEnvironment</scope><name>Z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
