<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_libint_interfacer" kind="class" language="C++" prot="public">
    <compoundname>GQCP::LibintInterfacer</compoundname>
    <includes refid="_libint_interfacer_8hpp" local="no">LibintInterfacer.hpp</includes>
    <innerclass refid="struct_g_q_c_p_1_1_libint_interfacer_1_1empty" prot="private">GQCP::LibintInterfacer::empty</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_libint_interfacer_1a60b19bbf913080d3e958cca51bc16196" prot="public" static="no">
        <type>libint2::Engine::target_ptr_vec</type>
        <definition>using GQCP::LibintInterfacer::libint_target_ptr_vec =  libint2::Engine::target_ptr_vec</definition>
        <argsstring></argsstring>
        <name>libint_target_ptr_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="41" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a28932df62f0f986c09ef7b137003c0b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GQCP::LibintInterfacer::LibintInterfacer</definition>
        <argsstring>()</argsstring>
        <name>LibintInterfacer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private constructor as required by the singleton class design </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="49" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="39" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a24a8ee10efcae1d6b44e1cd7e8cff54f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GQCP::LibintInterfacer::~LibintInterfacer</definition>
        <argsstring>()</argsstring>
        <name>~LibintInterfacer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private destructor as required by the singleton class design </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="54" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a8a24a71b6a4c013badc0a484966b4e22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_g_q_c_p_1_1_libint_interfacer" kindref="compound">LibintInterfacer</ref> &amp;</type>
        <definition>LibintInterfacer &amp; GQCP::LibintInterfacer::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the static singleton instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="68" column="29" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a723d4bbf5cc350ed155b6752ed2bb096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GQCP::LibintInterfacer::LibintInterfacer</definition>
        <argsstring>(LibintInterfacer const &amp;libint_communicator)=delete</argsstring>
        <name>LibintInterfacer</name>
        <param>
          <type><ref refid="class_g_q_c_p_1_1_libint_interfacer" kindref="compound">LibintInterfacer</ref> const &amp;</type>
          <declname>libint_communicator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the public copy constructor and the public assignment operator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1aab216f2d2458c398eb271561f7f553dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GQCP::LibintInterfacer::operator=</definition>
        <argsstring>(LibintInterfacer const &amp;libint_communicator)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_g_q_c_p_1_1_libint_interfacer" kindref="compound">LibintInterfacer</ref> const &amp;</type>
          <declname>libint_communicator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="74" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1ab167b72e70548e5f2dd14e34d6fb1780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Atom</type>
        <definition>libint2::Atom GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const Nucleus &amp;nucleus) const</argsstring>
        <name>interface</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_nucleus" kindref="compound">Nucleus</ref> &amp;</type>
          <declname>nucleus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nucleus</parametername>
</parameternamelist>
<parameterdescription>
<para>the GQCP-nucleus that should be interfaced into a libint2::Atom</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a libint2::Atom, interfaced from the given <ref refid="class_g_q_c_p_1_1_nucleus" kindref="compound">GQCP::Nucleus</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="84" column="19" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a22bdd7cee1e7f37677c16e99ea2ac4ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; libint2::Atom &gt;</type>
        <definition>std::vector&lt; libint2::Atom &gt; GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const std::vector&lt; Nucleus &gt; &amp;nuclei) const</argsstring>
        <name>interface</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_nucleus" kindref="compound">Nucleus</ref> &gt; &amp;</type>
          <declname>nuclei</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuclei</parametername>
</parameternamelist>
<parameterdescription>
<para>the GQCP-nuclei that should be interfaced</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>libint2::Atoms, interfaced from the given <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> nuclei </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="91" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a330f91c686a79c6950dec1f068bed6ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Shell</type>
        <definition>libint2::Shell GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const GTOShell &amp;shell) const</argsstring>
        <name>interface</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_g_t_o_shell" kindref="compound">GTOShell</ref> &amp;</type>
          <declname>shell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> shell that should be interfaced</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a libint2::Shell whose renorm()alization has been undone, interfaced from the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> <ref refid="class_g_q_c_p_1_1_g_t_o_shell" kindref="compound">GTOShell</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> shell that should be interfaced</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a libint2::Shell whose renorm()alization has been undone, interfaced from the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> Shell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="98" column="20" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="114" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1abb87b475cd511ef6364d10f3e0f0fcd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::BasisSet</type>
        <definition>libint2::BasisSet GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const ShellSet&lt; GTOShell &gt; &amp;shellset) const</argsstring>
        <name>interface</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_shell_set" kindref="compound">ShellSet</ref>&lt; <ref refid="class_g_q_c_p_1_1_g_t_o_shell" kindref="compound">GTOShell</ref> &gt; &amp;</type>
          <declname>shellset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shellset</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> <ref refid="class_g_q_c_p_1_1_shell_set" kindref="compound">ShellSet</ref> that should be interfaced</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a libint2::BasisSet (whose underlying libint2::Shells have been re-renorm()alized), interfaced from the <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> <ref refid="class_g_q_c_p_1_1_shell_set" kindref="compound">ShellSet</ref>. Note that it is not possible to create libint2-sp-shells from a <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> <ref refid="class_g_q_c_p_1_1_shell_set" kindref="compound">ShellSet</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="105" column="23" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="144" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a27340a4cb6bb52c86c2d2dfa18d1e6cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_g_t_o_shell" kindref="compound">GTOShell</ref> &gt;</type>
        <definition>std::vector&lt; GTOShell &gt; GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const libint2::Shell &amp;libint_shell, const std::vector&lt; Nucleus &gt; &amp;nuclei, bool undo_renorm=true) const</argsstring>
        <name>interface</name>
        <param>
          <type>const libint2::Shell &amp;</type>
          <declname>libint_shell</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_nucleus" kindref="compound">Nucleus</ref> &gt; &amp;</type>
          <declname>nuclei</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>undo_renorm</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface a libint2::Shell to the corresponding list of GQCP::Shells. Note that there is no one-to-one libint -&gt; <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> conversion, since <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> does not support representing &apos;linked&apos; sp-&apos;shells&apos;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2 Shell that should be interfaced </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nuclei</parametername>
</parameternamelist>
<parameterdescription>
<para>the nuclei that can serve as centers of the Shells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>undo_renorm</parametername>
</parameternamelist>
<parameterdescription>
<para>if the libint2::Shell should be un-renorm()alized</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of GQCP::Shells corresponding to the given libint2::Shells</para>
</simplesect>
Interface a libint2::Shell to the corresponding list of GQCP::Shells. Note that there is no one-to-one libint -&gt; <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> conversion, since <ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref> does not support representing &apos;linked&apos; sp-&apos;shells&apos;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2 Shell that should be interfaced </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nuclei</parametername>
</parameternamelist>
<parameterdescription>
<para>the nuclei that can serve as centers of the Shells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>undoRenorm</parametername>
</parameternamelist>
<parameterdescription>
<para>if the libint2::Shell should be un-renorm()alized</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of GQCP::Shells </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="118" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="185" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1ac0ee59a07f22370ebbaba392c837402a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_g_q_c_p_1_1_g_t_o_shell" kindref="compound">GTOShell</ref> &gt;</type>
        <definition>std::vector&lt; GTOShell &gt; GQCP::LibintInterfacer::interface</definition>
        <argsstring>(const libint2::BasisSet &amp;libint_basisset, const std::vector&lt; Nucleus &gt; &amp;nuclei) const</argsstring>
        <name>interface</name>
        <param>
          <type>const libint2::BasisSet &amp;</type>
          <declname>libint_basisset</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_g_q_c_p_1_1_nucleus" kindref="compound">Nucleus</ref> &gt; &amp;</type>
          <declname>nuclei</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface a libint2::BasisSet to the corresponding <ref refid="class_g_q_c_p_1_1_shell_set" kindref="compound">GQCP::ShellSet</ref> and undo the libint2 renorm()alization</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_basisset</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2 Shell that should be interfaced </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nuclei</parametername>
</parameternamelist>
<parameterdescription>
<para>the nuclei that can serve as centers of the Shells</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of GTOShells corresponding to the un-renorm()alized libint2::BasisSet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="128" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="238" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1ac404e0944449e3e4698bdba35067290e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Engine</type>
        <definition>libint2::Engine GQCP::LibintInterfacer::createEngine</definition>
        <argsstring>(const CoulombRepulsionOperator &amp;op, const size_t max_nprim, const size_t max_l) const</argsstring>
        <name>createEngine</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_coulomb_repulsion_operator" kindref="compound">CoulombRepulsionOperator</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_nprim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a libint2 engine that corresponds to the given operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>the Coulomb repulsion operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_nprim</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of primitives per contracted Gaussian shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum angular momentum of Gaussian shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proper libint2 engine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="142" column="21" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1ab4c2dedc293fb1854c65646e4ef690a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Engine</type>
        <definition>libint2::Engine GQCP::LibintInterfacer::createEngine</definition>
        <argsstring>(const ElectronicDipoleOperator &amp;op, const size_t max_nprim, const size_t max_l) const</argsstring>
        <name>createEngine</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_electronic_dipole_operator" kindref="compound">ElectronicDipoleOperator</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_nprim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a libint2 engine that corresponds to the given operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>the electronic electric dipole operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_nprim</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of primitives per contracted Gaussian shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum angular momentum of Gaussian shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proper libint2 engine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="153" column="21" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a0ee60e808ba1d13ecc316b80995a507b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Engine</type>
        <definition>libint2::Engine GQCP::LibintInterfacer::createEngine</definition>
        <argsstring>(const KineticOperator &amp;op, const size_t max_nprim, const size_t max_l) const</argsstring>
        <name>createEngine</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_kinetic_operator" kindref="compound">KineticOperator</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_nprim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a libint2 engine that corresponds to the given operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>the kinetic operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_nprim</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of primitives per contracted Gaussian shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum angular momentum of Gaussian shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proper libint2 engine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="164" column="21" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a5acd7a556518f3fde1b40a9f607013ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Engine</type>
        <definition>libint2::Engine GQCP::LibintInterfacer::createEngine</definition>
        <argsstring>(const NuclearAttractionOperator &amp;op, const size_t max_nprim, const size_t max_l) const</argsstring>
        <name>createEngine</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_nuclear_attraction_operator" kindref="compound">NuclearAttractionOperator</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_nprim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a libint2 engine that corresponds to the given operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>the nuclear attraction operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_nprim</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of primitives per contracted Gaussian shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum angular momentum of Gaussian shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proper libint2 engine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="175" column="21" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a0cd9425c224d037b06b2417df4c4bebf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>libint2::Engine</type>
        <definition>libint2::Engine GQCP::LibintInterfacer::createEngine</definition>
        <argsstring>(const OverlapOperator &amp;op, const size_t max_nprim, const size_t max_l) const</argsstring>
        <name>createEngine</name>
        <param>
          <type>const <ref refid="class_g_q_c_p_1_1_overlap_operator" kindref="compound">OverlapOperator</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_nprim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>max_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a libint2 engine that corresponds to the given operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>the overlap operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_nprim</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of primitives per contracted Gaussian shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_l</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum angular momentum of Gaussian shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the proper libint2 engine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="186" column="21" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1aab35d169c5fdc188a826f4c5538aff83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::LibintInterfacer::numberOfShells</definition>
        <argsstring>(const libint2::Shell &amp;libint_shell) const</argsstring>
        <name>numberOfShells</name>
        <param>
          <type>const libint2::Shell &amp;</type>
          <declname>libint_shell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2::Shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of true shells that are contained in the libint2::Shell</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2::Shell</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of true shells that are contained in the libint shell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="193" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1a0b96ca7831ded630ed76449a6e6cb420" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::LibintInterfacer::numberOfShells</definition>
        <argsstring>(const libint2::BasisSet &amp;libint_basisset) const</argsstring>
        <name>numberOfShells</name>
        <param>
          <type>const libint2::BasisSet &amp;</type>
          <declname>libint_basisset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_basisset</parametername>
</parameternamelist>
<parameterdescription>
<para>the libint2::BasisSet</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of true shells that are contained in the libint2::BasisSet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="200" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="346" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_libint_interfacer_1ad39caadc6d5320df459e9d451c4b0b1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GQCP::LibintInterfacer::undoRenorm</definition>
        <argsstring>(libint2::Shell &amp;libint_shell) const</argsstring>
        <name>undoRenorm</name>
        <param>
          <type>libint2::Shell &amp;</type>
          <declname>libint_shell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Undo the libint2 default renormalization (see libint2::Shell::renorm())</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libint_shell</parametername>
</parameternamelist>
<parameterdescription>
<para>the shell that should be un-renorm()alized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="207" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp" bodystart="363" bodyend="376"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A singleton class that takes care of interfacing with the Libint2 (version 2.3.1) C++ API</para>
<para>Singleton class template from: <ulink url="https://stackoverflow.com/a/1008289">https://stackoverflow.com/a/1008289</ulink> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GQCP::LibintInterfacer</label>
        <link refid="class_g_q_c_p_1_1_libint_interfacer"/>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" line="39" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp" bodystart="39" bodyend="208"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1ac404e0944449e3e4698bdba35067290e" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>createEngine</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1ab4c2dedc293fb1854c65646e4ef690a8" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>createEngine</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a0ee60e808ba1d13ecc316b80995a507b" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>createEngine</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a5acd7a556518f3fde1b40a9f607013ab" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>createEngine</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a0cd9425c224d037b06b2417df4c4bebf" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>createEngine</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a8a24a71b6a4c013badc0a484966b4e22" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>get</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1ab167b72e70548e5f2dd14e34d6fb1780" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a22bdd7cee1e7f37677c16e99ea2ac4ab" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a330f91c686a79c6950dec1f068bed6ce" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1abb87b475cd511ef6364d10f3e0f0fcd1" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a27340a4cb6bb52c86c2d2dfa18d1e6cd" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1ac0ee59a07f22370ebbaba392c837402a" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>interface</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a60b19bbf913080d3e958cca51bc16196" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>libint_target_ptr_vec</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a28932df62f0f986c09ef7b137003c0b0" prot="private" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>LibintInterfacer</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a723d4bbf5cc350ed155b6752ed2bb096" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>LibintInterfacer</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1aab35d169c5fdc188a826f4c5538aff83" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>numberOfShells</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a0b96ca7831ded630ed76449a6e6cb420" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>numberOfShells</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1aab216f2d2458c398eb271561f7f553dd" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>operator=</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1ad39caadc6d5320df459e9d451c4b0b1c" prot="public" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>undoRenorm</name></member>
      <member refid="class_g_q_c_p_1_1_libint_interfacer_1a24a8ee10efcae1d6b44e1cd7e8cff54f" prot="private" virt="non-virtual"><scope>GQCP::LibintInterfacer</scope><name>~LibintInterfacer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
