<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_vector_space_arithmetic" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>GQCP::VectorSpaceArithmetic</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_c_r_t_p" prot="public" virt="non-virtual">GQCP::CRTP&lt; T &gt;</basecompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_evaluable_linear_combination" prot="public" virt="non-virtual">GQCP::EvaluableLinearCombination&lt; Scalar, BasisFunctionDerivative &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_evaluable_linear_combination" prot="public" virt="non-virtual">GQCP::EvaluableLinearCombination&lt; Scalar, BasisFunction &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_s_q_operator_storage" prot="public" virt="non-virtual">GQCP::SQOperatorStorage&lt; SquareRankFourTensor&lt; _Scalar &gt;, _Vectorizer, MixedUSQTwoElectronOperatorComponent&lt; _Scalar, _Vectorizer &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_s_q_operator_storage" prot="public" virt="non-virtual">GQCP::SQOperatorStorage&lt; SquareRankFourTensor&lt; _Scalar &gt;, _Vectorizer, SimpleSQTwoElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_s_q_operator_storage" prot="public" virt="non-virtual">GQCP::SQOperatorStorage&lt; SquareMatrix&lt; _Scalar &gt;, _Vectorizer, SimpleSQOneElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple1_d_m" prot="public" virt="non-virtual">GQCP::Simple1DM&lt; _Scalar, SpinDensity1DM&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple1_d_m" prot="public" virt="non-virtual">GQCP::Simple1DM&lt; _Scalar, G1DM&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple1_d_m" prot="public" virt="non-virtual">GQCP::Simple1DM&lt; _Scalar, Orbital1DM&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple1_d_m" prot="public" virt="non-virtual">GQCP::Simple1DM&lt; _Scalar, SpinResolved1DMComponent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple2_d_m" prot="public" virt="non-virtual">GQCP::Simple2DM&lt; _Scalar, G2DM&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple2_d_m" prot="public" virt="non-virtual">GQCP::Simple2DM&lt; _Scalar, Orbital2DM&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_simple2_d_m" prot="public" virt="non-virtual">GQCP::Simple2DM&lt; _Scalar, PureSpinResolved2DMComponent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_t1_amplitudes" prot="public" virt="non-virtual">GQCP::T1Amplitudes&lt; Scalar &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_t2_amplitudes" prot="public" virt="non-virtual">GQCP::T2Amplitudes&lt; Scalar &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator" prot="public" virt="non-virtual">GQCP::USQOneElectronOperator&lt; Scalar &gt;</derivedcompoundref>
    <includes refid="_vector_space_arithmetic_8hpp" local="no">VectorSpaceArithmetic.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a241d8217aa2b2f34384a4439a968d555" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T &amp;</type>
        <definition>virtual T&amp; GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;::operator+=</definition>
        <argsstring>(const T &amp;rhs)=0</argsstring>
        <name>operator+=</name>
        <reimplementedby refid="class_g_q_c_p_1_1_simple1_d_m_1a3730b13257db341c113e49aa26b3fee4">operator+=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_simple2_d_m_1ad39edb07d7dcd4b8cf1b8d64a5355e8d">operator+=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_scalar_g_s_q_one_electron_operator_product_1a2a833747358b8f6b50481ed94beb90f2">operator+=</reimplementedby>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Addition-assignment, to be implemented in derived classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="44" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a1ea665b4c39561433d116ee4b6c1d911" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T &amp;</type>
        <definition>virtual T&amp; GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;::operator*=</definition>
        <argsstring>(const Scalar &amp;a)=0</argsstring>
        <name>operator*=</name>
        <reimplementedby refid="class_g_q_c_p_1_1_evaluable_linear_combination_1ae65974d7a658eaa2bc78e5b26f02f255">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_evaluable_linear_combination_1ae65974d7a658eaa2bc78e5b26f02f255">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_evaluable_linear_combination_1ae65974d7a658eaa2bc78e5b26f02f255">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator_1a8dd5c13f6d98c0835dd1db46fcbf412a">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator_1a8dd5c13f6d98c0835dd1db46fcbf412a">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_mixed_spin_resolved2_d_m_component_1a0f0abafa128cc561833ff07a9531cb0d">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_simple1_d_m_1adf9829fb7c3d3f634ad83ca0a37fea96">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_simple2_d_m_1aec142ff4054c04001007500e9009513b">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_spin_resolved1_d_m_1aebf277a6623597c7dd2b196c1907ddbe">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_scalar_g_s_q_one_electron_operator_product_1a915528b3fe1c159e99e9cd73e5044383">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_u_s_q_two_electron_operator_1ad2641d7ed0bb28069712ad51522ac228">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_t1_amplitudes_1ae54c6b87b0924981ce657f83f3c8d8fb">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_t1_amplitudes_1ae54c6b87b0924981ce657f83f3c8d8fb">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_t2_amplitudes_1a10ae1614bffaae6a0bdf8755b8840d72">operator*=</reimplementedby>
        <reimplementedby refid="class_g_q_c_p_1_1_t2_amplitudes_1a10ae1614bffaae6a0bdf8755b8840d72">operator*=</reimplementedby>
        <param>
          <type>const Scalar &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar multiplication-assignment, to be implemented in derived classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="49" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a63a0cb54302a2d2f1d54af66e7527c4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;::operator-=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtraction-assignment, canonically implemented using addition-assignment with the negation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="68" column="7" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a6b0d86c96ce2b6aaed10dc6d70a493bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Negation, canonically implemented as scalar multiplication by (-1.0). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="108" column="7" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a0a2a6d21024113554f979791e559e3ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T operator+</definition>
        <argsstring>(T lhs, const T &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Addition, canonically implemented using addition-assignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="59" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="friend" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a8c6ac2a457099f1f6070bc96b9700dfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T operator-</definition>
        <argsstring>(T lhs, const T &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtraction, canonically implemented using subtraction-assignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="77" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="friend" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a8e3087bdbccdfe1867cf641004f1583f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T operator*</definition>
        <argsstring>(const Scalar &amp;a, T rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Scalar &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar multiplication, canonically implemented using scalar multiplication-assignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="86" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="friend" id="class_g_q_c_p_1_1_vector_space_arithmetic_1ac0337d29a7eb98d1c3231a5a62fca84a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T operator*</definition>
        <argsstring>(T lhs, const Scalar &amp;a)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Scalar &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The commutative version of the previous scalar multiplication. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="94" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="friend" id="class_g_q_c_p_1_1_vector_space_arithmetic_1a19f7c84ce690c4e61c836248af518fb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T operator/</definition>
        <argsstring>(T lhs, const Scalar &amp;a)</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Scalar &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar division, canonically implemented using scalar multiplication-assignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="101" column="14" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An (abstract) interface for types that support vector space arithmetic, i.e. linear combinations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for which vector space arithmetic should be implemented. It is given as a template argument, enabling <ref refid="class_g_q_c_p_1_1_c_r_t_p" kindref="compound">CRTP</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar type (real or complex) of the scalar multiplication. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>GQCP::RSQOneElectronOperator&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_r_s_q_one_electron_operator"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>GQCP::USQOneElectronOperator&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_u_s_q_one_electron_operator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>GQCP::SimpleSQOneElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_s_q_one_electron_operator"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>GQCP::MixedUSQTwoElectronOperatorComponent&lt; _Scalar, _Vectorizer &gt;</label>
        <link refid="class_g_q_c_p_1_1_mixed_u_s_q_two_electron_operator_component"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>GQCP::Simple1DM&lt; _Scalar, SpinDensity1DM&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple1_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>GQCP::Simple2DM&lt; _Scalar, G2DM&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple2_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>GQCP::Simple2DM&lt; _Scalar, Orbital2DM&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple2_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GQCP::EvaluableLinearCombination&lt; Scalar, BasisFunction &gt;</label>
        <link refid="class_g_q_c_p_1_1_evaluable_linear_combination"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>GQCP::GSQTwoElectronOperator&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g_s_q_two_electron_operator"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>GQCP::Simple2DM&lt; _Scalar, PureSpinResolved2DMComponent&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple2_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>GQCP::SpinResolved1DMComponent&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_resolved1_d_m_component"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>GQCP::Simple1DM&lt; _Scalar, SpinResolved1DMComponent&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple1_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>GQCP::SimpleSQTwoElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple_s_q_two_electron_operator"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>GQCP::G2DM&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g2_d_m"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>GQCP::Simple1DM&lt; _Scalar, Orbital1DM&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple1_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>GQCP::G1DM&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g1_d_m"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GQCP::EvaluableLinearCombination&lt; Scalar, BasisFunctionDerivative &gt;</label>
        <link refid="class_g_q_c_p_1_1_evaluable_linear_combination"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>GQCP::SQOperatorStorage&lt; SquareRankFourTensor&lt; _Scalar &gt;, _Vectorizer, MixedUSQTwoElectronOperatorComponent&lt; _Scalar, _Vectorizer &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_s_q_operator_storage"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>GQCP::Orbital2DM&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_orbital2_d_m"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>GQCP::Orbital1DM&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_orbital1_d_m"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>GQCP::SQOperatorStorage&lt; SquareRankFourTensor&lt; _Scalar &gt;, _Vectorizer, SimpleSQTwoElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_s_q_operator_storage"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>GQCP::T2Amplitudes&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_t2_amplitudes"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>GQCP::GSQOneElectronOperator&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_g_s_q_one_electron_operator"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>GQCP::Simple1DM&lt; _Scalar, G1DM&lt; _Scalar &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_simple1_d_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>GQCP::SQOperatorStorage&lt; SquareMatrix&lt; _Scalar &gt;, _Vectorizer, SimpleSQOneElectronOperator&lt; _Scalar, _Vectorizer, _DerivedOperator &gt; &gt;</label>
        <link refid="class_g_q_c_p_1_1_s_q_operator_storage"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GQCP::CRTP&lt; T &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="1">
        <label>GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_vector_space_arithmetic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>GQCP::PureSpinResolved2DMComponent&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_pure_spin_resolved2_d_m_component"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>GQCP::T1Amplitudes&lt; Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_t1_amplitudes"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>GQCP::SpinDensity1DM&lt; _Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_spin_density1_d_m"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GQCP::CRTP&lt; T &gt;</label>
        <link refid="class_g_q_c_p_1_1_c_r_t_p"/>
      </node>
      <node id="1">
        <label>GQCP::VectorSpaceArithmetic&lt; T, Scalar &gt;</label>
        <link refid="class_g_q_c_p_1_1_vector_space_arithmetic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" line="34" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/VectorSpaceArithmetic.hpp" bodystart="35" bodyend="111"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab72cbeb2fad6d811d4f6fcd2c962b55e" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>Derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1a2266d4aacaad437e302033b24e1d6d11" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_c_r_t_p_1ab53c6ca668c4f27dd4aa51856b6aee91" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>derived</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a8e3087bdbccdfe1867cf641004f1583f" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator*</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1ac0337d29a7eb98d1c3231a5a62fca84a" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator*</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a1ea665b4c39561433d116ee4b6c1d911" prot="public" virt="pure-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator*=</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a0a2a6d21024113554f979791e559e3ae" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator+</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a241d8217aa2b2f34384a4439a968d555" prot="public" virt="pure-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator+=</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a8c6ac2a457099f1f6070bc96b9700dfc" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator-</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a6b0d86c96ce2b6aaed10dc6d70a493bc" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator-</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a63a0cb54302a2d2f1d54af66e7527c4f" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator-=</name></member>
      <member refid="class_g_q_c_p_1_1_vector_space_arithmetic_1a19f7c84ce690c4e61c836248af518fb7" prot="public" virt="non-virtual"><scope>GQCP::VectorSpaceArithmetic</scope><name>operator/</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
