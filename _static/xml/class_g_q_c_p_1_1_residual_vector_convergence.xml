<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_residual_vector_convergence" kind="class" language="C++" prot="public">
    <compoundname>GQCP::ResidualVectorConvergence</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_convergence_criterion" prot="public" virt="non-virtual">GQCP::ConvergenceCriterion&lt; _Environment &gt;</basecompoundref>
    <includes refid="_residual_vector_convergence_8hpp" local="no">ResidualVectorConvergence.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Environment</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_residual_vector_convergence_1a7e5cb82e0596a4e6a326d726ed6c8bc4" prot="public" static="no">
        <type>_Environment</type>
        <definition>using GQCP::ResidualVectorConvergence&lt; _Environment &gt;::Environment =  _Environment</definition>
        <argsstring></argsstring>
        <name>Environment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="37" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_residual_vector_convergence_1aaccb162e0eae27f24f81fd5db5b883ba" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double GQCP::ResidualVectorConvergence&lt; _Environment &gt;::threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="41" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_residual_vector_convergence_1a7b375a337b8a3489f8e4f46f89281433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GQCP::ResidualVectorConvergence&lt; _Environment &gt;::ResidualVectorConvergence</definition>
        <argsstring>(const double threshold=1.0e-08)</argsstring>
        <name>ResidualVectorConvergence</name>
        <param>
          <type>const double</type>
          <declname>threshold</declname>
          <defval>1.0e-08</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>the threshold that is used in checking the norm of the residual vectors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="52" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_residual_vector_convergence_1a60eb61cd13e3663cdcca2c7a1f7a8dfd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string GQCP::ResidualVectorConvergence&lt; _Environment &gt;::description</definition>
        <argsstring>() const override</argsstring>
        <name>description</name>
        <reimplements refid="class_g_q_c_p_1_1_convergence_criterion_1a5d2993454005779f8a6376c63aec430c">description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a textual description of this algorithmic step </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="63" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_residual_vector_convergence_1aefd9d7262006ed781a52ee7238adc6b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool GQCP::ResidualVectorConvergence&lt; _Environment &gt;::isFulfilled</definition>
        <argsstring>(Environment &amp;environment) override</argsstring>
        <name>isFulfilled</name>
        <reimplements refid="class_g_q_c_p_1_1_convergence_criterion_1a84503e9b2b4bdd01188f21be512bc281">isFulfilled</reimplements>
        <param>
          <type><ref refid="class_g_q_c_p_1_1_convergence_criterion_1af1d80b82ec0172943d13c50a48cc1cb3" kindref="member">Environment</ref> &amp;</type>
          <declname>environment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>environment</parametername>
</parameternamelist>
<parameterdescription>
<para>the environment that acts as a sort of calculation space</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if the norm of each of the residual vectors is smaller than a threshold </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="73" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="73" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A convergence criterion that checks if the norm of each of the residual vectors is smaller than a threshold.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Environment</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the calculation environment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>GQCP::ConvergenceCriterion&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_convergence_criterion"/>
      </node>
      <node id="1">
        <label>GQCP::ResidualVectorConvergence&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_residual_vector_convergence"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GQCP::ConvergenceCriterion&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_convergence_criterion"/>
      </node>
      <node id="1">
        <label>GQCP::ResidualVectorConvergence&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_residual_vector_convergence"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" line="33" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Optimization/Eigenproblem/Davidson/ResidualVectorConvergence.hpp" bodystart="34" bodyend="84"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_residual_vector_convergence_1a60eb61cd13e3663cdcca2c7a1f7a8dfd" prot="public" virt="virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>description</name></member>
      <member refid="class_g_q_c_p_1_1_residual_vector_convergence_1a7e5cb82e0596a4e6a326d726ed6c8bc4" prot="public" virt="non-virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>Environment</name></member>
      <member refid="class_g_q_c_p_1_1_residual_vector_convergence_1aefd9d7262006ed781a52ee7238adc6b8" prot="public" virt="virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>isFulfilled</name></member>
      <member refid="class_g_q_c_p_1_1_residual_vector_convergence_1a7b375a337b8a3489f8e4f46f89281433" prot="public" virt="non-virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>ResidualVectorConvergence</name></member>
      <member refid="class_g_q_c_p_1_1_residual_vector_convergence_1aaccb162e0eae27f24f81fd5db5b883ba" prot="private" virt="non-virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>threshold</name></member>
      <member refid="class_g_q_c_p_1_1_convergence_criterion_1a4594ec2c922fcc9aafb6734e68fa158d" prot="public" virt="virtual"><scope>GQCP::ResidualVectorConvergence</scope><name>~ConvergenceCriterion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
