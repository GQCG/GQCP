<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_linear_combination_8hpp" kind="file" language="C++">
    <compoundname>LinearCombination.hpp</compoundname>
    <includes refid="_scalar_function_8hpp" local="yes">Mathematical/Functions/ScalarFunction.hpp</includes>
    <includes refid="_vector_space_arithmetic_8hpp" local="yes">Mathematical/Functions/VectorSpaceArithmetic.hpp</includes>
    <includes local="no">boost/format.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">vector</includes>
    <includedby refid="gqcp_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</includedby>
    <includedby refid="_g_t_o_shell_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/GTOShell.hpp</includedby>
    <includedby refid="_scalar_basis_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/ScalarBasis.hpp</includedby>
    <includedby refid="_spinor_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/Spinor.hpp</includedby>
    <includedby refid="_cartesian_g_t_o_8hpp" local="yes">/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/CartesianGTO.hpp</includedby>
    <incdepgraph>
      <node id="13">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="5">
        <label>Utilities/Eigen.hpp</label>
        <link refid="_eigen_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="2">
        <label>Mathematical/Functions/ScalarFunction.hpp</label>
        <link refid="_scalar_function_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>boost/format.hpp</label>
      </node>
      <node id="14">
        <label>fstream</label>
      </node>
      <node id="18">
        <label>Utilities/CRTP.hpp</label>
        <link refid="_c_r_t_p_8hpp"/>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/LinearCombination.hpp</label>
        <link refid="_linear_combination_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Mathematical/Representation/Matrix.hpp</label>
        <link refid="_matrix_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Utilities/type_traits.hpp</label>
        <link refid="type__traits_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="7">
        <label>Utilities/aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>complex</label>
      </node>
      <node id="4">
        <label>Mathematical/Functions/CartesianDirection.hpp</label>
        <link refid="_cartesian_direction_8hpp"/>
      </node>
      <node id="17">
        <label>Mathematical/Functions/VectorSpaceArithmetic.hpp</label>
        <link refid="_vector_space_arithmetic_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="115">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/USpinOrbitalBasisComponent.hpp</label>
        <link refid="_u_spin_orbital_basis_component_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFFockMatrixCalculation.hpp</label>
        <link refid="_r_h_f_fock_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHF.hpp</label>
        <link refid="_q_c_method_2_h_f_2_r_h_f_2_r_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFSCFSolver.hpp</label>
        <link refid="_g_h_f_s_c_f_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSDSolver.hpp</label>
        <link refid="_c_c_s_d_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFFockMatrixDiagonalization.hpp</label>
        <link refid="_u_h_f_fock_matrix_diagonalization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/PrimitiveAngularMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_angular_momentum_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCDSolver.hpp</label>
        <link refid="_c_c_d_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSDIntermediatesUpdate.hpp</label>
        <link refid="_c_c_s_d_intermediates_update_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFElectronicEnergyCalculation.hpp</label>
        <link refid="_g_h_f_electronic_energy_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSDEnergyCalculation.hpp</label>
        <link refid="_c_c_s_d_energy_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSDAmplitudesUpdate.hpp</label>
        <link refid="_c_c_s_d_amplitudes_update_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CC/CCD.hpp</label>
        <link refid="_q_c_model_2_c_c_2_c_c_d_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/Localization/ERNewtonLocalizer.cpp</label>
        <link refid="_e_r_newton_localizer_8cpp"/>
      </node>
      <node id="121">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/PrimitiveAngularMomentumIntegralEngine.cpp</label>
        <link refid="_primitive_angular_momentum_integral_engine_8cpp"/>
      </node>
      <node id="97">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/APIGGeminalCoefficients.cpp</label>
        <link refid="_a_p_i_g_geminal_coefficients_8cpp"/>
      </node>
      <node id="122">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/PrimitiveDipoleIntegralEngine.hpp</label>
        <link refid="_primitive_dipole_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.hpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFErrorCalculation.hpp</label>
        <link refid="_u_h_f_error_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/IntegralEngine.cpp</label>
        <link refid="_integral_engine_8cpp"/>
      </node>
      <node id="63">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFFockMatrixDIIS.hpp</label>
        <link refid="_u_h_f_fock_matrix_d_i_i_s_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libint_two_electron_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/CartesianGTO.hpp</label>
        <link refid="_cartesian_g_t_o_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHF.hpp</label>
        <link refid="_q_c_method_2_h_f_2_u_h_f_2_u_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibcintInterfacer.hpp</label>
        <link refid="_libcint_interfacer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFSCFSolver.hpp</label>
        <link refid="_r_h_f_s_c_f_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/GSpinorBasis.hpp</label>
        <link refid="_g_spinor_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/IntegralEngine.hpp</label>
        <link refid="_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/JacobiOrbitalOptimizer.cpp</label>
        <link refid="_jacobi_orbital_optimizer_8cpp"/>
      </node>
      <node id="49">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFDensityMatrixDamper.hpp</label>
        <link refid="_r_h_f_density_matrix_damper_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFDensityMatrixCalculation.hpp</label>
        <link refid="_g_h_f_density_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/SimpleSpinOrbitalBasis.hpp</label>
        <link refid="_simple_spin_orbital_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/Localization/ERNewtonLocalizer.hpp</label>
        <link refid="_e_r_newton_localizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/ScalarBasis/GTOShell.cpp</label>
        <link refid="_g_t_o_shell_8cpp"/>
      </node>
      <node id="6">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/IntegralCalculator.hpp</label>
        <link refid="_integral_calculator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/HF/RHF.hpp</label>
        <link refid="_q_c_model_2_h_f_2_r_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Transformations/transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFDensityMatrixCalculation.hpp</label>
        <link refid="_r_h_f_density_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>/__w/GQCP/GQCP/gqcp/src/Mathematical/Functions/CartesianGTO.cpp</label>
        <link refid="_cartesian_g_t_o_8cpp"/>
      </node>
      <node id="79">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CC/CCSD.hpp</label>
        <link refid="_q_c_model_2_c_c_2_c_c_s_d_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/ScalarBasis.hpp</label>
        <link refid="_scalar_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCDEnergyCalculation.hpp</label>
        <link refid="_c_c_d_energy_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFSCFEnvironment.hpp</label>
        <link refid="_r_h_f_s_c_f_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/vAP1roG.cpp</label>
        <link refid="v_a_p1ro_g_8cpp"/>
      </node>
      <node id="51">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFErrorCalculation.hpp</label>
        <link refid="_r_h_f_error_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/expectation_values.hpp</label>
        <link refid="expectation__values_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roGLagrangianNewtonOrbitalOptimizer.hpp</label>
        <link refid="_a_p1ro_g_lagrangian_newton_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFFockMatrixDiagonalization.hpp</label>
        <link refid="_g_h_f_fock_matrix_diagonalization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/PrimitiveDipoleIntegralEngine.cpp</label>
        <link refid="_primitive_dipole_integral_engine_8cpp"/>
      </node>
      <node id="109">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibintInterfacer.cpp</label>
        <link refid="_libint_interfacer_8cpp"/>
      </node>
      <node id="7">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/RSpinOrbitalBasis.hpp</label>
        <link refid="_r_spin_orbital_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFFockMatrixCalculation.hpp</label>
        <link refid="_u_h_f_fock_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFSolver.hpp</label>
        <link refid="_u_h_f_s_c_f_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/LinearCombination.hpp</label>
        <link refid="_linear_combination_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/Localization/ERJacobiLocalizer.cpp</label>
        <link refid="_e_r_jacobi_localizer_8cpp"/>
      </node>
      <node id="124">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/PrimitiveKineticEnergyIntegralEngine.hpp</label>
        <link refid="_primitive_kinetic_energy_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/vAP1roG.hpp</label>
        <link refid="_q_c_method_2_geminals_2v_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCDAmplitudesUpdate.hpp</label>
        <link refid="_c_c_d_amplitudes_update_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFElectronicEnergyCalculation.hpp</label>
        <link refid="_u_h_f_electronic_energy_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/HF/UHF.hpp</label>
        <link refid="_q_c_model_2_h_f_2_u_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/RHFElectricalResponseSolver.hpp</label>
        <link refid="_r_h_f_electrical_response_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGLagrangianNewtonOrbitalOptimizer.cpp</label>
        <link refid="_a_p1ro_g_lagrangian_newton_orbital_optimizer_8cpp"/>
      </node>
      <node id="73">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/QCMethodNewtonOrbitalOptimizer.cpp</label>
        <link refid="_q_c_method_newton_orbital_optimizer_8cpp"/>
      </node>
      <node id="87">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/AP1roGGeminalCoefficients.cpp</label>
        <link refid="_a_p1ro_g_geminal_coefficients_8cpp"/>
      </node>
      <node id="44">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFFockMatrixDIIS.hpp</label>
        <link refid="_g_h_f_fock_matrix_d_i_i_s_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCD.hpp</label>
        <link refid="_q_c_method_2_c_c_2_c_c_d_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/PrimitiveOverlapIntegralEngine.cpp</label>
        <link refid="_primitive_overlap_integral_engine_8cpp"/>
      </node>
      <node id="17">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/BaseElectricalResponseSolver.cpp</label>
        <link refid="_base_electrical_response_solver_8cpp"/>
      </node>
      <node id="37">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFSCFEnvironment.hpp</label>
        <link refid="_g_h_f_s_c_f_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/__w/GQCP/GQCP/gqcp/include/gqcp.hpp</label>
        <link refid="gqcp_8hpp"/>
      </node>
      <node id="11">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/BaseOrbitalOptimizer.cpp</label>
        <link refid="_base_orbital_optimizer_8cpp"/>
      </node>
      <node id="56">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFSCFEnvironment.hpp</label>
        <link refid="_u_h_f_s_c_f_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/PSEnvironment.hpp</label>
        <link refid="_p_s_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/BaseElectricalResponseSolver.hpp</label>
        <link refid="_base_electrical_response_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_model_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintOneElectronIntegralBuffer.hpp</label>
        <link refid="_libint_one_electron_integral_buffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/JacobiOrbitalOptimizer.hpp</label>
        <link refid="_jacobi_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/PrimitiveLinearMomentumIntegralEngine.hpp</label>
        <link refid="_primitive_linear_momentum_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CC/T1Amplitudes.hpp</label>
        <link refid="_t1_amplitudes_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/RHFElectricalResponseSolver.cpp</label>
        <link refid="_r_h_f_electrical_response_solver_8cpp"/>
      </node>
      <node id="92">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CI/LinearExpansion.hpp</label>
        <link refid="_linear_expansion_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibcintOneElectronIntegralEngine.hpp</label>
        <link refid="_libcint_one_electron_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/PrimitiveLinearMomentumIntegralEngine.cpp</label>
        <link refid="_primitive_linear_momentum_integral_engine_8cpp"/>
      </node>
      <node id="41">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFErrorCalculation.hpp</label>
        <link refid="_g_h_f_error_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHF.hpp</label>
        <link refid="_q_c_method_2_h_f_2_g_h_f_2_g_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/AP1roG.cpp</label>
        <link refid="_a_p1ro_g_8cpp"/>
      </node>
      <node id="88">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/HF/GHF.hpp</label>
        <link refid="_q_c_model_2_h_f_2_g_h_f_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/BaseOrbitalOptimizer.hpp</label>
        <link refid="_base_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/vAP1roGElectricalResponseSolver.cpp</label>
        <link refid="v_a_p1ro_g_electrical_response_solver_8cpp"/>
      </node>
      <node id="98">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/GeminalCoefficientsInterface.hpp</label>
        <link refid="_geminal_coefficients_interface_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/Interfaces/LibcintInterfacer.cpp</label>
        <link refid="_libcint_interfacer_8cpp"/>
      </node>
      <node id="93">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/DysonOrbital.hpp</label>
        <link refid="_dyson_orbital_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/Integrals/PrimitiveKineticEnergyIntegralEngine.cpp</label>
        <link refid="_primitive_kinetic_energy_integral_engine_8cpp"/>
      </node>
      <node id="100">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/USpinOrbitalBasis.hpp</label>
        <link refid="_u_spin_orbital_basis_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/__w/GQCP/GQCP/gqcp/src/QCModel/Geminals/GeminalCoefficientsInterface.cpp</label>
        <link refid="_geminal_coefficients_interface_8cpp"/>
      </node>
      <node id="32">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/Geminals/AP1roGJacobiOrbitalOptimizer.cpp</label>
        <link refid="_a_p1ro_g_jacobi_orbital_optimizer_8cpp"/>
      </node>
      <node id="77">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/RMP2/RMP2.hpp</label>
        <link refid="_r_m_p2_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/vAP1roG.hpp</label>
        <link refid="_q_c_model_2_geminals_2v_a_p1ro_g_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/vAP1roGElectricalResponseSolver.hpp</label>
        <link refid="v_a_p1ro_g_electrical_response_solver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintInterfacer.hpp</label>
        <link refid="_libint_interfacer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibcintTwoElectronIntegralEngine.hpp</label>
        <link refid="_libcint_two_electron_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/DiagonalRHFFockMatrixObjective.hpp</label>
        <link refid="_diagonal_r_h_f_fock_matrix_objective_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCDIntermediatesUpdate.hpp</label>
        <link refid="_c_c_d_intermediates_update_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFFockMatrixDIIS.hpp</label>
        <link refid="_r_h_f_fock_matrix_d_i_i_s_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>/__w/GQCP/GQCP/gqcp/include/Processing/Properties/properties.hpp</label>
        <link refid="properties_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CI/CI.hpp</label>
        <link refid="_c_i_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/__w/GQCP/GQCP/gqcp/src/Processing/Properties/properties.cpp</label>
        <link refid="properties_8cpp"/>
      </node>
      <node id="128">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/PrimitiveOverlapIntegralEngine.hpp</label>
        <link refid="_primitive_overlap_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/CC/T2Amplitudes.hpp</label>
        <link refid="_t2_amplitudes_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/Localization/ERJacobiLocalizer.hpp</label>
        <link refid="_e_r_jacobi_localizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/ShellSet.hpp</label>
        <link refid="_shell_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/AP1roGGeminalCoefficients.hpp</label>
        <link refid="_a_p1ro_g_geminal_coefficients_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/GTOBasisSet.hpp</label>
        <link refid="_g_t_o_basis_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSDEnvironment.hpp</label>
        <link refid="_c_c_s_d_environment_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/OneElectronIntegralEngine.hpp</label>
        <link refid="_one_electron_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFFockMatrixDiagonalization.hpp</label>
        <link refid="_r_h_f_fock_matrix_diagonalization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/GHF/GHFFockMatrixCalculation.hpp</label>
        <link refid="_g_h_f_fock_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/Integrals/Interfaces/LibintOneElectronIntegralEngine.hpp</label>
        <link refid="_libint_one_electron_integral_engine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/RHF/RHFElectronicEnergyCalculation.hpp</label>
        <link refid="_r_h_f_electronic_energy_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/ScalarBasis/GTOShell.hpp</label>
        <link refid="_g_t_o_shell_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/QCMethodNewtonOrbitalOptimizer.hpp</label>
        <link refid="_q_c_method_newton_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>/__w/GQCP/GQCP/gqcp/include/QCModel/Geminals/APIGGeminalCoefficients.hpp</label>
        <link refid="_a_p_i_g_geminal_coefficients_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>/__w/GQCP/GQCP/gqcp/src/QCMethod/OrbitalOptimization/NewtonOrbitalOptimizer.cpp</label>
        <link refid="_newton_orbital_optimizer_8cpp"/>
      </node>
      <node id="26">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/CC/CCSD.hpp</label>
        <link refid="_q_c_method_2_c_c_2_c_c_s_d_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/OrbitalOptimization/NewtonOrbitalOptimizer.hpp</label>
        <link refid="_newton_orbital_optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/HF/UHF/UHFDensityMatrixCalculation.hpp</label>
        <link refid="_u_h_f_density_matrix_calculation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/__w/GQCP/GQCP/gqcp/include/Operator/SecondQuantized/SQHamiltonian.hpp</label>
        <link refid="_s_q_hamiltonian_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>/__w/GQCP/GQCP/gqcp/include/Basis/SpinorBasis/Spinor.hpp</label>
        <link refid="_spinor_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>/__w/GQCP/GQCP/gqcp/src/Basis/ScalarBasis/GTOBasisSet.cpp</label>
        <link refid="_g_t_o_basis_set_8cpp"/>
      </node>
      <node id="31">
        <label>/__w/GQCP/GQCP/gqcp/include/QCMethod/Geminals/AP1roG.hpp</label>
        <link refid="_q_c_method_2_geminals_2_a_p1ro_g_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_g_q_c_p_1_1_linear_combination" prot="public">GQCP::LinearCombination</innerclass>
    <innerclass refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4" prot="public">Eigen::NumTraits&lt; GQCP::LinearCombination&lt; CoefficientScalar, Function &gt; &gt;</innerclass>
    <innerclass refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scd3f0f9538879323a222846a319bc3805" prot="public">Eigen::ScalarBinaryOpTraits&lt; GQCP::LinearCombination&lt; CoefficientScalar, Function &gt;, CoefficientScalar, Eigen::internal::scalar_product_op&lt; GQCP::LinearCombination&lt; CoefficientScalar, Function &gt;, CoefficientScalar &gt; &gt;</innerclass>
    <innerclass refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_coefficient_scalar_00_01_g_q_c_p_1_1_linear_combin27d5919433975a61cb93034b544f47a7" prot="public">Eigen::ScalarBinaryOpTraits&lt; CoefficientScalar, GQCP::LinearCombination&lt; CoefficientScalar, Function &gt;, Eigen::internal::scalar_product_op&lt; CoefficientScalar, GQCP::LinearCombination&lt; CoefficientScalar, Function &gt; &gt; &gt;</innerclass>
    <innernamespace refid="namespace_g_q_c_p">GQCP</innernamespace>
    <innernamespace refid="namespace_eigen">Eigen</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GQCG-GQCP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017-2020<sp/><sp/>the<sp/>GQCG<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GQCG-GQCP<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GQCG-GQCP.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_scalar_function_8hpp" kindref="compound">Mathematical/Functions/ScalarFunction.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vector_space_arithmetic_8hpp" kindref="compound">Mathematical/Functions/VectorSpaceArithmetic.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_CoefficientScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Function&gt;</highlight></codeline>
<codeline lineno="40" refid="class_g_q_c_p_1_1_linear_combination" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_scalar_function" kindref="compound">ScalarFunction</ref>&lt;typename<sp/>_Function::Valued,<sp/>typename<sp/>_Function::Scalar,<sp/>_Function::Cols&gt;,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_vector_space_arithmetic" kindref="compound">VectorSpaceArithmetic</ref>&lt;LinearCombination&lt;_CoefficientScalar,<sp/>_Function&gt;,<sp/>_CoefficientScalar&gt;<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref><sp/>=<sp/>_CoefficientScalar;</highlight></codeline>
<codeline lineno="46" refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref><sp/>=<sp/>_Function;</highlight></codeline>
<codeline lineno="47" refid="class_g_q_c_p_1_1_linear_combination_1a17f9aa2e3e8560d7d06ecc9b70a770b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Self</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;<ref refid="class_g_q_c_p_1_1_scalar_function" kindref="compound">ScalarFunction&lt;typename Function::Valued, typename Function::Scalar, Function::Cols&gt;</ref>,<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref>&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;LinearCombination:<sp/>Function<sp/>must<sp/>derive<sp/>from<sp/>ScalarFunction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CoefficientScalar&gt;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" kindref="member">m_coefficients</ref>;</highlight></codeline>
<codeline lineno="54" refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Function&gt;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" kindref="member">m_functions</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_g_q_c_p_1_1_linear_combination_1a5deb54db936533aef06fbfe926b3e6cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a5deb54db936533aef06fbfe926b3e6cd" kindref="member">LinearCombination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CoefficientScalar&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Function&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>)<sp/>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" kindref="member">m_coefficients</ref><sp/>{<ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" kindref="member">m_functions</ref><sp/>{<ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>}<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>.size()<sp/>!=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;LinearCombination(std::vector&lt;CoefficientScalar&gt;,<sp/>std::vector&lt;Function&gt;):<sp/>the<sp/>number<sp/>of<sp/>coefficients<sp/>and<sp/>functions<sp/>should<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_g_q_c_p_1_1_linear_combination_1a530df5ec8d38d23b815deda6000e994a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a530df5ec8d38d23b815deda6000e994a" kindref="member">LinearCombination</ref>()<sp/>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>(std::vector&lt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&gt;<sp/>{},<sp/>std::vector&lt;Function&gt;<sp/>{})<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_g_q_c_p_1_1_linear_combination_1a476e90c59cd79b35e6518ade741b688f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a476e90c59cd79b35e6518ade741b688f" kindref="member">LinearCombination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref>&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>(std::vector&lt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&gt;<sp/>{<ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>},<sp/>std::vector&lt;Function&gt;<sp/>{</highlight><highlight class="keyword">function</highlight><highlight class="normal">})<sp/>{}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_g_q_c_p_1_1_linear_combination_1ad8a7eecb3dd78a52e14e2e0dbbb037d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad8a7eecb3dd78a52e14e2e0dbbb037d8" kindref="member">LinearCombination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref>&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>(1.0,<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a5f1d1cd869a8bfb3ab06ef15ad130079" kindref="member">function</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_g_q_c_p_1_1_linear_combination_1afe1eff6e0fb2876629180fb523ef1690" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe1eff6e0fb2876629180fb523ef1690" kindref="member">LinearCombination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>literal)<sp/>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(literal<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;LinearCombination(const<sp/>int):<sp/>Can&apos;t<sp/>convert<sp/>a<sp/>non-zero<sp/>integer<sp/>to<sp/>a<sp/>&apos;zero&apos;<sp/>instance.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>Vector<sp/>space<sp/>arithmetic</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_g_q_c_p_1_1_linear_combination_1a15c5f29c13d41d78cdfd6604ea21bd63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Self</ref>&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a15c5f29c13d41d78cdfd6604ea21bd63" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Self</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1ad26dd005afa28694789975e49e007264" kindref="member">append</ref>(rhs.<ref refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" kindref="member">m_coefficients</ref>,<sp/>rhs.<ref refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" kindref="member">m_functions</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_g_q_c_p_1_1_linear_combination_1ac99cb8ad362edfa97cfc0e70fbb67396" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Self</ref>&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ac99cb8ad362edfa97cfc0e70fbb67396" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(a)<sp/>&lt;<sp/>1.0e-16)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>multiplication<sp/>by<sp/>zero<sp/>returns<sp/>a<sp/>&apos;zero<sp/>vector&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_coefficients<sp/>=<sp/>std::vector&lt;CoefficientScalar&gt;<sp/>{};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_functions<sp/>=<sp/>std::vector&lt;Function&gt;<sp/>{};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g_q_c_p_1afed89df1a3e5cf5d125edc3e66e81f06" kindref="member">std::transform</ref>(this-&gt;m_coefficients.begin(),<sp/>this-&gt;m_coefficients.end(),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_coefficients.begin(),<sp/>[a](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&amp;<sp/>C)<sp/>{<sp/>return<sp/>C<sp/>*<sp/>a;<sp/>});</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MARK:<sp/>operators</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_g_q_c_p_1_1_linear_combination_1a05326646f786a37fb6021b664fefe52b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function::Valued<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a05326646f786a37fb6021b664fefe52b" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_matrix" kindref="compound">Vector&lt;typename Function::Scalar, Function::Cols&gt;</ref>&amp;<sp/><ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>this-&gt;m_functions.size();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref><sp/>value<sp/>{};<sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>this-&gt;m_coefficients[i]<sp/>*<sp/>this-&gt;m_functions[i].operator()(<ref refid="namespace_g_q_c_p_1ac4c016a1668ae66892e5b4d8846613e8a2bb47fa9aafe67dde5d4e205193140b5" kindref="member">x</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>evaluate<sp/>every<sp/>function<sp/>of<sp/>the<sp/>linear<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_g_q_c_p_1_1_linear_combination_1a429ff421b01ab1a7d246d8732a4187b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a429ff421b01ab1a7d246d8732a4187b5" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">LinearCombination&lt;CoefficientScalar, Function&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;m_coefficients<sp/>==<sp/>rhs.<ref refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" kindref="member">m_coefficients</ref>)<sp/>&amp;&amp;<sp/>(this-&gt;m_functions<sp/>==<sp/>rhs.<ref refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" kindref="member">m_functions</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>PUBLIC<sp/>METHODS</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="class_g_q_c_p_1_1_linear_combination_1ad26dd005afa28694789975e49e007264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad26dd005afa28694789975e49e007264" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref>&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>enlarge<sp/>the<sp/>linear<sp/>combination<sp/>for<sp/>sufficiently<sp/>large<sp/>coefficients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(<ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>)<sp/>&lt;<sp/>1.0e-16)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_coefficients.push_back(<ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_functions.push_back(</highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_g_q_c_p_1_1_linear_combination_1a240498541cac1e8f410669d0d0a79f7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a240498541cac1e8f410669d0d0a79f7c" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CoefficientScalar&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Function&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>.size()<sp/>!=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;LinearCombination::append(const<sp/>std::vector&lt;CoefficientScalar&gt;&amp;,<sp/>const<sp/>std::vector&lt;Function&gt;&amp;):<sp/>the<sp/>number<sp/>of<sp/>coefficients<sp/>and<sp/>functions<sp/>should<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_coefficients.insert(this-&gt;m_coefficients.end(),<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>.begin(),<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>.end());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_functions.insert(this-&gt;m_functions.end(),<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>.begin(),<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>.end());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a906c96e91fb72040b8569d7b52431def" kindref="member">CoefficientScalar</ref>&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_coefficients[i];<sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CoefficientScalar&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a2de5ef5b611b84d4ad995f920bbb7a90" kindref="member">coefficients</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a5b2762cb58291d1762129cbbc41bcc16" kindref="member">m_coefficients</ref>;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a68e466207ba14c686ac02153d669c19c" kindref="member">length</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>coefficient<sp/>and<sp/>the<sp/>function&apos;s<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref><sp/>+=<sp/>(boost::format(</highlight><highlight class="stringliteral">&quot;(%|.3f|)<sp/>%s&quot;</highlight><highlight class="normal">)<sp/>%<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a3d7f4a7e6591a5df07005757294a8606" kindref="member">coefficient</ref>(i)<sp/>%<sp/>this-&gt;</highlight><highlight class="keyword">function</highlight><highlight class="normal">(i).<ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref>()).str();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>&apos;+&apos;<sp/>when<sp/>we&apos;re<sp/>not<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1a68e466207ba14c686ac02153d669c19c" kindref="member">length</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ad673a928e803bd5ded9e0cc0e0238824" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_g_q_c_p_1_1_linear_combination_1a5f1d1cd869a8bfb3ab06ef15ad130079" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1ae941948123a3f8c63b88b29eb54a18b7" kindref="member">Function</ref>&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_functions[i];<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Function&gt;&amp;<sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1afe3be35229e045ed20fdbcd71c98da1c" kindref="member">functions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_g_q_c_p_1_1_linear_combination_1aa8f2006b30a4d99ce41a81d5d2ed67c9" kindref="member">m_functions</ref>;<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_g_q_c_p_1_1_linear_combination_1a68e466207ba14c686ac02153d669c19c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination_1a68e466207ba14c686ac02153d669c19c" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_coefficients.size();<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>GQCP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/><sp/>Make<sp/>GQCP::LinearCombination&lt;Function&gt;<sp/>an<sp/>Eigen<sp/>scalar<sp/>type.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="namespace_eigen" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_eigen" kindref="compound">Eigen</ref><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CoefficientScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="280" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumTraits&lt;<ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref>::LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;&gt;:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NumTraits&lt;double&gt;<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>permits<sp/>to<sp/>get<sp/>the<sp/>epsilon,<sp/>dummy_precision,<sp/>lowest,<sp/>highest<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1aa37d8fc339d70af36cec5a15916cd85f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Real</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">GQCP::LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="284" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1acf4e18d58bd73fac580b00f5aff12478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">NonInteger</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">GQCP::LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="285" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1a853a52ed029e6d4d73a74e5756d2b90c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">Nested</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">GQCP::LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a7e59903b26ed48e2b7c05579755f1549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g_q_c_p_1a3ce6a14846d6795ad08dda8abbf505bc" kindref="member">IsComplex</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="289" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a192cd2c62eb8f5cba0203a794ded89b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsInteger<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="290" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a74ebeaa23a13a10941affc571130385e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsSigned<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="291" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a00826ff8410a8a3eafa80f9f99d1af84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequireInitialization<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="292" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130add2e4fabcdf7cd3594271e1e9735a0e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadCost<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="293" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a016854688b51840473a28cb83f825493" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCost<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MulCost<sp/>=<sp/>1000<sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>put<sp/>something<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="struct_eigen_1_1_num_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scalar_00_01_function_01_4_01_4_1ae4ba4578ff8eb73722aefdc81f829130a3ac1ff586ad830a86ad645a7fcb0fd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>scalar<sp/>product<sp/>of<sp/>a<sp/>LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;<sp/>with<sp/>its<sp/>own<sp/>CoefficientScalar<sp/>(both<sp/>sides).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CoefficientScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="302" refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scd3f0f9538879323a222846a319bc3805" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScalarBinaryOpTraits&lt;<ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref>::LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;,<sp/>CoefficientScalar,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::internal::scalar_product_op&lt;GQCP::LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;,<sp/>CoefficientScalar&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_g_q_c_p_1_1_linear_combination_3_01_coefficient_scd3f0f9538879323a222846a319bc3805_1afcc3666cb4f77d8e5ccec37235023406" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">ReturnType</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">GQCP::LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CoefficientScalar,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="309" refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_coefficient_scalar_00_01_g_q_c_p_1_1_linear_combin27d5919433975a61cb93034b544f47a7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScalarBinaryOpTraits&lt;CoefficientScalar,<sp/><ref refid="namespace_g_q_c_p" kindref="compound">GQCP</ref>::LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::internal::scalar_product_op&lt;CoefficientScalar,<sp/>GQCP::LinearCombination&lt;CoefficientScalar,<sp/>Function&gt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="struct_eigen_1_1_scalar_binary_op_traits_3_01_coefficient_scalar_00_01_g_q_c_p_1_1_linear_combin27d5919433975a61cb93034b544f47a7_1a0a363e69bd82e89136019447deb18366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">ReturnType</ref><sp/>=<sp/><ref refid="class_g_q_c_p_1_1_linear_combination" kindref="compound">GQCP::LinearCombination&lt;CoefficientScalar, Function&gt;</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Eigen</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Functions/LinearCombination.hpp"/>
  </compounddef>
</doxygen>
