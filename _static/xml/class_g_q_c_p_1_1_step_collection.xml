<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_g_q_c_p_1_1_step_collection" kind="class" language="C++" prot="public">
    <compoundname>GQCP::StepCollection</compoundname>
    <basecompoundref refid="class_g_q_c_p_1_1_step" prot="public" virt="non-virtual">GQCP::Step&lt; _Environment &gt;</basecompoundref>
    <includes refid="_step_collection_8hpp" local="no">StepCollection.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Environment</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" prot="public" static="no">
        <type>_Environment</type>
        <definition>using GQCP::StepCollection&lt; _Environment &gt;::Environment =  _Environment</definition>
        <argsstring></argsstring>
        <name>Environment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="43" column="5" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_q_c_p_1_1_step_collection_1abc1ad0d96b57101ce70745988dda1460" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_g_q_c_p_1_1_step" kindref="compound">Step</ref>&lt; <ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Step&lt;Environment&gt; &gt; &gt; GQCP::StepCollection&lt; _Environment &gt;::steps</definition>
        <argsstring></argsstring>
        <name>steps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="47" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a4f63e6c1cb7d7de973cbb4212e5ba699" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string GQCP::StepCollection&lt; _Environment &gt;::description</definition>
        <argsstring>() const override</argsstring>
        <name>description</name>
        <reimplements refid="class_g_q_c_p_1_1_step_1af2276da3e9eef7f8d2049a8aa255b9fb">description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a textual description of this algorithmic step </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="58" column="17" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a227f70ef9375810de6e45dfbc23fc034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GQCP::StepCollection&lt; _Environment &gt;::execute</definition>
        <argsstring>(Environment &amp;environment) override</argsstring>
        <name>execute</name>
        <reimplements refid="class_g_q_c_p_1_1_step_1afc654a62596b3fff0801acb2d993818f">execute</reimplements>
        <param>
          <type><ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref> &amp;</type>
          <declname>environment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute all the steps in this collection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>environment</parametername>
</parameternamelist>
<parameterdescription>
<para>the environment that this step can read from and write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="75" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a564aa7135354b9c6af9b0b0114d534d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Z</type>
            <defval><ref refid="class_g_q_c_p_1_1_step" kindref="compound">Step</ref>&lt;<ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; <ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>, typename Z::Environment &gt;::value, <ref refid="class_g_q_c_p_1_1_step_collection" kindref="compound">StepCollection</ref>&lt; <ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref> &gt; &amp; &gt;</type>
        <definition>enable_if_t&lt;std::is_same&lt;Environment, typename Z::Environment&gt;::value, StepCollection&lt;Environment&gt;&amp;&gt; GQCP::StepCollection&lt; _Environment &gt;::add</definition>
        <argsstring>(const Z &amp;step)</argsstring>
        <name>add</name>
        <param>
          <type>const Z &amp;</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new step to the collection of steps.</para>
<para><simplesect kind="return"><para>the modified collection of steps, in order to allow chaining. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="92" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a009873ccc611a2c200c15d51e0c38e2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Z</type>
            <defval><ref refid="class_g_q_c_p_1_1_step" kindref="compound">Step</ref>&lt;<ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; <ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>, typename Z::Environment &gt;::value, void &gt;</type>
        <definition>enable_if_t&lt;std::is_same&lt;Environment, typename Z::Environment&gt;::value, void&gt; GQCP::StepCollection&lt; _Environment &gt;::insert</definition>
        <argsstring>(const Z &amp;step, const size_t index)</argsstring>
        <name>insert</name>
        <param>
          <type>const Z &amp;</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert an algorithm step at the given index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>the step that should be inserted into this algorithm step collection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero-based index that the given step should be performed at in the total collection of steps </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="105" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="105" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a0fa34cf0088c63bffa9c1abc1a8dd8c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GQCP::StepCollection&lt; _Environment &gt;::numberOfSteps</definition>
        <argsstring>() const</argsstring>
        <name>numberOfSteps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of steps that are in this consecutive collection </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="128" column="12" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a7b03c30ebdc23920b3872a4409e887df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GQCP::StepCollection&lt; _Environment &gt;::remove</definition>
        <argsstring>(const size_t index)</argsstring>
        <name>remove</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the step at the given index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero-based index of the step in this collection that should be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="136" column="10" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_g_q_c_p_1_1_step_collection_1a10234ffefae0fbec6949dc0a85902323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Z</type>
            <defval><ref refid="class_g_q_c_p_1_1_step" kindref="compound">Step</ref>&lt;<ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_g_q_c_p_1a006e5cafd5827d2685c9e0bb7e01cfa2" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; <ref refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" kindref="member">Environment</ref>, typename Z::Environment &gt;::value, void &gt;</type>
        <definition>enable_if_t&lt;std::is_same&lt;Environment, typename Z::Environment&gt;::value, void&gt; GQCP::StepCollection&lt; _Environment &gt;::replace</definition>
        <argsstring>(const Z &amp;step, const size_t index)</argsstring>
        <name>replace</name>
        <param>
          <type>const Z &amp;</type>
          <declname>step</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace an algorithm step at the given index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>the step that should be inserted into this algorithm </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the zero-based index of the step that should be replaced </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="148" column="18" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="148" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A collection of steps to be executed in a consecutive order.</para>
<para>This iteration cycle maintains the ownership of its constituting steps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_Environment</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the environment that this iteration step can read from and write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>GQCP::Step&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_step"/>
      </node>
      <node id="1">
        <label>GQCP::StepCollection&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_step_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GQCP::Step&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_step"/>
      </node>
      <node id="1">
        <label>GQCP::StepCollection&lt; _Environment &gt;</label>
        <link refid="class_g_q_c_p_1_1_step_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" line="41" column="1" bodyfile="/__w/GQCP/GQCP/gqcp/include/Mathematical/Algorithm/StepCollection.hpp" bodystart="41" bodyend="151"/>
    <listofallmembers>
      <member refid="class_g_q_c_p_1_1_step_collection_1a564aa7135354b9c6af9b0b0114d534d7" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>add</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a4f63e6c1cb7d7de973cbb4212e5ba699" prot="public" virt="virtual"><scope>GQCP::StepCollection</scope><name>description</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a9a2b54cf182fc7117d01c91b9031eec0" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>Environment</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a227f70ef9375810de6e45dfbc23fc034" prot="public" virt="virtual"><scope>GQCP::StepCollection</scope><name>execute</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a009873ccc611a2c200c15d51e0c38e2b" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>insert</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a0fa34cf0088c63bffa9c1abc1a8dd8c2" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>numberOfSteps</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a7b03c30ebdc23920b3872a4409e887df" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>remove</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1a10234ffefae0fbec6949dc0a85902323" prot="public" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>replace</name></member>
      <member refid="class_g_q_c_p_1_1_step_collection_1abc1ad0d96b57101ce70745988dda1460" prot="private" virt="non-virtual"><scope>GQCP::StepCollection</scope><name>steps</name></member>
      <member refid="class_g_q_c_p_1_1_step_1a013c882b1c3e8c18babbe1a478382cb0" prot="public" virt="virtual"><scope>GQCP::StepCollection</scope><name>~Step</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
