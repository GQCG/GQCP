#ifndef Tensor_h
#define Tensor_h


#include <unsupported/Eigen/CXX11/Tensor>


namespace GQCP {


/**
 *  An extension of the Eigen::Tensor class, with extra operations
 *
 *  We have decided to inherit from Eigen::Tensor, because we will use different hierarchies: see also: https://eigen.tuxfamily.org/dox-devel/TopicCustomizing_InheritingMatrix.html
 */
template <typename _Scalar, int _Rank>
class Tensor : public Eigen::Tensor<_Scalar, _Rank> {
public:

    using Scalar = _Scalar;
    enum {
        Rank = _Rank
    };

    using Base = Eigen::Tensor<Scalar, Rank>;


public:

    /*
     *  CONSTRUCTORS
     */

    /**
     *  Default constructor
     */
    Tensor() : Base() {}


    /**
     *  Constructor from Eigen expressions
     *
     *  @tparam OtherDerived        the type of the Eigen expression (normally generated by the compiler)
     *  @tparam AccessLevel         the access level of the TensorBase (normally generated by the compiler)
     *  @param other                the Eigen expression
     */
    template <typename OtherDerived, int AccessLevel>
    Tensor(const Eigen::TensorBase<OtherDerived, AccessLevel>& other) :
        Base(other)
    {}
};


}  // namespace GQCP


#endif  /* Tensor_h */
